{"version":3,"sources":["appConfig.js","Components/SongUtils.js","Components/Instrument.js","Components/mainPage/Note.js","Components/mainPage/Keyboard.js","assets/images/mainpage.png","assets/images/composer.png","assets/images/songs.png","Components/mainPage/Menu.js","Components/SettingsObj.js","Components/AsyncPrompts.js","assets/icons/rotate.svg","Components/mainPage/App.js","assets/icons/addCell.svg","assets/icons/removeCell.svg","Components/Composer/useDebounce.js","Components/Composer/MidiParser.js","Components/Composer/ComposerTools.js","Components/Composer/ComposerNote.js","Components/Composer/MultiSwitch.js","Components/Composer/ComposerKeyboard.js","Components/Composer/ComposerCache.js","Components/Composer/ComposerCanvas.js","Components/Composer/Menu.js","Components/Composer/Composer.js","Components/ErrorPage.js","serviceWorkerRegistration.js","index.js"],"names":["appName","process","console","log","cssClasses","noteComposer","note","instruments","notesPerColumn","instrumentsData","Lyre","notes","Zither","DunDun","Bells","Trumpet","Contrabass","Drum","Flute","Guitar","HandPan","ToyUkulele","Harp","Horn","Piano","Pipa","Kalimba","WinterPiano","Xylophone","Ocarina","layoutData","keyboardLayout","split","mobileLayout","keyboardCodes","keyNames","Sky","Genshin","pitchArr","composerNotePositions","reverse","importNotePositions","layoutImages","Recording","init","start","Date","getTime","addNote","index","length","push","this","Song","name","data","version","bpm","pitch","isComposed","isComposedVersion","Object","entries","forEach","entry","LoggerEvent","title","text","timeout","trigger","window","dispatchEvent","event","undefined","CustomEvent","detail","PlayingSong","timestamp","FileDownloader","type","download","file","dataType","encodeURIComponent","el","document","createElement","style","body","appendChild","setAttribute","click","remove","TempoChangers","id","changer","color","ComposedSong","breakpoints","columns","selected","Array","fill","e","column","Column","tempoChanger","ComposerSongDeSerialization","song","obj","columnObj","ColumnNote","ComposerToRecording","recordedSong","bpmPerMs","Math","floor","totalTime","ComposerSongSerialization","columnArr","map","layer","prepareSongDownload","finalSong","JSON","parse","stringify","oldFormatNotes","convertedNotes","noteObj","key","time","l","composedToOldFormat","recordedToOldFormat","pitchLevel","indexOf","songNotes","bitsPerPage","isEncrypted","prepareSongImport","isArray","includes","getSongType","Error","result","filter","self","findIndex","n","genshinLayout","Number","RecordingToComposed","oldSkyToNewFormat","instrument","newSkyFormatToGenshin","bpmToMs","composed","converted","grouped","threshold","row","shift","amount","i","splice","groupByNotes","combinations","columnNote","difference","paddingColumns","finalPadding","col","getPitchChanger","pow","toFixed","NoteData","noteNames","url","buffer","ArrayBuffer","Instrument","instrumentName","getNoteFromCode","code","String","setBuffers","bufferArray","layout","changeVolume","newVolume","gain","value","load","audioContext","a","createGain","emptyBuffer","createBuffer","sampleRate","requests","Promise","resolve","fetch","then","arrayBuffer","decodeAudioData","catch","all","buffers","instrumentNameTemp","GainNode","instrumentData","keyboard","mobile","Note","props","state","className","clicked","toBeClicked","toBeClickedNext","animation","transition","fadeTime","onPointerDown","preventDefault","clickAction","draggable","alt","src","noteImage","noteText","Component","Keyboard","handleKeyboard","repeat","activeElement","tagName","replace","handleClick","handlePlayEvent","setState","playTimestamp","playSong","handlePracticeEvent","practiceSong","loadInstrument","newInstrument","songLength","chunks","chunk","delay","startTime","j","songToPractice","setSlider","size","position","changeSliderPosition","sliderState","functions","changeSliderState","previous","delayMs","playSound","stopSong","indexClicked","isRecording","handleRecording","setTimeout","source","createBufferSource","playbackRate","caveMode","connect","reverbAudioContext","destination","AudioContext","webkitAudioContext","loadReverb","addEventListener","removeEventListener","audioCtx","r","b","impulse_response","convolver","createConvolver","gainNode","keyboardSize","keyboardClass","transform","marginBottom","find","noteNameType","ms","workerTimers","Menu","checkPersistentStorage","navigator","storage","persist","persisted","isPersisted","isPersistentStorage","handleSearchInput","searchInput","clearSearch","searchedSongs","searchStatus","searchSongs","trim","encodeURI","json","fetchedSongs","error","toggleMenu","override","newState","open","selectSideMenu","selection","selectedMenu","changeSelectedSongType","selectedSongType","importSong","reader","FileReader","songsInput","target","addSong","readAsText","downloadSong","_id","songName","song1","toLowerCase","downloadAllSongs","toDownload","songs","fileDownloader","date","toISOString","sideClass","handleSettingChange","changePage","composedSongs","searchedSongFunctions","CloseMenu","action","icon","faInfo","faMusic","faCog","faCompactDisc","MenuPanel","visible","onClick","onChange","SongRow","marginTop","paddingTop","width","display","justifyContent","marginLeft","settings","SettingsRow","objKey","update","checkIfTWA","href","rel","placeholder","onKeyDown","onInput","faTimes","faSearch","SearchedSong","mainPageImg","faCrosshairs","faDownload","composerImg","Key","songsImg","children","useState","valueHook","setter","options","checked","onBlur","deleteSong","removeSong","faTrash","MenuItem","play","sessionStorage","getItem","ComposerSettings","settingVesion","songSetting","volume","layer2","layer3","beatMarks","isMobile","columnsPerCanvas","autosave","MainPageSettings","asyncPrompt","question","container","innerText","input","cancel","ok","append","classList","add","asyncConfirm","background","App","resetDrag","isDragging","handleDragOver","handleDrag","handleDrop","from","dataTransfer","files","getSettings","storedSettings","localStorage","updateSettings","setItem","setting","syncSongs","dbCol","toArray","keyboardData","oldState","practicingSong","thereIsSong","songExists","findOne","insert","recording","handleSliderEvent","playingSong","lastPlayedSong","askForSongName","promptString","toggleRecord","eventData","db","ZangoDb","Db","collection","keyboardFunctions","menuFunctions","menuData","rotateImg","faStop","min","max","faSyncAlt","GenshinButton","active","isTwa","referrer","setIfInTWA","useDebounce","debouncedValue","setDebouncedValue","useEffect","handler","clearTimeout","Track","editTrack","dataShown","setDataShown","textAlign","family","cursor","numberOfAccidentals","numberOfOutOfRange","MidiImport","fileName","midi","offset","accidentals","outOfRange","totalNotes","includeAccidentals","handleFile","Midi","header","tempos","keySignatures","tracks","track","convertMidi","readAsArrayBuffer","midiNote","convertedNote","isAccidental","convertMidiNote","sort","groupedNotes","previousTime","elapsedTime","emptyColumns","noteColumn","number","numberToLayer","groupByIndex","group","final","join","mergeLayers","lastColumn","selectedColumn","loadSong","command","changeOffset","parseInt","isInteger","changePitch","toggleAccidentals","changeBpm","changeMidiVisibility","margin","maxWidth","textOverflow","overflow","marginRight","NumberInput","changeValue","step","backgroundColor","elementValue","setElementValue","debounced","ComposerTools","toggleTools","disabled","copiedColumns","currentTarget","blur","copyColumns","pasteColumns","eraseColumns","deleteColumns","ComposerNote","next","prev","layers","MultiSwitch","selectedColor","buttonsClass","onSelect","ComposerKeyboard","notesIndexes","currentColumn","hiddenSideMenu","isPlaying","changeLayer","handleTempoChanger","toString","noteData","horizontalLineBreak","standards","ComposerCache","height","timelineHeight","generate","canvas","drawColumn","cache","toDataURL","standardColumn","standard","standardLarger","roundNess","noteWidth","noteHeight","ctx","getContext","fillStyle","roundRect","strokeStyle","lineWidth","beginPath","ballHeight","arc","PI","columnsLarger","breakpoint","moveTo","lineTo","notesFigures","app","PIXI","borderWidth","fillRect","stroke","y","x","radius","tl","tr","br","bl","defaultRadius","side","quadraticCurveTo","closePath","NumOfColumnsPerCanvas","ComposerCanvas","resetPointerDown","stageSelected","sliderSelected","stagePreviousPositon","handleBreakpoints","handleWheel","deltaY","selectColumn","global","totalWidth","relativePos","handleStageSlide","throttleStage","isMovingLeft","ceil","abs","toAdd","finalPos","direction","v","handleSlide","sizes","getBoundingClientRect","parentWidth","nearestEven","screen","currentBreakpoint","canvasRef","React","createRef","current","_canvas","s","xPos","counter","switcher","counterLimit","relativeColumnWidth","stageSize","stagePos","raf","renderOnComponentChange","ref","anchor","interactive","pointerdown","pointermove","pos","currentPos","boundaries","isVisible","tempoChangersCache","standardBg","backgroundCache","isToolsSelected","toolsColumns","isSelected","isBreakpoint","faStepBackward","faStepForward","antialias","autoDensity","pointertap","pointerup","draw","g","clear","beginFill","drawRect","image","lineStyle","drawRoundedRect","toggleBreakpoint","faMinusCircle","faPlusCircle","interactiveChildren","alpha","zIndex","positions","num","round","toggleMenuVisible","updateSong","createNewSong","songFunctions","hasUnsaved","hasChanges","menuClass","menuOpen","currentSong","faSave","volumeHook","setterVolume","sendChangeSelect","onPointerUp","Composer","handleAutoSave","changes","togglePlay","removeColumns","addColumns","layerIndex","replaceAt","currentNote","askForSongUpdate","confirm","songColumns","pastError","msPerBPM","handleTick","newIndex","indexOfBreakpoint","validateBreakpoints","page","ignoreAudio","toolsVisible","copiedColums","copiedColumn","copiedNote","columnIndex","visibility","midiVisible","playbackInterval","location","hostname","returnValue","canvasFunctions","canvasData","toolsData","toolsFunctions","midiParserFunctions","midiParserData","faBars","faChevronRight","faChevronLeft","faPause","faPlay","addCell","removeCell","faPlus","faTools","formatMillis","calculateLength","millis","minutes","seconds","end","totalLength","string","replacement","valueOf","substring","ErrorPage","deleteAllSongs","resetSettings","removeItem","isLocalhost","Boolean","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","pages","Index","selectedPage","askForStorage","closeWelcomeScreen","hasVisited","hideMessage","floatingMessage","checkUpdate","currentVersion","updateMessage","storedVersion","logEvent","path","hasPersistentStorage","floatingMessageClass","to","exact","ReactDOM","render","StrictMode","getElementById","URL","origin","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.426ce680.chunk.js","sourcesContent":["const appName = process.env.REACT_APP_NAME || [\"Sky\",\"Genshin\"][1]\r\nconsole.log(\"App name:\",appName)\r\nconst cssClasses = {\r\n    noteComposer: appName === \"Genshin\" ? \"note-composer\" : \"note-composer-sky\",\r\n    note: appName === \"Genshin\" ? \"note\" : \"note-sky\"\r\n}\r\nconst instruments = appName === \"Genshin\" ? [\r\n    \"Lyre\",\r\n    \"DunDun\",\r\n    \"Zither\"\r\n    ]:[\r\n        \"Piano\",\r\n        \"Contrabass\",\r\n        \"Guitar\",\r\n        \"Harp\",\r\n        \"Horn\",\r\n        \"Trumpet\",\r\n        \"Pipa\",\r\n        \"WinterPiano\",\r\n        \"Xylophone\",\r\n        \"Flute\",\r\n        \"Ocarina\",\r\n        \"Kalimba\",\r\n        \"ToyUkulele\",\r\n        \"Drum\",\r\n        \"Bells\",\r\n        \"DunDun\",\r\n        \"HandPan\"\r\n    ]\r\nconst notesPerColumn = appName === \"Genshin\" ? 21 : 15\r\nconst instrumentsData = {\r\n    Lyre: {\r\n        notes: 21\r\n    },\r\n    Zither:{\r\n        notes: 21\r\n    },\r\n    DunDun: {\r\n        notes: 8\r\n    },\r\n    Bells: {\r\n        notes: 8\r\n    },\r\n    Trumpet:{\r\n        notes: 15\r\n    },\r\n    Contrabass: {\r\n        notes: 15\r\n    },\r\n    Drum: {\r\n        notes: 8\r\n    },\r\n    Flute: {\r\n        notes: 15\r\n    },\r\n    Guitar: {\r\n        notes: 15\r\n    },\r\n    HandPan: {\r\n        notes: 8\r\n    },\r\n    ToyUkulele:{\r\n        notes:15\r\n    },\r\n    Harp: {\r\n        notes: 15\r\n    },\r\n    Horn: {\r\n        notes: 15\r\n    },\r\n    Piano: {\r\n        notes: 15\r\n    },\r\n    Pipa: {\r\n        notes: 15\r\n    },\r\n    Kalimba: {\r\n        notes: 15\r\n    },\r\n    WinterPiano: {\r\n        notes: 15\r\n    },\r\n    Xylophone: {\r\n        notes: 15\r\n    },\r\n    Ocarina:{\r\n        notes:15\r\n    }\r\n}\r\n\r\n\r\nconst layoutData = {\r\n    21: {\r\n        keyboardLayout: (\"Q W E R T Y U \" +\r\n            \"A S D F G H J \" +\r\n            \"Z X C V B N M\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa so la ti \" +\r\n            \"do re mi fa so la ti \" +\r\n            \"do re mi fa so la ti\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 84 89 85 \" +\r\n            \"65 83 68 70 71 72 74 \" +\r\n            \"90 88 67 86 66 78 77\").split(\" \")\r\n    },\r\n    8: {\r\n        keyboardLayout: (\"Q W E R \" +\r\n            \"A S D F\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa \" +\r\n            \"do re mi fa\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 \" +\r\n        \"65 83 68 70\").split(\" \")\r\n    },\r\n    15: {\r\n        keyboardLayout: (\"Q W E R T \" +\r\n            \"A S D F G \" +\r\n            \"Z X C V B\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa so \" +\r\n            \"do re mi fa so \" +\r\n            \"do re mi fa so\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 84 \" +\r\n            \"65 83 68 70 71 \" +\r\n            \"90 88 67 86 66\").split(\" \")\r\n    }\r\n}\r\n\r\nconst keyNames = {\r\n    Sky: {\r\n        0: [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\"],\r\n        1: [\"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\"],\r\n        2: [\"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\"],\r\n        3: [\"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\"],\r\n        4: [\"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\"],\r\n        5: [\"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\"],\r\n        6: [\"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\"],\r\n        7: [\"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\"],\r\n        8: [\"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\"],\r\n        9: [\"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\"],\r\n        10: [\"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\"],\r\n        11: [\"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\"]\r\n    },\r\n    Genshin:{\r\n        0: [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"],\r\n        1: [\"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\" , \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\"],\r\n        2: [\"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\"],\r\n        3: [\"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\"],\r\n        4: [\"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\"],\r\n        5: [\"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\"],\r\n        6: [\"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\"],\r\n        7: [\"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\"],\r\n        8: [\"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\"],\r\n        9: [\"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\"],\r\n        10: [\"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\"],\r\n        11: [\"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\"]\r\n    }\r\n}\r\n\r\n\r\nconst pitchArr = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"] \r\n\r\nconst composerNotePositions =  appName === \"Genshin\" ? [14, 15, 16, 17, 18, 19, 20, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6].reverse() : [15,16,17,18,19,20,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14].reverse()\r\n\r\nconst importNotePositions = appName === \"Genshin\" ? [14, 15, 16, 17, 18, 19, 20, 7, 8, 9, 10, 11, 12, 13, 0] :  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]\r\n\r\nconst layoutImages = {\r\n    15: \"dmcr dm cr dm cr cr dm dmcr dm cr cr dm cr dm dmcr\".split(\" \"),\r\n    8: appName === \"Sky\"? \"cr dm cr dm cr dm cr dm\".split(\" \") : \"do re mi fa do re mi fa\".split(\" \"),\r\n    21: \"do re mi fa so la ti do re mi fa so la ti do re mi fa so la ti\".split(\" \")\r\n}\r\nexport {\r\n    instruments,\r\n    instrumentsData,\r\n    composerNotePositions,\r\n    importNotePositions,\r\n    appName,\r\n    layoutData,\r\n    cssClasses,\r\n    notesPerColumn,\r\n    keyNames,\r\n    pitchArr,\r\n    layoutImages\r\n}","import { importNotePositions, appName, instruments } from \"../appConfig\"\r\nclass Recording {\r\n\tconstructor() {\r\n\t\tthis.start = new Date().getTime()\r\n\t\tthis.notes = []\r\n\t}\r\n\tinit = () => {\r\n\t\tthis.start = new Date().getTime() - 100\r\n\t\tconsole.log(\"Started new recording\")\r\n\t}\r\n\taddNote = (index) => {\r\n\t\tif (this.notes.length === 0) this.init()\r\n\t\tlet currentTime = new Date().getTime()\r\n\t\tlet note = [index, currentTime - this.start]\r\n\t\tthis.notes.push(note)\r\n\t}\r\n}\r\nclass Song {\r\n\tconstructor(name, notes = [], data = {}) {\r\n\t\tthis.name = name\r\n\t\tthis.version = 1\r\n\t\tthis.notes = notes\r\n\t\tthis.bpm = 220\r\n\t\tthis.pitch = \"C\"\r\n\t\tthis.data = {\r\n\t\t\tisComposed: false,\r\n\t\t\tisComposedVersion: false,\r\n\t\t\tappName: appName\r\n\t\t}\r\n\t\tObject.entries(data).forEach((entry) => {\r\n\t\t\tthis.data[entry[0]] = entry[1]\r\n\t\t})\r\n\t}\r\n}\r\nclass LoggerEvent {\r\n\tconstructor(title, text, timeout) {\r\n\t\tthis.title = title\r\n\t\tthis.timeout = timeout\r\n\t\tthis.text = text\r\n\t\tif (timeout === undefined) this.timeout = 3000\r\n\t\tthis.event = new CustomEvent(\"logEvent\", {\r\n\t\t\tdetail: {\r\n\t\t\t\ttitle: this.title,\r\n\t\t\t\ttext: this.text,\r\n\t\t\t\ttimeout: this.timeout\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\ttrigger = () => {\r\n\t\twindow.dispatchEvent(this.event)\r\n\t}\r\n}\r\nclass NoteData {\r\n\tconstructor(index, noteNames, url) {\r\n\t\tthis.index = index\r\n\t\tthis.noteNames = noteNames\r\n\t\tthis.url = url\r\n\t\tthis.buffer = new ArrayBuffer(8)\r\n\t\tthis.clicked = false\r\n\t}\r\n}\r\nclass PlayingSong {\r\n\tconstructor(notes) {\r\n\t\tthis.timestamp = new Date().getTime()\r\n\t\tthis.notes = notes\r\n\t}\r\n}\r\nclass FileDownloader {\r\n\tconstructor(type) {\r\n\t\tif (type === undefined) type = \"text/json\"\r\n\t\tthis.dataType = \"data:\" + type + \";charset=utf-8,\"\r\n\t}\r\n\tdownload = (file, name) => {\r\n\t\tlet data = this.dataType + encodeURIComponent(file)\r\n\t\tvar el = document.createElement(\"a\")\r\n\t\tel.style = \"display:none\"\r\n\t\tdocument.body.appendChild(el)\r\n\t\tel.setAttribute(\"href\", data)\r\n\t\tel.setAttribute(\"download\", name)\r\n\t\tel.click();\r\n\t\tel.remove();\r\n\t}\r\n}\r\n\r\nlet TempoChangers = [\r\n\t{\r\n\t\tid: 0,\r\n\t\ttext: \"1\",\r\n\t\tchanger: 1,\r\n\t\tcolor: 0x515c6f\r\n\t}, {\r\n\t\tid: 1,\r\n\t\ttext: \"1/2\",\r\n\t\tchanger: 1 / 2,\r\n\t\tcolor: 0x517553\r\n\t}, {\r\n\t\tid: 2,\r\n\t\ttext: \"1/4\",\r\n\t\tchanger: 1 / 4,\r\n\t\tcolor: 0x434c7d\r\n\t}, {\r\n\t\tid: 3,\r\n\t\ttext: \"1/8\",\r\n\t\tchanger: 1 / 8,\r\n\t\tcolor: 0x774D6D\r\n\t}\r\n]\r\nclass ComposedSong {\r\n\tconstructor(name, notes = [], data = {}) {\r\n\t\tdata.isComposed = true\r\n\t\tdata.isComposedVersion = true\r\n\t\tthis.version = 1\r\n\t\tthis.data = data\r\n\t\tthis.name = name\r\n\t\tthis.bpm = 220\r\n\t\tthis.pitch = \"C\"\r\n\t\tthis.notes = notes\r\n\t\tthis.instruments = [instruments[0], instruments[0], instruments[0]]\r\n\t\tthis.breakpoints = [0]\r\n\t\tthis.columns = []\r\n\t\tthis.selected = 0\r\n\t\tnew Array(100).fill().forEach((e) => {\r\n\t\t\tlet column = new Column()\r\n\t\t\tcolumn.tempoChanger = 0\r\n\t\t\tthis.columns.push(column)\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\nfunction ComposerSongDeSerialization(song) {\r\n\tlet obj = {\r\n\t\tdata: song.data,\r\n\t\tname: song.name,\r\n\t\tbpm: song.bpm ?? 220,\r\n\t\tpitch: song.pitch ?? \"C\",\r\n\t\tinstruments: song.instruments || [instruments[0], instruments[0], instruments[0]],\r\n\t\tbreakpoints: song.breakpoints ?? [],\r\n\t\tnotes: [],\r\n\t\tselected: 0,\r\n\t\tcolumns: []\r\n\t}\r\n\tsong.columns.forEach(column => {\r\n\t\tlet columnObj = new Column()\r\n\t\tcolumnObj.tempoChanger = column[0]\r\n\t\tcolumn[1].forEach(note => {\r\n\t\t\tcolumnObj.notes.push(new ColumnNote(note[0], note[1]))\r\n\t\t})\r\n\t\tobj.columns.push(columnObj)\r\n\t})\r\n\treturn obj\r\n}\r\nfunction ComposerToRecording(song) {\r\n\tlet recordedSong = new Song(song.name)\r\n\tlet bpmPerMs = Math.floor(60000 / song.bpm)\r\n\tlet totalTime = 100\r\n\tsong.columns.forEach(column => {\r\n\t\tcolumn[1].forEach(note => {\r\n\t\t\trecordedSong.notes.push([note[0], totalTime])\r\n\t\t})\r\n\t\ttotalTime += Math.floor(bpmPerMs * TempoChangers[column[0]].changer)\r\n\t})\r\n\treturn recordedSong\r\n}\r\nfunction ComposerSongSerialization(song) {\r\n\tlet obj = {\r\n\t\tdata: song.data,\r\n\t\tname: song.name,\r\n\t\tbpm: song.bpm,\r\n\t\tpitch: song.pitch,\r\n\t\tbreakpoints: song.breakpoints,\r\n\t\tinstruments: song.instruments,\r\n\t\tcolumns: []\r\n\t}\r\n\tobj.data.appName = appName\r\n\t/*\r\n\t\tnotes = [tempoChanger,notes] ----> note = [index,layer]\r\n\t\ttempoChanger = Number\r\n\t*/\r\n\tsong.columns.forEach(column => {\r\n\t\tlet columnArr = [column.tempoChanger]\r\n\t\tlet notes = column.notes.map(note => {\r\n\t\t\treturn [note.index, note.layer]\r\n\t\t})\r\n\t\tcolumnArr[1] = notes\r\n\t\tobj.columns.push(columnArr)\r\n\t})\r\n\treturn obj\r\n}\r\nfunction prepareSongDownload(song) {\r\n\tlet finalSong = JSON.parse(JSON.stringify(song)) //lose reference\r\n\tlet oldFormatNotes = {}\r\n\tif (finalSong.data?.isComposedVersion) {\r\n\t\toldFormatNotes = composedToOldFormat(finalSong)\r\n\t} else {\r\n\t\toldFormatNotes = recordedToOldFormat(finalSong)\r\n\t}\r\n\tfinalSong.isComposed = finalSong.data.isComposedVersion\r\n\tfinalSong.pitchLevel = pitchArr.indexOf(finalSong.pitch)\r\n\tfinalSong.songNotes = oldFormatNotes\r\n\tfinalSong.bitsPerPage = 16\r\n\tfinalSong.isEncrypted = false\r\n\treturn [finalSong] //for compatibility, add back to an array, it will be ignored when importing\r\n\t//from this app\r\n}\r\n\r\nfunction prepareSongImport(song) {\r\n\t//TODO add multi songs in the same file\r\n\tif (Array.isArray(song) && song.length > 0) song = song[0]\r\n\tlet type = getSongType(song)\r\n\tif (type === \"none\") {\r\n\t\tnew LoggerEvent(\"Error\", \"Invalid song\").trigger()\r\n\t\tthrow new Error(\"Error Invalid song\")\r\n\t}\r\n\tif (type === \"oldSky\") {\r\n\t\tsong = oldSkyToNewFormat(song)\r\n\t}\r\n\tif (appName === 'Sky' && song.data?.appName !== 'Sky') {\r\n\t\tnew LoggerEvent(\"Error\", \"Invalid song\").trigger()\r\n\t\tthrow new Error(\"Error Invalid song\")\r\n\t}\r\n\tif (appName === 'Genshin' && song.data?.appName === 'Sky') {\r\n\t\tsong = newSkyFormatToGenshin(song)\r\n\t}\r\n\treturn song\r\n}\r\n\r\nfunction composedToOldFormat(song) {\r\n\tlet convertedNotes = []\r\n\tlet bpmPerMs = Math.floor(60000 / song.bpm)\r\n\tlet totalTime = 100\r\n\tsong.columns.forEach(column => {\r\n\t\tcolumn[1].forEach(note => {\r\n\t\t\tlet layer = 1\r\n\t\t\tif (note[1] === '111') layer = 3\r\n\t\t\tif (note[1] === '011') layer = 2\r\n\t\t\tif (note[1] === '101') layer = 3\r\n\t\t\tif (note[1] === '001') layer = 2\r\n\t\t\tif (note[1] === '110') layer = 3\r\n\t\t\tif (note[1] === '010') layer = 2\r\n\t\t\tif (note[1] === '100') layer = 1\r\n\t\t\tlet noteObj = {\r\n\t\t\t\tkey: (layer > 2 ? 2 : layer) + 'Key' + note[0],\r\n\t\t\t\ttime: totalTime\r\n\t\t\t}\r\n\t\t\tif (layer > 2) noteObj.l = 3\r\n\t\t\tconvertedNotes.push(noteObj)\r\n\t\t})\r\n\t\ttotalTime += Math.floor(bpmPerMs * TempoChangers[column[0]].changer)\r\n\t})\r\n\treturn convertedNotes\r\n}\r\n\r\nfunction recordedToOldFormat(song) {\r\n\tlet convertedNotes = []\r\n\tsong.notes.forEach(note => {\r\n\t\tconvertedNotes.push({\r\n\t\t\ttime: note[1],\r\n\t\t\tkey: \"1Key\" + note[0]\r\n\t\t})\r\n\t})\r\n\treturn convertedNotes\r\n}\r\nfunction getSongType(song) {\r\n\ttry {\r\n\t\tif (song.data === undefined) {\r\n\t\t\t//oldSky format\r\n\t\t\tif (song.songNotes !== undefined && song.pitchLevel !== undefined) {\r\n\t\t\t\treturn \"oldSky\"\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//current format\r\n\t\t\tif (song.data.isComposedVersion) {\r\n\t\t\t\tif (typeof song.name !== \"string\") return \"none\"\r\n\t\t\t\tif (typeof song.bpm !== \"number\") return \"none\"\r\n\t\t\t\tif (!pitchArr.includes(song.pitch)) return \"none\"\r\n\t\t\t\tif (Array.isArray(song.breakpoints)) {\r\n\t\t\t\t\tif (song.breakpoints.length > 0) {\r\n\t\t\t\t\t\tif (typeof song.breakpoints[0] !== \"number\") return \"none\"\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn \"none\"\r\n\t\t\t\t}\r\n\t\t\t\tif (Array.isArray(song.columns)) {\r\n\t\t\t\t\tif (song.columns.length > 0) {\r\n\t\t\t\t\t\tlet column = song.columns[0]\r\n\t\t\t\t\t\tif (typeof column[0] !== \"number\") return \"none\"\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn \"none\"\r\n\t\t\t\t}\r\n\t\t\t\treturn \"newComposed\"\r\n\t\t\t} else {\r\n\t\t\t\tif (typeof song.name !== \"string\") return \"none\"\r\n\t\t\t\tif (typeof song.bpm !== \"number\") return \"none\"\r\n\t\t\t\tif (!pitchArr.includes(song.pitch)) return \"none\"\r\n\t\t\t\treturn \"newRecorded\"\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} catch (e) {\r\n\t\tconsole.log(e)\r\n\t\treturn \"none\"\r\n\t}\r\n\treturn \"none\"\r\n}\r\nlet genshinLayout = importNotePositions\r\n\r\nfunction newSkyFormatToGenshin(song) {\r\n\tif (song.data.isComposedVersion) {\r\n\t\tsong.instruments = song.instruments.map(instrument => 'Lyre')\r\n\t\tsong.columns.forEach(column => {\r\n\t\t\tcolumn[1] = column[1].map(note => {\r\n\t\t\t\treturn [genshinLayout[note[0]], note[1]]\r\n\t\t\t})\r\n\r\n\t\t})\r\n\t}\r\n\tif (!song.data.isComposedVersion) {\r\n\t\tsong.notes = song.notes.map(note => {\r\n\t\t\tnote[0] = genshinLayout[note[0]]\r\n\t\t\treturn note\r\n\t\t})\r\n\t}\r\n\treturn song\r\n}\r\n\r\nfunction oldSkyToNewFormat(song) {\r\n\tlet result = new Song(\"Error\")\r\n\ttry {\r\n\t\tresult = new Song(song.name)\r\n\t\tresult.bpm = song.bpm || 220\r\n\t\tresult.pitch = (pitchArr[song.pitchLevel || 0]) || \"C\"\r\n\t\t//remove duplicate notes\r\n\t\tsong.songNotes = song.songNotes.filter((note, index, self) =>\r\n\t\t\tindex === self.findIndex((n) => {\r\n\t\t\t\treturn n.key.split('Key')[1] === note.key.split('Key')[1] && n.time === note.time\r\n\t\t\t})\r\n\t\t)\r\n\t\tlet songNotes = song.songNotes\r\n\t\tsongNotes.forEach(note => {\r\n\t\t\tlet data = note.key.split(\"Key\")\r\n\t\t\tresult.notes.push([genshinLayout[data[1]], note.time, note.l ?? Number(data[0])])\r\n\t\t})\r\n\r\n\t\tif ([true, \"true\"].includes(song.isComposed)) {\r\n\t\t\tresult = ComposerSongSerialization(RecordingToComposed(result))\r\n\t\t} else {\r\n\t\t\tresult.notes = result.notes.map(e => [e[0], e[1]])\r\n\t\t}\r\n\r\n\r\n\t} catch (e) {\r\n\t\tconsole.log(e)\r\n\t\treturn new Song(\"Error importing\")\r\n\t}\r\n\treturn result\r\n}\r\nfunction RecordingToComposed(song) {\r\n\tlet bpmToMs = Math.floor(60000 / song.bpm)\r\n\tlet composed = new ComposedSong(song.name, [])\r\n\tcomposed.bpm = song.bpm\r\n\tcomposed.pitch = song.pitch\r\n\tlet notes = song.notes\r\n\t//remove duplicates\r\n\r\n\tlet converted = []\r\n\tlet grouped = groupByNotes(notes, bpmToMs / 9)\r\n\tlet combinations = [bpmToMs, Math.floor(bpmToMs / 2), Math.floor(bpmToMs / 4), Math.floor(bpmToMs / 8)]\r\n\tfor (let i = 0; i < grouped.length; i++) {\r\n\t\tlet column = new Column()\r\n\t\tcolumn.notes = grouped[i].map(note => {\r\n\t\t\tlet columnNote = new ColumnNote(note[0])\r\n\t\t\tif (note[2] === 0) columnNote.layer = \"100\"\r\n\t\t\tif (note[2] === 1) columnNote.layer = \"100\"\r\n\t\t\tif (note[2] === 2) columnNote.layer = \"010\"\r\n\t\t\tif (note[2] === 3) columnNote.layer = \"110\"\r\n\t\t\tif (note[2] === undefined) columnNote.layer = \"100\"\r\n\t\t\treturn columnNote\r\n\t\t})\r\n\t\tlet next = grouped[i + 1] || [[0, 0, 0]]\r\n\t\tlet difference = next[0][1] - grouped[i][0][1]\r\n\t\tlet paddingColumns = []\r\n\t\twhile (difference >= combinations[3]) {\r\n\t\t\tif (difference / combinations[0] >= 1) {\r\n\t\t\t\tdifference -= combinations[0]\r\n\t\t\t\tpaddingColumns.push(0)\r\n\t\t\t} else if (difference / combinations[1] >= 1) {\r\n\t\t\t\tdifference -= combinations[1]\r\n\t\t\t\tpaddingColumns.push(1)\r\n\t\t\t} else if (difference / combinations[2] >= 1) {\r\n\t\t\t\tdifference -= combinations[2]\r\n\t\t\t\tpaddingColumns.push(2)\r\n\t\t\t} else if (difference / combinations[3] >= 1) {\r\n\t\t\t\tdifference -= combinations[3]\r\n\t\t\t\tpaddingColumns.push(3)\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet finalPadding = []\r\n\t\tcolumn.tempoChanger = paddingColumns.shift() || 0\r\n\t\tpaddingColumns = paddingColumns.forEach((col, i) => {\r\n\t\t\tlet column = new Column()\r\n\t\t\tcolumn.tempoChanger = col\r\n\t\t\tfinalPadding.push(column)\r\n\t\t})\r\n\t\tconverted.push(column, ...finalPadding)\r\n\t}\r\n\tcomposed.columns = converted\r\n\treturn composed\r\n}\r\nclass Column {\r\n\tconstructor() {\r\n\t\tthis.notes = []\r\n\t\tthis.tempoChanger = 0\r\n\r\n\t}\r\n}\r\nfunction groupByNotes(notes, threshold) {\r\n\tlet result = []\r\n\twhile (notes.length > 0) {\r\n\t\tlet row = [notes.shift()]\r\n\t\tlet amount = 0\r\n\t\tfor (let i = 0; i < notes.length; i++) {\r\n\t\t\tif (row[0][1] > notes[i][1] - threshold) amount++\r\n\t\t}\r\n\t\tresult.push([...row, ...notes.splice(0, amount)])\r\n\t}\r\n\treturn result\r\n}\r\nclass ColumnNote {\r\n\tconstructor(index, layer = \"000\") {\r\n\t\tthis.index = index\r\n\t\tthis.layer = layer\r\n\t}\r\n}\r\nlet pitchArr = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"]\r\nfunction getPitchChanger(pitch) {\r\n\tlet index = pitchArr.indexOf(pitch)\r\n\tif (index < 0) index = 0\r\n\treturn Number(Math.pow(2, index / 12).toFixed(4))\r\n}\r\nfunction numberToLayer(number) {\r\n\tlet layer = \"100\"\r\n\tif (number === 0) layer = \"100\"\r\n\tif (number === 1) layer = \"010\"\r\n\tif (number === 2) layer = \"001\"\r\n\treturn layer\r\n}\r\nfunction mergeLayers(notes) {\r\n\tlet final = \"000\".split(\"\")\r\n\tnotes.forEach(notes => {\r\n\t\tnotes.layer.split(\"\").forEach((e, i) => {\r\n\t\t\tif (e === \"1\") final[i] = \"1\"\r\n\t\t})\r\n\t})\r\n\treturn final.join(\"\")\r\n}\r\nfunction groupByIndex(column) {\r\n\tlet notes = []\r\n\tcolumn.notes.forEach(note => {\r\n\t\tif (notes[note.index]) {\r\n\t\t\tnotes[note.index].push(note)\r\n\t\t} else {\r\n\t\t\tnotes[note.index] = [note]\r\n\t\t}\r\n\t})\r\n\treturn notes.filter(e => Array.isArray(e))\r\n}\r\n\r\nexport {\r\n\tRecording,\r\n\tSong,\r\n\tNoteData,\r\n\tFileDownloader,\r\n\tLoggerEvent,\r\n\tPlayingSong,\r\n\tComposedSong,\r\n\tColumnNote,\r\n\tColumn,\r\n\tTempoChangers,\r\n\tComposerSongSerialization,\r\n\tComposerSongDeSerialization,\r\n\tComposerToRecording,\r\n\tgetPitchChanger,\r\n\tgetSongType,\r\n\toldSkyToNewFormat,\r\n\tRecordingToComposed,\r\n\tprepareSongDownload,\r\n\tnewSkyFormatToGenshin,\r\n\tprepareSongImport,\r\n\tpitchArr,\r\n\tgroupByNotes,\r\n\tnumberToLayer,\r\n\tmergeLayers,\r\n\tgroupByIndex\r\n}","import { instrumentsData, layoutData, instruments } from \"../appConfig\"\r\nclass Instrument {\r\n    constructor(instrumentName) {\r\n        this.instrumentName = instrumentName\r\n        let instrumentNameTemp = instrumentName === undefined ? instruments[0] : instrumentName\r\n        this.layout = []\r\n        this.gain = GainNode\r\n        let instrumentData = instrumentsData[instrumentNameTemp]\r\n        this.keyboardLayout = layoutData[instrumentData.notes].keyboardLayout\r\n\r\n        this.mobileLayout = layoutData[instrumentData.notes].mobileLayout\r\n        this.keyboardCodes = layoutData[instrumentData.notes].keyboardCodes\r\n        let i = 0\r\n        if (instrumentName === undefined) return\r\n        for (const noteName of this.keyboardLayout) {\r\n            let noteNames = {\r\n                keyboard: noteName,\r\n                mobile: this.mobileLayout[i]\r\n            }\r\n            let url = `./assets/audio/${instrumentName}/${i}.mp3`\r\n            let note = new NoteData(i, noteNames, url)\r\n            this.layout.push(note)\r\n            i++\r\n        }\r\n\r\n    }\r\n    getNoteFromCode = (code) => {\r\n        let index = this.keyboardLayout.findIndex(e => e === String(code))\r\n        return index !== -1 ? index : null\r\n    }\r\n    setBuffers = (bufferArray) => {\r\n        bufferArray.forEach((buffer, i) => {\r\n            this.layout[i].buffer = buffer\r\n        })\r\n    }\r\n    changeVolume = (amount) => {\r\n        let newVolume = Number((amount / 100).toFixed(2))\r\n        if(amount < 5) newVolume = 0\r\n        this.gain.gain.value = newVolume\r\n    }\r\n    load = async (audioContext) => {\r\n        this.gain = audioContext.createGain()\r\n        this.gain.gain.value = 1\r\n        let emptyBuffer = audioContext.createBuffer(2, audioContext.sampleRate, audioContext.sampleRate)\r\n        //thanks safari, i have to do this ugly thing\r\n        const requests = this.layout.map(e => {\r\n            return new Promise(resolve => {\r\n                fetch(e.url)\r\n                    .then(result => result.arrayBuffer())\r\n                    .then(buffer => {\r\n                        audioContext.decodeAudioData(buffer, resolve, () => {\r\n                            resolve(emptyBuffer)\r\n                        })\r\n                            .catch(e => {\r\n                                resolve(emptyBuffer)\r\n                            })\r\n                    }).catch(e => {\r\n                        resolve(emptyBuffer)\r\n                    })\r\n            })\r\n        })\r\n        let buffers = await Promise.all(requests)\r\n        this.setBuffers(buffers)\r\n        return true\r\n    }\r\n}\r\n\r\n\r\n\r\nclass NoteData {\r\n    constructor(index, noteNames, url) {\r\n        this.index = index\r\n        this.noteNames = noteNames\r\n        this.url = url\r\n        this.buffer = new ArrayBuffer(8)\r\n    }\r\n}\r\nexport default Instrument\r\n","import React, { Component } from 'react'\r\nimport { cssClasses, appName} from \"../../appConfig\"\r\n\r\nclass Note extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        const { props } = this\r\n        let data = props.data\r\n        let className = data.clicked ? (cssClasses.note + \" click-event\") : cssClasses.note\r\n        let toBeClicked = props.toBeClicked ? \" note-red\" : \"\"\r\n        let toBeClickedNext = props.toBeClickedNext ? \" note-border-click\" : \"\"\r\n        className += toBeClicked + toBeClickedNext\r\n        let animation = { transition: `all ${props.fadeTime}s` }\r\n        return <button\r\n            onPointerDown={(e) => {\r\n                e.preventDefault()\r\n                props.clickAction(data)\r\n            }}\r\n            className=\"button-hitbox\"\r\n\r\n        >\r\n            <div className={className} style={animation}>\r\n                <img\r\n                    draggable=\"false\"\r\n                    alt={data.noteNames.mobile}\r\n                    src={props.noteImage}>\r\n\r\n                </img>\r\n                <div className={appName === \"Sky\" ? \"note-name-sky\" : \"note-name\"}>\r\n                    {props.noteText}\r\n                </div>\r\n            </div>\r\n        </button>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Note","import React, { Component } from 'react'\r\nimport \"./Keyboard.css\"\r\nimport { getPitchChanger } from \"../SongUtils\"\r\nimport Instrument from \"../Instrument\"\r\nimport Note from \"./Note\"\r\nimport * as workerTimers from 'worker-timers';\r\nimport { keyNames, pitchArr , layoutImages, appName,layoutData} from \"../../appConfig\"\r\nclass Keyboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            instrument: new Instrument(),\r\n            audioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            reverbAudioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            playTimestamp: new Date().getTime(),\r\n            songToPractice: [],\r\n            sliderState: {\r\n                position: 0,\r\n                size: 0\r\n            }\r\n        }\r\n        console.log(\"Loaded:\",props.data.instrument)\r\n        this.loadInstrument(props.data.instrument)\r\n        try {\r\n            this.loadReverb()\r\n        } catch(e) {\r\n            console.log(\"Error with reverb0\",e)\r\n        }\r\n    }\r\n    handleKeyboard = (event) => {\r\n        if(event.repeat) return\r\n        if (document.activeElement.tagName === \"INPUT\") return\r\n        let code = event.code?.replace(\"Key\",\"\")\r\n        let index = this.state.instrument.getNoteFromCode(code)\r\n        let note\r\n        if (index !== null) {\r\n            note = this.state.instrument.layout[index]\r\n        }\r\n        if (note !== undefined) {\r\n            this.handleClick(note)\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyboard)\r\n        window.addEventListener(\"playSong\", this.handlePlayEvent)\r\n        window.addEventListener(\"practiceSong\", this.handlePracticeEvent)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyboard);\r\n        window.removeEventListener(\"playSong\", this.handlePlayEvent)\r\n        window.removeEventListener(\"practiceSong\", this.handlePracticeEvent)\r\n        let state = this.state\r\n        state.playTimestamp = new Date().getTime()\r\n    }\r\n    loadReverb() {\r\n        let audioCtx = this.state.audioContext\r\n        fetch(\"./assets/audio/reverb4.wav\")\r\n            .then(r => r.arrayBuffer())\r\n            .then(b => {\r\n                audioCtx.decodeAudioData(b, (impulse_response) => {\r\n                    let convolver = audioCtx.createConvolver()\r\n                    let gainNode = audioCtx.createGain()\r\n                    gainNode.gain.value = 2.5\r\n                    convolver.buffer = impulse_response\r\n                    convolver.connect(gainNode)\r\n                    gainNode.connect(audioCtx.destination)\r\n                    this.setState({\r\n                        reverbAudioContext: convolver\r\n                    })\r\n                })\r\n            }).catch((e) => { \r\n                console.log(\"Error with reverb1\",e)\r\n            })\r\n    }\r\n    handlePlayEvent = (event) => {\r\n        let data = event.detail\r\n        this.setState({\r\n            playTimestamp: data.timestamp\r\n        }, () => this.playSong(data))\r\n    }\r\n    handlePracticeEvent = (event) => {\r\n        let data = event.detail\r\n        this.practiceSong(JSON.parse(JSON.stringify(data)))\r\n    }\r\n    loadInstrument = async (name) => {\r\n        let newInstrument = new Instrument(name)\r\n        await newInstrument.load(this.state.audioContext)\r\n\r\n        this.setState({\r\n            instrument: newInstrument\r\n        })\r\n\r\n    }\r\n    practiceSong = (song) => {\r\n        let notes = song.notes\r\n        let songLength = notes.length\r\n        if (song.start === undefined) song.start = 0\r\n        notes.splice(0, song.start)\r\n        let chunks = []\r\n        for (let i = 0; notes.length > 0; i++) {\r\n            let chunk = {\r\n                notes: [notes.shift()],\r\n                delay: 0\r\n            }\r\n            let startTime = chunk.notes.length > 0 ? chunk.notes[0][1] : 0\r\n            for (let j = 0; j < notes.length && j < 20; j++) {\r\n                let difference = notes[j][1] - chunk.notes[0][1] - song.threshold\r\n                if (difference < 0) {\r\n                    chunk.notes.push(notes.shift())\r\n                    j--\r\n                }\r\n            }\r\n            chunk.delay = notes.length > 0 ? notes[0][1] - startTime : 0\r\n            chunks.push(chunk)\r\n        }\r\n        this.setState({\r\n            songToPractice: chunks\r\n        })\r\n        this.setSlider({\r\n            size: songLength,\r\n            position: song.start\r\n        })\r\n    }\r\n    changeSliderPosition = (position) => {\r\n        let sliderState = this.state.sliderState\r\n        sliderState.position += position\r\n        this.setState({\r\n            sliderState: sliderState\r\n        }, () => this.props.functions.changeSliderState(this.state.sliderState))\r\n    }\r\n    setSlider = (state) => {\r\n        this.setState({\r\n            sliderState: state\r\n        }, this.props.functions.changeSliderState(state))\r\n    }\r\n    playSong = async (song) => {\r\n        let notes = song.notes\r\n        let previous = 0\r\n        this.setSlider({\r\n            size: notes.length,\r\n            position: 0\r\n        })\r\n        if (notes.length === 0) return\r\n        for (let i = 0; i < notes.length; i++) {\r\n            let delay = notes[i][1] - previous\r\n            previous = notes[i][1]\r\n            let note = notes[i][0]\r\n            if (this.state.playTimestamp !== song.timestamp) break\r\n            if (delay > 10) await delayMs(delay)\r\n            this.changeSliderPosition(1)\r\n            this.playSound(this.state.instrument.layout[note])\r\n        }\r\n        this.props.functions.stopSong()\r\n    }\r\n    handleClick = (note) => {\r\n        let practiceSong = this.state.songToPractice\r\n        if (practiceSong.length > 0) {\r\n            let indexClicked = practiceSong[0]?.notes.findIndex(e => e[0] === note.index)\r\n            if (indexClicked !== -1) {\r\n                practiceSong[0].notes.splice(indexClicked, 1)\r\n                if (practiceSong[0].notes.length === 0) practiceSong.shift()\r\n                if (practiceSong.length === 0) this.props.functions.stopSong()\r\n                this.setState({\r\n                    songToPractice: practiceSong\r\n                }, () => this.changeSliderPosition(1))\r\n            }\r\n        }\r\n\r\n        this.playSound(note)\r\n\r\n    }\r\n    playSound = (note) => {\r\n        const {state, props} = this\r\n        if(note === undefined) return\r\n        if (props.isRecording) props.functions.handleRecording(note)\r\n        note.clicked = true\r\n        setTimeout(() => {\r\n            note.clicked = false\r\n            this.setState({\r\n                instrument: state.instrument\r\n            })\r\n        }, 200)\r\n        const source = state.audioContext.createBufferSource()\r\n        source.playbackRate.value = getPitchChanger(props.data.pitch)\r\n        source.buffer = note.buffer\r\n        if (props.data.caveMode) {\r\n            source.connect(state.reverbAudioContext)\r\n        } else {\r\n            source.connect(state.audioContext.destination)\r\n        }\r\n        source.start(0)\r\n        this.setState({\r\n            instrument: state.instrument\r\n        })\r\n    }\r\n    render() {\r\n        const {state, props} = this\r\n        const {data} = props\r\n        let size = data.keyboardSize / 100\r\n        if (size < 0.5) size = 0.5\r\n        if (size > 1.5) size = 1.5\r\n        let keyboardClass = \"keyboard\"\r\n        if (state.instrument.layout.length === 15) keyboardClass += \" keyboard-5\"\r\n        if (state.instrument.layout.length === 8) keyboardClass += \" keyboard-4\"\r\n        return <div \r\n                    className={keyboardClass} \r\n                    style={{ \r\n                        transform: `scale(${size})`,\r\n                        marginBottom:size * 30\r\n                    }}\r\n                >\r\n             {state.instrument.layout.length === 0 ? <div className=\"loading\">Loading...</div> : null}\r\n            {state.instrument.layout.map(note => {\r\n                let toBeClicked = state.songToPractice[0]?.notes.find(e => e[0] === note.index) !== undefined\r\n                let toBeClickedNext = state.songToPractice[1]?.notes.find(e => e[0] === note.index) !== undefined\r\n                let fadeTime = state.songToPractice[0]?.delay !== undefined ? state.songToPractice[0]?.delay / 1000 : 0.1\r\n                let noteText = \"\"\r\n                let noteImage = \"\"\r\n                try{\r\n                    noteImage = layoutImages[state.instrument.layout.length][note.index]\r\n                    if(data.noteNameType === \"Note name\") noteText = keyNames[appName][pitchArr.indexOf(data.pitch)][note.index]                           \r\n                    if(data.noteNameType === \"Keyboard layout\") noteText = layoutData[state.instrument.layout.length].keyboardLayout[note.index]\r\n                    if(data.noteNameType === \"Do Re Mi\") noteText = layoutData[state.instrument.layout.length].mobileLayout[note.index]\r\n                }catch(e){}\r\n\r\n                return <Note\r\n                    key={note.index}\r\n                    toBeClicked={toBeClicked}\r\n                    fadeTime={fadeTime}\r\n                    toBeClickedNext={toBeClickedNext}\r\n                    data={note}\r\n                    noteText={noteText}\r\n                    noteImage={`./assets/icons/keys/${noteImage}.svg`}\r\n                    clickAction={this.handleClick}\r\n                >\r\n\r\n                </Note>\r\n            })}\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction delayMs(ms) {\r\n    return new Promise(resolve => {\r\n        workerTimers.setTimeout(resolve, ms)\r\n    })\r\n}\r\nexport default Keyboard\r\n\r\n","export default __webpack_public_path__ + \"static/media/mainpage.114ce51f.png\";","export default __webpack_public_path__ + \"static/media/composer.76adcf72.png\";","export default __webpack_public_path__ + \"static/media/songs.75d8f348.png\";","import React, { Component, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMusic, faTimes, faCog, faTrash, faCrosshairs, faDownload, faInfo, faCompactDisc, faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { FaDiscord, FaGithub} from 'react-icons/fa';\r\nimport { RiPlayListFill } from 'react-icons/ri'\r\nimport \"./menu.css\"\r\nimport mainPageImg from '../../assets/images/mainpage.png'\r\nimport composerImg from '../../assets/images/composer.png'\r\nimport songsImg from '../../assets/images/songs.png'\r\nimport { FileDownloader, LoggerEvent, prepareSongImport, prepareSongDownload} from \"../SongUtils\"\r\nimport { FilePicker } from \"react-file-picker\"\r\nimport { appName } from \"../../appConfig\"\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            selectedMenu: \"Songs\",\r\n            selectedSongType: \"recorded\",\r\n            searchInput:'',\r\n            searchedSongs:[],\r\n            searchStatus: 'Write a song name then search!',\r\n            isPersistentStorage: false\r\n        }\r\n        this.checkPersistentStorage()\r\n    }\r\n\r\n    checkPersistentStorage = async () => {\r\n        if (navigator.storage && navigator.storage.persist) {\r\n            let isPersisted = await navigator.storage.persisted()\r\n            if(!isPersisted) isPersisted = await navigator.storage.persist()\r\n            this.setState({isPersistentStorage: isPersisted})\r\n          }\r\n    }\r\n    handleSearchInput = (text) =>{\r\n        this.setState({\r\n            searchInput: text\r\n        })\r\n    }\r\n    clearSearch = () =>{\r\n        this.setState({\r\n            searchInput: '',\r\n            searchedSongs:[],\r\n            searchStatus: 'Write a song name then search!'\r\n        })\r\n        this.props.functions.stopSong()\r\n    }\r\n    searchSongs = async () =>{\r\n        const { searchInput, searchStatus } = this.state\r\n        if(searchStatus === \"Searching...\") return\r\n        if(searchInput.trim().length === 0){\r\n            return this.setState({\r\n                searchStatus: 'Please write a non empty name'\r\n            })\r\n        }\r\n        this.setState({\r\n            searchStatus: 'Searching...'\r\n        })\r\n        let fetchedSongs = await fetch('https://sky-music.herokuapp.com/api/songs?search='+encodeURI(searchInput)).then(data => data.json())\r\n        if(fetchedSongs.error){\r\n            this.setState({\r\n                searchStatus: 'Please write a non empty name'\r\n            })\r\n            return new LoggerEvent(\"Error\", fetchedSongs.error).trigger()\r\n        }\r\n        this.setState({\r\n            searchedSongs: fetchedSongs,\r\n            searchStatus: 'success'\r\n        })\r\n    }\r\n    toggleMenu = (override) => {\r\n        if (typeof override !== \"boolean\") override = undefined\r\n        let newState = override !== undefined ? override : !this.state.open\r\n        this.setState({\r\n            open: newState,\r\n        })\r\n    }\r\n    selectSideMenu = (selection) => {\r\n        if (selection === this.state.selectedMenu && this.state.open) {\r\n            return this.setState({\r\n                open: false,\r\n            })\r\n        }\r\n        this.setState({\r\n            selectedMenu: selection,\r\n            open: true\r\n        })\r\n    }\r\n    changeSelectedSongType = (name) => {\r\n        this.setState({\r\n            selectedSongType: name\r\n        })\r\n    }\r\n    importSong = (file) => {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load',async (event) => {\r\n            try {\r\n                let songsInput = JSON.parse(event.target.result)\r\n                if(!Array.isArray(songsInput)) songsInput = [songsInput]\r\n                for(let song of songsInput){\r\n                    song = prepareSongImport(song)\r\n                    await this.props.functions.addSong(song)\r\n                }\r\n            } catch (e) {\r\n                new LoggerEvent(\"Error\", \"Error importing song\").trigger()\r\n                console.error(e)\r\n            }\r\n        })\r\n        reader.readAsText(file)\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        let songName = song.name\r\n        if(appName === \"Sky\"){\r\n            //adds old format into the sheet\r\n            song = prepareSongDownload(song)\r\n        }\r\n        if(!Array.isArray(song)) song = [song]\r\n        song.forEach(song1 => {\r\n            song1.data.appName = appName\r\n        })\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json,`${songName}.${appName.toLowerCase()}sheet.json`)\r\n        new LoggerEvent(\"Success\", \"Song downloaded\").trigger()\r\n    }\r\n\r\n    downloadAllSongs = () => {\r\n        let toDownload = []\r\n        this.props.data.songs.forEach(song => {\r\n            if (song._id) delete song._id\r\n            if(appName === \"Sky\"){\r\n                song = prepareSongDownload(song)\r\n            }\r\n            Array.isArray(song) ? toDownload.push(...song) : toDownload.push(song)\r\n        })\r\n        let fileDownloader = new FileDownloader()\r\n        let json = JSON.stringify(toDownload)\r\n        let date = new Date().toISOString().split('T')[0]\r\n        fileDownloader.download(json,`${appName}_Backup_${date}.json`)\r\n        new LoggerEvent(\"Success\", \"Song backup downloaded\").trigger()\r\n    }\r\n\r\n    render() {\r\n        let sideClass = this.state.open ? \"side-menu menu-open\" : \"side-menu\"\r\n        const { data, functions } = this.props\r\n        const { handleSettingChange } = functions\r\n        functions.toggleMenu = this.toggleMenu\r\n        functions.downloadSong = this.downloadSong\r\n        let changePage = this.props.functions.changePage\r\n        let songs = data.songs.filter(song => !song.data.isComposedVersion)\r\n        let composedSongs = data.songs.filter(song => song.data.isComposedVersion)\r\n        const { searchStatus , searchedSongs, selectedMenu } = this.state\r\n        let searchedSongFunctions = {\r\n            playSong: functions.playSong,\r\n            importSong: functions.addSong,\r\n        }\r\n        return <div className=\"menu-wrapper\">\r\n            <div className=\"menu menu-visible\">\r\n                {this.state.open && <CloseMenu action={this.toggleMenu} />}\r\n                <MenuItem type=\"Help\" action={this.selectSideMenu} className=\"margin-top-auto\">\r\n                    <FontAwesomeIcon icon={faInfo} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Library\" action={this.selectSideMenu}>\r\n                    <RiPlayListFill className='icon'/>\r\n                </MenuItem>\r\n                <MenuItem type=\"Songs\" action={this.selectSideMenu} >\r\n                    <FontAwesomeIcon icon={faMusic} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Settings\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faCog} className=\"icon\" />\r\n                </MenuItem>\r\n\r\n                <MenuItem type=\"Composer\" action={() => changePage(\"Composer\")}>\r\n                    <FontAwesomeIcon icon={faCompactDisc} className=\"icon\" />\r\n                </MenuItem>\r\n            </div>\r\n            <div className={sideClass}>\r\n                <MenuPanel title=\"No selection\" visible={selectedMenu}>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Songs\" visible={selectedMenu}>\r\n                    <div className=\"songs-buttons-wrapper\">\r\n                        <button className=\"genshin-button\"\r\n                            onClick={() => changePage(\"Composer\")}\r\n                        >\r\n                            Compose song\r\n                        </button>\r\n                        <FilePicker\r\n                            onChange={(file) => this.importSong(file)}\r\n                        >\r\n                            <button className=\"genshin-button\">\r\n                                Import song\r\n                            </button>\r\n                        </FilePicker>\r\n\r\n                    </div>\r\n                    <div className=\"tab-selector-wrapper\">\r\n                        <button\r\n                            className={this.state.selectedSongType === \"recorded\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"recorded\")}\r\n                        >\r\n                            Recorded\r\n                        </button>\r\n                        <button\r\n                            className={this.state.selectedSongType === \"composed\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"composed\")}\r\n                        >\r\n                            Composed\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"songs-wrapper\">\r\n                        {this.state.selectedSongType === \"recorded\"\r\n                            ? songs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={functions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                            : composedSongs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={functions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div style={{marginTop:\"auto\", paddingTop:'0.5rem', width:'100%',display:'flex',justifyContent:'flex-end'}}>\r\n                        <button \r\n                            className='genshin-button'\r\n                            style={{marginLeft:'auto'}}\r\n                            onClick={this.downloadAllSongs}\r\n                        >\r\n                            Download all songs (backup)\r\n                        </button>\r\n                    </div>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Settings\" visible={selectedMenu}>\r\n                    {Object.entries(data.settings).map(([key, data]) => {\r\n                        return <SettingsRow\r\n                            key={key + data.value}\r\n                            objKey={key}\r\n                            data={data}\r\n                            update={handleSettingChange}\r\n                        >\r\n\r\n                        </SettingsRow>\r\n                    })}\r\n                    <div style={{marginTop:'1rem'}}>\r\n                        {this.state.isPersistentStorage ?\"Storage is persisted\" : \"Storage is not persisted\"}\r\n                    </div>\r\n                    {!checkIfTWA() && <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Support me\r\n                    </a>}\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Library\" visible={selectedMenu}>\r\n                    <div>\r\n                        Here you can find songs to learn, they are provided by the sky-music library.\r\n                    </div>\r\n                    <div className='library-search-row' >\r\n                        <input \r\n                            className='library-search-input' \r\n                            placeholder='Song name'\r\n                            onKeyDown={(e) => {\r\n                                if(e.code === \"Enter\") this.searchSongs()\r\n                            }}\r\n                            onInput={(e) => this.handleSearchInput(e.target.value)}\r\n                            value={this.state.searchInput}\r\n                        />\r\n                        <button className='library-search-btn' onClick={this.clearSearch}>\r\n                            <FontAwesomeIcon icon={faTimes}/>\r\n                        </button>\r\n                        <button className='library-search-btn' onClick={this.searchSongs}>\r\n                            <FontAwesomeIcon icon={faSearch}/>\r\n                        </button>\r\n                    </div>\r\n                    <div className='library-search-songs-wrapper'>\r\n                        {searchStatus === \"success\" ?\r\n                            searchedSongs.length > 0 \r\n                                ?   searchedSongs.map(song => \r\n                                        <SearchedSong\r\n                                            key={song.file}\r\n                                            data={song}\r\n                                            functions={searchedSongFunctions}\r\n                                        >\r\n                                            {song.name}\r\n                                        </SearchedSong>)   \r\n                                :   <div className='library-search-result-text'>\r\n                                        No results\r\n                                    </div>\r\n                            :   <div className='library-search-result-text'>\r\n                                    {searchStatus}\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Help\" visible={selectedMenu}>\r\n                    <div className='help-icon-wrapper'>\r\n                        <a href='https://discord.gg/Rj8V5gkZPc' >\r\n                            <FaDiscord className='help-icon' />\r\n                        </a>\r\n                        <a href='https://github.com/Specy/genshin-music' >\r\n                            <FaGithub className='help-icon' />\r\n                        </a>\r\n                        \r\n                    </div>\r\n                    <div className='help-title'>\r\n                        Main page\r\n                    </div>\r\n                    <div>\r\n                        <img src={mainPageImg} className='help-img' alt='tutorial for the main page' />\r\n                        <ol>\r\n                            <li>Keyboard</li>\r\n                            <li>Record your keyboard</li>\r\n                            <li>Open the composer</li>\r\n                            <li>Open the settings</li>\r\n                            <li>Open the saved songs</li>\r\n                        </ol>\r\n                        <div className=\"column\">\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faCrosshairs} /> = practice the song\r\n                            </div>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faDownload} /> = download the song\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='help-title'>\r\n                        Composer\r\n                    </div>\r\n                    <div>\r\n                        <img src={composerImg} className='help-img' alt=\"tutorial for composer\"/>\r\n                        <ol>\r\n                            <li>Go to the next / previous breakpoint</li>\r\n                            <li>Timeline of the breakpoints</li>\r\n                            <li>Open the tools</li>\r\n                            <li>Add 16 columns to the end</li>\r\n                            <li>Remove the current selected column</li>\r\n                            <li>Add column after the current one</li>\r\n                        </ol>\r\n                        The composer has tools for PC users: <br/><br/>\r\n                            <div style={{marginLeft:'1rem'}}>\r\n                                <Key>A / D</Key> = move left / right <br/>\r\n                                <Key>1 / 2 / 3 / 4</Key> = change tempo <br/>\r\n                                <Key>Space bar</Key> = play / pause song <br/>\r\n                                <Key>Arrow left</Key> = go to previous breakpoint<br/>\r\n                                <Key>Arrow right</Key> = go to next breakpoint <br/>\r\n                                <Key>Q</Key> = remove current column<br/>\r\n                                <Key>E</Key> = add column <br/>\r\n                            </div>\r\n                    </div>\r\n                    <div className='help-title'>\r\n                        Songs menu\r\n                    </div>\r\n                    <div>\r\n                        <img src={songsImg} className='help-img' alt='tutorial for songs page' />\r\n                        <ol>\r\n                            <li>Practice song</li>\r\n                            <li>Download song as json</li>\r\n                            <li>Delete song </li>\r\n                            <li>Open the composer</li>\r\n                            <li>Import a song as json</li>\r\n                            <li>Browse song library</li>\r\n                        </ol>\r\n                        <div className=\"column\">\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faCrosshairs} /> = practice the song\r\n                            </div>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faDownload} /> = download the song\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    {!checkIfTWA() && <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Support me\r\n                    </a>}\r\n                </MenuPanel>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction Key(props){\r\n    return <div className='keyboard-key'>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nfunction MenuPanel(props) {\r\n    let className = props.visible === props.title ? \"menu-panel menu-panel-visible\" : \"menu-panel\"\r\n    return <div className={className}>\r\n        <div className=\"menu-title\">\r\n            {props.title}\r\n        </div>\r\n        <div className=\"panel-content-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\nfunction CloseMenu(props) {\r\n    return <div onClick={() => props.action(false)} className=\"close-menu menu-item\">\r\n        <FontAwesomeIcon icon={faTimes} className=\"icon\" />\r\n    </div>\r\n}\r\nfunction SettingsRow(props) {\r\n    const { data, update, objKey } = props\r\n    const [valueHook, setter] = useState(data.value)\r\n    function handleChange(e) {\r\n        let el = e.target\r\n        let value = data.type === \"checkbox\" ? el.checked : el.value\r\n        if (data.type === \"number\") {\r\n            value = Number(value)\r\n            e.target.value = \"\" //have to do this to remove a react bug that adds a 0 at the start\r\n            if (value < data.threshold[0] || value > data.threshold[1]) {\r\n                return\r\n            }\r\n        }\r\n\r\n        setter(value)\r\n    }\r\n    function sendChange() {\r\n        if (data.value === valueHook) return\r\n        data.value = valueHook\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function sendChangeSelect(e) {\r\n        let value = e.target.value\r\n        data.value = value\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    if (objKey === \"settingVesion\") return null\r\n    return <div className=\"settings-row\">\r\n        <div>\r\n            {data.name}\r\n        </div>\r\n        {data.type === \"select\"\r\n            ? <select value={data.value}\r\n                onChange={sendChangeSelect}\r\n            >\r\n                {data.options.map(e => {\r\n                    return <option value={e} key={e}>{e}</option>\r\n                })}\r\n            </select>\r\n            : <input\r\n                type={data.type}\r\n                value={valueHook}\r\n                checked={valueHook}\r\n                onChange={handleChange}\r\n                onBlur={sendChange}\r\n            />}\r\n    </div>\r\n}\r\nfunction SongRow(props) {\r\n    let data = props.data\r\n    let deleteSong = props.functions.removeSong\r\n    let playSong = props.functions.playSong\r\n    let practiceSong = props.functions.practiceSong\r\n    let toggleMenu = props.functions.toggleMenu\r\n    let downloadSong = props.functions.downloadSong\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\" onClick={() => {\r\n            playSong(data)\r\n            toggleMenu(false)\r\n        }}>\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => {\r\n                practiceSong(data)\r\n                toggleMenu(false)\r\n            }}\r\n            >\r\n                <FontAwesomeIcon icon={faCrosshairs} />\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => deleteSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\nclass MenuItem extends Component {\r\n    render() {\r\n        let className = this.props.className ? `menu-item ${this.props.className}` : \"menu-item\"\r\n        return <div\r\n            className={className}\r\n            onClick={() => this.props.action(this.props.type)}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction SearchedSong(props){\r\n    const { functions, data} = props\r\n    const { playSong, importSong} = functions\r\n    const download = async function(){\r\n        try{\r\n            let song = await fetch('https://sky-music.herokuapp.com/api/songs?get='+encodeURI(data.file)).then(data => data.json())\r\n            song = prepareSongImport(song)\r\n            importSong(song)\r\n        }catch(e){\r\n            console.error(e)\r\n            new LoggerEvent(\"Error\", \"Error downloading song\").trigger()\r\n        }\r\n    }\r\n    const play = async function(){\r\n        try{\r\n            let song = await fetch('https://sky-music.herokuapp.com/api/songs?get='+encodeURI(data.file)).then(data => data.json())\r\n            song = prepareSongImport(song)\r\n            playSong(song)\r\n        }catch(e){\r\n            console.error(e)\r\n            new LoggerEvent(\"Error\", \"Error downloading song\").trigger()\r\n        }\r\n    }\r\n    return <div className=\"song-row\">\r\n    <div className=\"song-name\" onClick={() => {\r\n        play(data)\r\n    }}>\r\n        {data.name}\r\n    </div>\r\n    <div className=\"song-buttons-wrapper\">\r\n        <button className=\"song-button\" onClick={download}>\r\n            <FontAwesomeIcon icon={faDownload} />\r\n        </button>\r\n    </div>\r\n</div>\r\n}\r\nfunction checkIfTWA(){\r\n    let isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n    return isTwa\r\n  }\r\n\r\nexport default Menu","import { isMobile } from \"is-mobile\"\r\nimport {instruments, appName} from \"../appConfig\"\r\nlet ComposerSettings = {\r\n    settingVesion: appName + 10,\r\n    instrument: {\r\n        name: \"Instrument (Layer 1)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    layer2: {\r\n        name: \"Instrument (Layer 2)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    layer3: {\r\n        name: \"Instrument (Layer 3)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    bpm: {\r\n        name: \"Bpm\",\r\n        type: \"number\",\r\n        songSetting: true,\r\n        threshold: [0, 1600],\r\n        value: 220\r\n    },\r\n    beatMarks: {\r\n        name: \"Beat marks\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 3,\r\n        options: [\r\n            3,\r\n            4\r\n        ]\r\n    },\r\n    noteNameType:{\r\n        name: \"Note name type\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: appName === \"Genshin\" \r\n                                ? isMobile() \r\n                                    ? \"Do Re Mi\" \r\n                                    : \"Keyboard layout\"\r\n                                : \"Note name\",\r\n        options: appName === \"Genshin\"\r\n        ? [\r\n            \"Note name\",\r\n            \"Keyboard layout\",\r\n            \"Do Re Mi\"\r\n        ]\r\n        : [\r\n            \"Note name\",\r\n            \"Keyboard layout\"\r\n        ]\r\n    },\r\n    pitch: {\r\n        name: \"Pitch\",\r\n        type: \"select\",\r\n        songSetting: true,\r\n        value: \"C\",\r\n        options: [\r\n            \"C\",\r\n            \"Db\",\r\n            \"D\",\r\n            \"Eb\",\r\n            \"E\",\r\n            \"F\",\r\n            \"Gb\",\r\n            \"G\",\r\n            \"Ab\",\r\n            \"A\",\r\n            \"Bb\",\r\n            \"B\",\r\n        ]\r\n    },\r\n    columnsPerCanvas: {\r\n        name: \"Number of visible columns\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 35,\r\n        options: [\r\n            20,\r\n            25,\r\n            30,\r\n            35,\r\n            40,\r\n            45,\r\n            50\r\n        ]\r\n    },\r\n    caveMode: {\r\n        name: \"Reverb (cave mode)\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    },\r\n    autosave: {\r\n        name: \"Autosave changes\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    }\r\n}\r\nlet MainPageSettings = {\r\n    settingVesion:appName + 10,\r\n    keyboardSize: {\r\n        name: \"Keyboard size\",\r\n        type: \"number\",\r\n        songSetting: false,\r\n        value: 100,\r\n        threshold: [0, 200]\r\n    },\r\n    instrument: {\r\n        name: \"Instrument\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        options: instruments\r\n    },\r\n    noteNameType:{\r\n        name: \"Note name type\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: appName === \"Genshin\" \r\n                                ? isMobile() \r\n                                    ? \"Do Re Mi\" \r\n                                    : \"Keyboard layout\"\r\n                                : \"Note name\",\r\n                                \r\n        options: appName === \"Genshin\"\r\n        ? [\r\n            \"Note name\",\r\n            \"Keyboard layout\",\r\n            \"Do Re Mi\"\r\n        ]\r\n        : [\r\n            \"Note name\",\r\n            \"Keyboard layout\"\r\n        ]\r\n    },\r\n    pitch: {\r\n        name: \"Pitch\",\r\n        type: \"select\",\r\n        songSetting: true,\r\n        value: \"C\",\r\n        options: [\r\n            \"C\",\r\n            \"Db\",\r\n            \"D\",\r\n            \"Eb\",\r\n            \"E\",\r\n            \"F\",\r\n            \"Gb\",\r\n            \"G\",\r\n            \"Ab\",\r\n            \"A\",\r\n            \"Bb\",\r\n            \"B\",\r\n        ]\r\n    },\r\n    caveMode: {\r\n        name: \"Reverb (cave mode)\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    }\r\n}\r\nexport {\r\n    ComposerSettings,\r\n    MainPageSettings\r\n}","import { LoggerEvent } from \"./SongUtils\"\r\n\r\nasync function asyncPrompt(question) {\r\n    return new Promise(resolve => {\r\n        let container = document.createElement(\"div\")\r\n        container.className = \"floating-prompt\"\r\n        let text = document.createElement(\"div\")\r\n        text.innerText = question\r\n        let input = document.createElement(\"input\")\r\n        input.type = \"text\"\r\n        input.placeholder = \"Write here\"\r\n        input.className = \"prompt-input\"\r\n        let row = document.createElement(\"div\")\r\n        let cancel = document.createElement(\"button\")\r\n        let ok = document.createElement(\"button\")\r\n        cancel.className = \"prompt-button\"\r\n        ok.className = \"prompt-button disabled\"\r\n        row.className = \"prompt-row\"\r\n        ok.innerText = \"Ok\"\r\n        cancel.innerText = \"Cancel\"\r\n        row.append(cancel, ok)\r\n        container.append(text, input, row)\r\n        document.body.appendChild(container)\r\n        input.addEventListener(\"input\", () => {\r\n            if (input.value.trim() === \"\") {\r\n                ok.classList.add(\"disabled\")\r\n            } else {\r\n                ok.classList.remove(\"disabled\")\r\n            }\r\n\r\n        })\r\n        cancel.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(null)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n        ok.addEventListener(\"click\", () => {\r\n            if (input.value.trim() === \"Untitled\") {\r\n                input.value = \"\"\r\n                return new LoggerEvent(\"Warning\", '\"Untitled\" is a reserved word, use another').trigger()\r\n            }\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(input.value.trim())\r\n\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n    })\r\n}\r\n\r\nasync function asyncConfirm(question) {\r\n    return new Promise(resolve => {\r\n        let container = document.createElement(\"div\")\r\n        container.className = \"floating-prompt\"\r\n        let text = document.createElement(\"div\")\r\n        text.innerText = question\r\n        let row = document.createElement(\"div\")\r\n        let cancel = document.createElement(\"button\")\r\n        let ok = document.createElement(\"button\")\r\n\r\n        cancel.className = \"prompt-button\"\r\n        ok.className = \"prompt-button\"\r\n        row.className = \"prompt-row\"\r\n        ok.innerText = \"Yes\"\r\n        ok.style.background = '#628c83'\r\n        cancel.style.background = '#a9525a'\r\n        cancel.innerText = \"No\"\r\n        row.append(cancel, ok)\r\n        container.append(text, row)\r\n        document.body.appendChild(container)\r\n        cancel.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(false)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n        ok.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(true)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n    })\r\n}\r\n\r\nexport {\r\n    asyncConfirm,\r\n    asyncPrompt\r\n}","export default __webpack_public_path__ + \"static/media/rotate.e7c0f107.svg\";","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Keyboard from \"./Keyboard\"\r\nimport Menu from \"./Menu\"\r\nimport ZangoDb from \"zangodb\"\r\nimport { Song, Recording, LoggerEvent, PlayingSong, ComposerToRecording, prepareSongImport } from \"../SongUtils\"\r\nimport { MainPageSettings } from \"../SettingsObj\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSyncAlt, faStop } from '@fortawesome/free-solid-svg-icons'\r\nimport { asyncConfirm, asyncPrompt } from \"../AsyncPrompts\"\r\nimport rotateImg from \"../../assets/icons/rotate.svg\"\r\nimport { appName } from \"../../appConfig\"\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.db = new ZangoDb.Db(appName, { songs: [] })\r\n\t\tthis.recording = new Recording()\r\n\t\tlet settings = this.getSettings()\r\n\t\tthis.dbCol = {\r\n\t\t\tsongs: this.db.collection(\"songs\")\r\n\t\t}\r\n\t\tthis.state = {\r\n\t\t\tkeyboardData: {\r\n\t\t\t\tinstrument: settings.instrument.value,\r\n\t\t\t\tplayingSong: {\r\n\t\t\t\t\ttimestamp: 0,\r\n\t\t\t\t\tnotes: []\r\n\t\t\t\t},\r\n\t\t\t\tpracticingSong: {\r\n\t\t\t\t\ttimestamp: 0,\r\n\t\t\t\t\tnotes: [],\r\n\t\t\t\t\tthreshold: 100\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tisRecording: false,\r\n\t\t\tsongs: [],\r\n\t\t\tsettings: settings,\r\n\t\t\tsliderState: {\r\n\t\t\t\tposition: 0,\r\n\t\t\t\tsize: 0\r\n\t\t\t},\r\n\t\t\tthereIsSong: \"none\",\r\n\t\t\tisDragging: false\r\n\t\t}\r\n\t\tthis.lastPlayedSong = new Recording()\r\n\t\tthis.syncSongs()\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.body.addEventListener('dragenter', this.handleDrag)\r\n\t\tdocument.body.addEventListener('dragleave', this.resetDrag)\r\n\t\tdocument.body.addEventListener('dragover', this.handleDragOver)\r\n\t\tdocument.body.addEventListener('drop', this.handleDrop)\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.body.removeEventListener('dragenter', this.handleDrag)\r\n\t\tdocument.body.removeEventListener('dragleave', this.resetDrag)\r\n\t\tdocument.body.removeEventListener('drop', this.handleDrop)\r\n\t\tdocument.body.addEventListener('dragover', this.handleDragOver)\r\n\t}\r\n\tresetDrag = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tisDragging: false\r\n\t\t})\r\n\t}\r\n\thandleDragOver = (e) => {\r\n\t\te.preventDefault()\r\n\t\tthis.setState({\r\n\t\t\tisDragging: true\r\n\t\t})\r\n\t}\r\n\thandleDrag = (e) => {\r\n\t\te.preventDefault()\r\n\t\tthis.setState({\r\n\t\t\tisDragging: true\r\n\t\t})\r\n\t}\r\n\thandleDrop = async (e) => {\r\n\t\tthis.resetDrag()\r\n\t\te.preventDefault()\r\n\t\tlet songs = await Promise.all(Array.from(e.dataTransfer.files).map(file => file.text()))\r\n\t\tfor (let i = 0; i < songs.length; i++) {\r\n\t\t\ttry {\r\n\t\t\t\tlet song = prepareSongImport(JSON.parse(songs[i]))\r\n\t\t\t\tawait this.addSong(song)\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e)\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\tgetSettings = () => {\r\n\t\tlet storedSettings = localStorage.getItem(appName + \"_Main_Settings\")\r\n\t\ttry {\r\n\t\t\tstoredSettings = JSON.parse(storedSettings)\r\n\t\t} catch (e) {\r\n\t\t\tstoredSettings = null\r\n\t\t}\r\n\t\tif (storedSettings !== null) {\r\n\t\t\tif (storedSettings.settingVesion !== MainPageSettings.settingVesion) {\r\n\t\t\t\tthis.updateSettings(MainPageSettings)\r\n\t\t\t\treturn MainPageSettings\r\n\t\t\t}\r\n\t\t\treturn storedSettings\r\n\t\t}\r\n\t\treturn MainPageSettings\r\n\t}\r\n\tupdateSettings = (override) => {\r\n\t\tlet state\r\n\t\tif (override !== undefined) {\r\n\t\t\tstate = override\r\n\t\t} else {\r\n\t\t\tstate = this.state.settings\r\n\t\t}\r\n\t\tlocalStorage.setItem(appName + \"_Main_Settings\", JSON.stringify(state))\r\n\t}\r\n\thandleSettingChange = (setting) => {\r\n\t\tlet settings = this.state.settings\r\n\t\tlet data = setting.data\r\n\t\tsettings[setting.key].value = data.value\r\n\t\tif (setting.key === \"instrument\") {\r\n\t\t\tthis.loadInstrument(data.value)\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tsettings: settings,\r\n\t\t}, this.updateSettings)\r\n\t}\r\n\tsyncSongs = async () => {\r\n\t\tlet songs = await this.dbCol.songs.find().toArray()\r\n\t\tthis.setState({\r\n\t\t\tsongs: songs\r\n\t\t})\r\n\t}\r\n\tloadInstrument = (instrument) => {\r\n\t\tlet state = this.state\r\n\t\tstate.keyboardData.instrument = instrument\r\n\t\tthis.setState({\r\n\t\t\tkeyboardData: state.keyboardData\r\n\t\t})\r\n\t}\r\n\tpracticeSong = async (song, start = 0) => {\r\n\t\tawait this.stopSong()\r\n\t\tlet oldState = this.state.keyboardData.practicingSong\r\n\t\tif (song.data?.isComposedVersion) {\r\n\t\t\tsong = ComposerToRecording(song)\r\n\t\t\toldState.threshold = 10\r\n\t\t}\r\n\t\toldState.notes = song.notes\r\n\t\toldState.timestamp = new Date().getTime()\r\n\t\tlet songToPractice = JSON.parse(JSON.stringify(this.state.keyboardData.practicingSong))\r\n\t\tsongToPractice.start = start\r\n\t\tthis.setState({\r\n\t\t\tkeyboardData: this.state.keyboardData,\r\n\t\t\tthereIsSong: \"practicing\"\r\n\t\t}, () => {\r\n\t\t\tlet event = new CustomEvent(\"practiceSong\", { detail: songToPractice })\r\n\t\t\twindow.dispatchEvent(event)\r\n\t\t})\r\n\t}\r\n\t//to add the composed songs\r\n\tsongExists = async (name) => {\r\n\t\treturn await this.dbCol.songs.findOne({ name: name }) !== undefined\r\n\t}\r\n\taddSong = async (song) => {\r\n\t\ttry {\r\n\t\t\tif (await this.songExists(song.name)) {\r\n\t\t\t\treturn new LoggerEvent(\"Warning\", \"A song with this name already exists! \\n\" + song.name).trigger()\r\n\t\t\t}\r\n\t\t\tawait this.dbCol.songs.insert(song)\r\n\t\t\tthis.syncSongs()\r\n\t\t\tnew LoggerEvent(\"Success\", `Song added to the ${song.data.isComposedVersion ? \"Composed\" : \"Recorded\"} tab!`, 4000).trigger()\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(e)\r\n\t\t\treturn new LoggerEvent(\"Error\", 'There was an error importing the song').trigger()\r\n\t\t}\r\n\r\n\t}\r\n\tcomponentDidCatch() {\r\n\t\tnew LoggerEvent(\"Warning\", \"There was an error with the song! Restoring default...\").trigger()\r\n\t\tthis.stopSong()\r\n\t}\r\n\tremoveSong = async (name) => {\r\n\t\tlet result = await asyncConfirm(`Are you sure you want to delete the song: \"${name}\" ?`)\r\n\t\tif (result) {\r\n\t\t\tthis.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n\t\t}\r\n\t}\r\n\thandleRecording = (note) => {\r\n\t\tif (this.state.isRecording) {\r\n\t\t\tthis.recording.addNote(note.index)\r\n\t\t}\r\n\t}\r\n\thandleSliderEvent = (event) => {\r\n\r\n\t\tthis.changeSliderState({\r\n\t\t\tposition: Number(event.target.value),\r\n\t\t\tsize: this.state.sliderState.size\r\n\t\t})\r\n\t}\r\n\tstopSong = () => {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tlet keyboardData = this.state.keyboardData\r\n\t\t\tkeyboardData.practicingSong = new PlayingSong([])\r\n\t\t\tkeyboardData.playingSong = new PlayingSong([])\r\n\t\t\tthis.setState({\r\n\t\t\t\tthereIsSong: \"none\",\r\n\t\t\t\tkeyboardData: keyboardData\r\n\t\t\t}, () => {\r\n\t\t\t\tlet event = new CustomEvent(\"playSong\", { detail: new PlayingSong([]) })\r\n\t\t\t\twindow.dispatchEvent(event)\r\n\t\t\t\tevent = new CustomEvent(\"practiceSong\", { detail: new PlayingSong([]) })\r\n\t\t\t\twindow.dispatchEvent(event)\r\n\t\t\t\tsetTimeout(resolve, 300)\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\tchangeSliderState = (newState) => {\r\n\t\tthis.setState({\r\n\t\t\tsliderState: newState\r\n\t\t})\r\n\t}\r\n\tplaySong = async (song) => {\r\n\t\tawait this.stopSong()\r\n\t\tlet settings = this.state.settings\r\n\t\tsettings.pitch.value = song.pitch\r\n\t\tif (song.data.isComposedVersion) {\r\n\t\t\tsong = ComposerToRecording(song)\r\n\t\t}\r\n\t\tlet playingSong = {\r\n\t\t\ttimestamp: new Date().getTime(),\r\n\t\t\tnotes: song.notes\r\n\t\t}\r\n\t\tthis.state.keyboardData.playingSong = playingSong\r\n\t\tthis.setState({\r\n\t\t\tkeyboardData: this.state.keyboardData,\r\n\t\t\tthereIsSong: \"playing\",\r\n\t\t\tsettings: settings\r\n\t\t})\r\n\r\n\t\tlet event = new CustomEvent(\"playSong\", { detail: playingSong })\r\n\t\twindow.dispatchEvent(event)\r\n\t\tthis.lastPlayedSong = song\r\n\t}\r\n\taskForSongName = () => {\r\n\t\treturn new Promise(async resolve => {\r\n\t\t\tlet promptString = \"Write song name, press cancel to ignore\"\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet songName = await asyncPrompt(promptString)\r\n\t\t\t\tif (songName === null) return resolve(null)\r\n\t\t\t\tif (songName !== \"\") {\r\n\t\t\t\t\tif (await this.songExists(songName)) {\r\n\t\t\t\t\t\tpromptString = \"This song already exists: \" + songName\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn resolve(songName)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpromptString = \"Write song name, press cancel to ignore\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n\ttoggleRecord = async (override) => {\r\n\t\tif (typeof override !== \"boolean\") override = undefined\r\n\t\tlet newState = override !== undefined ? override : !this.state.isRecording\r\n\t\tif (!newState && this.recording.notes.length > 0) {\r\n\t\t\tlet songName = await this.askForSongName()\r\n\t\t\tlet song = new Song(songName, this.recording.notes)\r\n\t\t\tsong.pitch = this.state.settings.pitch.value\r\n\t\t\tif (songName !== null) this.addSong(song)\r\n\t\t} else {\r\n\t\t\tthis.recording = new Recording()\r\n\t\t\tlet eventData = new PlayingSong([])\r\n\t\t\tlet event = new CustomEvent(\"playSong\", { detail: eventData })\r\n\t\t\twindow.dispatchEvent(event)\r\n\t\t}\r\n\t\tthis.state.isRecording = newState\r\n\t\tthis.setState({\r\n\t\t\topen: this.state.isRecording\r\n\t\t})\r\n\t}\r\n\trender() {\r\n\t\tconst { state } = this\r\n\t\tlet keyboardFunctions = {\r\n\t\t\thandleRecording: this.handleRecording,\r\n\t\t\tchangeSliderState: this.changeSliderState,\r\n\t\t\tstopSong: this.stopSong\r\n\t\t}\r\n\t\tlet menuFunctions = {\r\n\t\t\taddSong: this.addSong,\r\n\t\t\tremoveSong: this.removeSong,\r\n\t\t\tplaySong: this.playSong,\r\n\t\t\tpracticeSong: this.practiceSong,\r\n\t\t\tstopSong: this.stopSong,\r\n\t\t\tchangePage: this.props.changePage,\r\n\t\t\thandleSettingChange: this.handleSettingChange,\r\n\t\t}\r\n\t\tlet menuData = {\r\n\t\t\tsongs: state.songs,\r\n\t\t\tsettings: state.settings\r\n\t\t}\r\n\t\tlet keyboardData = {\r\n\t\t\t...state.keyboardData,\r\n\t\t\tkeyboardSize: state.settings.keyboardSize.value,\r\n\t\t\tnoteNameType: state.settings.noteNameType.value,\r\n\t\t\tpitch: state.settings.pitch.value,\r\n\t\t\tcaveMode: state.settings.caveMode.value,\r\n\t\t}\r\n\t\treturn <div className=\"app\">\r\n\t\t\t<div className=\"rotate-screen\">\r\n\t\t\t\t<img src={rotateImg} alt=\"icon for the rotating screen\">\r\n\t\t\t\t</img>\r\n\t\t\t\tFor a better experience, add the website to the home screen, and rotate your device\r\n\t\t\t</div>\r\n\t\t\t{state.isDragging && <div className='drag-n-drop'>\r\n\t\t\t\tDrop file here\r\n\t\t\t</div>}\r\n\t\t\t<Menu functions={menuFunctions} data={menuData} />\r\n\t\t\t<div className=\"right-panel\">\r\n\t\t\t\t<div className=\"upper-right\">\r\n\t\t\t\t\t{this.state.thereIsSong !== \"none\"\r\n\t\t\t\t\t\t? <div className=\"slider-wrapper\">\r\n\t\t\t\t\t\t\t<button className=\"song-button\" onClick={this.stopSong}>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faStop} />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\t\t\tclassName=\"slider\"\r\n\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\tonChange={this.handleSliderEvent}\r\n\t\t\t\t\t\t\t\tmax={state.sliderState.size}\r\n\t\t\t\t\t\t\t\tvalue={state.sliderState.position}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t<button className=\"song-button\" onClick={async () => {\r\n\t\t\t\t\t\t\t\tif (this.state.thereIsSong === \"practicing\") {\r\n\t\t\t\t\t\t\t\t\tthis.practiceSong(state.keyboardData.practicingSong, state.sliderState.position)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tawait this.stopSong()\r\n\t\t\t\t\t\t\t\t\tthis.playSong(this.lastPlayedSong)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faSyncAlt} />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<GenshinButton\r\n\t\t\t\t\t\t\tactive={state.isRecording}\r\n\t\t\t\t\t\t\tclick={this.toggleRecord}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{state.isRecording ? \"Stop\" : \"Record\"}\r\n\t\t\t\t\t\t</GenshinButton>\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"keyboard-wrapper\">\r\n\r\n\t\t\t\t\t<Keyboard\r\n\t\t\t\t\t\tkey={state.keyboardData.instrument}\r\n\t\t\t\t\t\tdata={keyboardData}\r\n\t\t\t\t\t\tfunctions={keyboardFunctions}\r\n\t\t\t\t\t\tisRecording={state.isRecording}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t}\r\n}\r\n\r\nfunction checkIfTWA() {\r\n\tlet isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n\treturn isTwa\r\n}\r\n\r\nfunction setIfInTWA() {\r\n\tif (checkIfTWA()) return console.log('inTWA')\r\n\tlet isTwa = document.referrer.includes('android-app://')\r\n\tsessionStorage.setItem('isTwa', isTwa)\r\n}\r\nsetIfInTWA()\r\nfunction GenshinButton(props) {\r\n\tlet className = \"genshin-button record-btn \" + (props.active ? \"selected\" : \"\")\r\n\treturn <button className={className} onClick={props.click}>\r\n\t\t{props.children}\r\n\t</button>\r\n}\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/addCell.73b6c8e9.svg\";","export default __webpack_public_path__ + \"static/media/removeCell.e266ba1a.svg\";","import { useState, useEffect } from 'react';\r\nfunction useDebounce(value, delay) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(\r\n    () => {\r\n      // Update debounced value after delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n      // Cancel the timeout if value changes (also on delay change or unmount)\r\n      // This is how we prevent debounced value from updating if value is changed ...\r\n      // .. within the delay period. Timeout gets cleared and restarted.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    [value, delay] // Only re-call effect if value or delay changes\r\n  );\r\n  return debouncedValue;\r\n}\r\nexport default useDebounce;","import React, { Component, useEffect, useState } from 'react'\r\nimport { FilePicker } from \"react-file-picker\"\r\nimport { Midi } from '@tonejs/midi'\r\nimport { LoggerEvent, pitchArr, ColumnNote, Column, numberToLayer, ComposedSong, groupByIndex, mergeLayers } from '../SongUtils'\r\nimport { appName } from '../../appConfig'\r\nimport { FaInfoCircle } from 'react-icons/fa'\r\nimport useDebounce from './useDebounce'\r\nclass MidiImport extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            fileName: '',\r\n            midi: null,\r\n            bpm: 220,\r\n            offset: 0,\r\n            pitch: 'C',\r\n            accidentals: 0,\r\n            outOfRange: 0,\r\n            totalNotes: 0,\r\n            includeAccidentals: true\r\n        }\r\n        this.handleFile = (file) => {\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', (event) => {\r\n                let midi\r\n                try {\r\n                    midi = new Midi(event.target.result)\r\n                } catch (e) {\r\n                    console.error(e)\r\n                }\r\n                if (!midi) return new LoggerEvent('Error', 'There was an error importing this file', 2000).trigger()\r\n                let bpm = midi.header.tempos[0]?.bpm\r\n                let key = midi.header.keySignatures[0]?.key\r\n                midi.tracks.forEach((track, i) => {\r\n                    track.selected = true\r\n                    track.layer = 0\r\n                    track.name = track.name || `Track n.${i + 1}`\r\n                    track.numberOfAccidentals = 0\r\n                    track.numberOfOutOfRange = 0\r\n                })\r\n                this.setState({\r\n                    midi: midi,\r\n                    fileName: file.name,\r\n                    bpm: Math.floor(bpm * 4) || 220,\r\n                    offset: 0,\r\n                    pitch: pitchArr.includes(key) ? key : 'C',\r\n                }, () => { if (this.state.midi !== null) this.convertMidi()})\r\n            })\r\n            reader.readAsArrayBuffer(file)\r\n        }\r\n\r\n        this.convertMidi = () => {\r\n            const { midi, bpm, offset, includeAccidentals,pitch } = this.state\r\n            let tracks = midi.tracks.filter(track => track.selected)\r\n            let notes = []\r\n            let numberOfAccidentals = 0\r\n            let outOfRange = 0\r\n            let totalNotes = 0\r\n            tracks.forEach(track => {\r\n                track.numberOfAccidentals = 0\r\n                track.numberOfOutOfRange = 0\r\n                track.notes.forEach(midiNote => {\r\n                    totalNotes++\r\n                    let convertedNote = convertMidiNote(midiNote.midi - offset)\r\n                    let note = {\r\n                        time: Math.floor(midiNote.time * 1000),\r\n                        note: convertedNote.note,\r\n                        layer: track.layer\r\n                    }\r\n                    if(convertedNote.isAccidental){\r\n                        numberOfAccidentals ++\r\n                        track.numberOfAccidentals ++\r\n                    }\r\n                    if (note.note !== null) {\r\n                        if (includeAccidentals || !convertedNote.isAccidental) {\r\n                            notes.push(note)\r\n                        }\r\n                    } else {\r\n                        outOfRange++\r\n                        track.numberOfOutOfRange ++\r\n                    }\r\n                })\r\n            })\r\n            notes = notes.sort((a, b) => a.time - b.time)\r\n            let bpmToMs = Math.floor(60000 / bpm)\r\n            let groupedNotes = []\r\n            while (notes.length > 0) {\r\n                let row = [notes.shift()]\r\n                let amount = 0\r\n                for (let i = 0; i < notes.length; i++) {\r\n                    if (row[0].time > notes[i].time - bpmToMs / 9) amount++\r\n                }\r\n                groupedNotes.push([...row, ...notes.splice(0, amount)])\r\n            }\r\n            let columns = []\r\n            let previousTime = 0\r\n            groupedNotes.forEach(notes => {\r\n                let note = notes[0]\r\n                if (!note) return\r\n                let elapsedTime = note.time - previousTime\r\n                previousTime = note.time\r\n                let emptyColumns = Math.floor((elapsedTime - bpmToMs) / bpmToMs)\r\n                if (emptyColumns > -1) new Array(emptyColumns).fill(0).forEach(() => columns.push(new Column())) // adds empty columns\r\n                let noteColumn = new Column()\r\n                noteColumn.notes = notes.map(note => {\r\n                    return new ColumnNote(note.note, numberToLayer(note.layer))\r\n                })\r\n                columns.push(noteColumn)\r\n            })\r\n            columns.forEach(column => { //merges notes of different layer\r\n                let groupedNotes = groupByIndex(column)\r\n                column.notes = groupedNotes.map(group => {\r\n                    group[0].layer = mergeLayers(group)\r\n                    return group[0]\r\n                })\r\n            })\r\n            let song = new ComposedSong(\"Untitled\")\r\n            song.columns = columns\r\n            song.bpm = bpm\r\n            song.instruments = this.props.data.instruments\r\n            song.pitch = pitch\r\n            let lastColumn = this.props.data.selectedColumn\r\n            song.selected = lastColumn < song.columns.length ? lastColumn : 0\r\n            if (song.columns.length === 0) {\r\n                return new LoggerEvent(\"Error\", \"There are no notes\", 2000).trigger()\r\n            }\r\n            this.props.functions.loadSong(song)\r\n            this.setState({\r\n                accidentals: numberOfAccidentals,\r\n                totalNotes: totalNotes,\r\n                outOfRange: outOfRange\r\n            })\r\n        }\r\n\r\n        this.editTrack = (command, data) => {\r\n            let tracks = this.state.midi.tracks\r\n            if (command === 'index') {\r\n\r\n                tracks[data.index].selected = !tracks[data.index].selected\r\n            }\r\n            if (command === 'layer') {\r\n                tracks[data.index].layer = data.layer\r\n            }\r\n\r\n            this.setState({\r\n                midi: this.state.midi\r\n            }, () => { if (this.state.midi !== null) this.convertMidi() })\r\n        }\r\n        this.changeOffset = (value) => {\r\n            value = parseInt(value)\r\n            if (!Number.isInteger(value)) value = 0\r\n            if(this.state.offset === value) return\r\n            this.setState({\r\n                offset: value\r\n            }, () => { if (this.state.midi !== null) this.convertMidi() })\r\n        }\r\n        this.changePitch = (value) => {\r\n            this.props.functions.changePitch(value)\r\n            this.setState({\r\n                pitch: value\r\n            })\r\n        }\r\n        this.toggleAccidentals = () => {\r\n            this.setState({\r\n                includeAccidentals: !this.state.includeAccidentals\r\n            }, () => { if (this.state.midi !== null) this.convertMidi() })\r\n        }\r\n        this.changeBpm = (value) => {\r\n            value = parseInt(value)\r\n            if (!Number.isInteger(value)) value = 0\r\n            if(this.state.bpm === value) return\r\n            this.setState({\r\n                bpm: value\r\n            }, () => { if (this.state.midi !== null) this.convertMidi() })\r\n        }\r\n    }\r\n    render() {\r\n        const { handleFile, editTrack, state, changeBpm, changeOffset, changePitch } = this\r\n        const { fileName, midi, bpm, offset, pitch, accidentals, outOfRange, totalNotes, includeAccidentals } = state\r\n        const { functions } = this.props\r\n        const { changeMidiVisibility } = functions\r\n        return <div className='floating-midi'>\r\n            <div\r\n                className='midi-row separator-border'\r\n                style={{ width: '100%' }}\r\n            >\r\n                <FilePicker onChange={handleFile}>\r\n                    <button className=\"midi-btn\">\r\n                        Click to load midi file\r\n                    </button>\r\n                </FilePicker>\r\n                <div style={{ margin: '0 0.5rem', maxWidth: '8rem', textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n                    {fileName}\r\n                </div>\r\n                <button\r\n                    className='midi-btn'\r\n                    style={{ marginLeft: 'auto' }}\r\n                    onClick={() => changeMidiVisibility(false)}\r\n                >\r\n                    Close\r\n                </button>\r\n            </div>\r\n            <table className='separator-border' style={{ width: \"100%\" }}>\r\n                <tr>\r\n                    <td>\r\n                        <div style={{ marginRight: '0.5rem' }}>Bpm:</div>\r\n                    </td>\r\n                    <td style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <NumberInput\r\n                            value={bpm}\r\n                            changeValue={changeBpm}\r\n                            delay={600}\r\n                            step={5}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <div style={{ marginRight: '0.5rem' }}>Scale notes by: </div>\r\n                    </td>\r\n                    <td>\r\n                        <NumberInput\r\n                            value={offset}\r\n                            changeValue={changeOffset}\r\n                            delay={600}\r\n                            step={1}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <div style={{ marginRight: '0.5rem' }}>Pitch:</div>\r\n                    </td>\r\n                    <td style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                        <select\r\n                            className='midi-select'\r\n                            value={pitch}\r\n                            onChange={(event) => changePitch(event.target.value)}\r\n                            style={{ backgroundColor: '#576377', width: '5rem' }}\r\n                        >\r\n                            <option value=\"C\">C</option>\r\n                            <option value=\"Db\">Db</option>\r\n                            <option value=\"D\">D</option>\r\n                            <option value=\"Eb\">Eb</option>\r\n                            <option value=\"E\">E</option>\r\n                            <option value=\"F\">F</option>\r\n                            <option value=\"Gb\">Gb</option>\r\n                            <option value=\"G\">G</option>\r\n                            <option value=\"Ab\">Ab</option>\r\n                            <option value=\"A\">A</option>\r\n                            <option value=\"Bb\">Bb</option>\r\n                            <option value=\"B\">B</option>\r\n                        </select>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <div style={{ marginRight: '0.5rem' }}>Include accidentals:</div>\r\n                    </td>\r\n                    <td style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                        <input type='checkbox'\r\n                            checked={includeAccidentals}\r\n                            onChange={this.toggleAccidentals}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            {midi !== null && <div className='midi-column separator-border' style={{ width: '100%' }}>\r\n                <div className='midi-column' style={{ width: '100%' }}>\r\n                    <div>Select midi tracks</div>\r\n                    {midi?.tracks.map((track, i) =>\r\n                        <Track\r\n                            data={track}\r\n                            key={i}\r\n                            index={i}\r\n                            editTrack={editTrack}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            }\r\n            {midi !== null && <table>\r\n                <tr>\r\n                    <td>Total notes: </td>\r\n                    <td />\r\n                    <td>{totalNotes}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Accidentals: </td>\r\n                    <td />\r\n                    <td>{accidentals}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Out of range: </td>\r\n                    <td />\r\n                    <td>{outOfRange}</td>\r\n                </tr>\r\n            </table>\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction Track(props) {\r\n    const { data, index, editTrack } = props\r\n    const [dataShown, setDataShown] = useState(false)\r\n    return <div className='midi-track-column'>\r\n        <div className='midi-track-wrapper'>\r\n            <div className='midi-track-center'>\r\n                <input type='checkbox' onChange={() => editTrack(\"index\", { index: index })} checked={data.selected} />\r\n                {data.name} ({data.notes.length})\r\n            </div>\r\n            <div className='midi-track-center'>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    {data.instrument.family}\r\n                </div>\r\n                <select\r\n                    onChange={(event) => editTrack('layer', { index: index, layer: Number(event.target.value) })}\r\n                    value={data.layer}\r\n                    className='midi-select'\r\n                >\r\n                    <option value='0'>Layer 1</option>\r\n                    <option value='1'>Layer 2</option>\r\n                    <option value='2'>Layer 3</option>\r\n                </select>\r\n\r\n                <FaInfoCircle\r\n                    size={22}\r\n                    color={dataShown ? \"rgb(207, 122, 130)\" : \"white\"}\r\n                    onClick={() => setDataShown(!dataShown)}\r\n                    cursor='pointer'\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n        <div className='midi-track-data' style={{ display: dataShown ? \"flex\" : \"none\" }}>\r\n            <div className='midi-track-data-row'>\r\n                <div>Instrument:</div>\r\n                <div>{data.instrument.name}</div>\r\n            </div>\r\n            <div className='midi-track-data-row'>\r\n                <div>Number of notes:</div>\r\n                <div>{data.notes.length}</div>\r\n            </div>\r\n            <div className='midi-track-data-row'>\r\n                <div>Accidentals:</div>\r\n                <div>{data.numberOfAccidentals}</div>\r\n            </div>\r\n            <div className='midi-track-data-row'>\r\n                <div>Out of range:</div>\r\n                <div>{data.numberOfOutOfRange}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MidiImport\r\n\r\nfunction NumberInput(props) {\r\n    const { changeValue, value, delay = 500, step = 1 } = props\r\n    const [elementValue, setElementValue] = useState(value)\r\n    const debounced = useDebounce(elementValue, delay) \r\n    useEffect(() => {\r\n        changeValue(debounced)\r\n    }, [debounced]);\r\n    useEffect(() => {\r\n        setElementValue(value)\r\n    }, [value])\r\n    return <div style={{ display: 'flex', justifyContent: 'flex-end' }} >\r\n        <button\r\n            onClick={() => setElementValue(elementValue - step)}\r\n            className='midi-btn-small'\r\n        >-</button>\r\n        <input\r\n            type=\"text\"\r\n            value={elementValue}\r\n            onChange={(e) => setElementValue(e.target.value)}\r\n            className='midi-input'\r\n            style={{ margin: '0 0.3rem' }}\r\n        />\r\n        <button\r\n            onClick={() => setElementValue(elementValue + step)}\r\n            className='midi-btn-small'\r\n        >+</button>\r\n    </div>\r\n}\r\n\r\nfunction convertMidiNote(midiNote) {\r\n    let note = null\r\n    let isAccidental = false\r\n    if (appName === 'Sky') {\r\n        switch (midiNote) {\r\n            case 60: note = 0; break;\r\n            case 61: note = 0; isAccidental = true; break;\r\n            case 62: note = 1; break;\r\n            case 63: note = 1; isAccidental = true; break;\r\n            case 64: note = 2; break;\r\n            case 65: note = 3; break;\r\n            case 66: note = 3; isAccidental = true; break;\r\n            case 67: note = 4; break;\r\n            case 68: note = 4; isAccidental = true; break;\r\n            case 69: note = 5; break;\r\n            case 70: note = 5; isAccidental = true; break;\r\n            case 71: note = 6; break;\r\n            case 72: note = 7; break;\r\n            case 73: note = 7; isAccidental = true; break;\r\n            case 74: note = 8; break;\r\n            case 75: note = 8; isAccidental = true; break;\r\n            case 76: note = 9; break;\r\n            case 77: note = 10; break;\r\n            case 78: note = 10; isAccidental = true; break;\r\n            case 79: note = 11; break;\r\n            case 80: note = 11; isAccidental = true; break;\r\n            case 81: note = 12; break;\r\n            case 82: note = 12; isAccidental = true; break;\r\n            case 83: note = 13; break;\r\n            case 84: note = 14; break;\r\n            default: note = null;\r\n        }\r\n    }\r\n    if (appName === 'Genshin') {\r\n        switch (midiNote) {\r\n            case 48: note = 14; break;\r\n            case 49: note = 14; isAccidental = true; break;\r\n            case 50: note = 15; break;\r\n            case 51: note = 15; isAccidental = true; break;\r\n            case 52: note = 16; break;\r\n            case 53: note = 17; break;\r\n            case 54: note = 17; isAccidental = true; break;\r\n            case 55: note = 18; break;\r\n            case 56: note = 18; isAccidental = true; break;\r\n            case 57: note = 19; break;\r\n            case 58: note = 19; isAccidental = true; break;\r\n            case 59: note = 20; break;\r\n            case 60: note = 7; break;\r\n            case 61: note = 7; isAccidental = true; break;\r\n            case 62: note = 8; break;\r\n            case 63: note = 8; isAccidental = true; break;\r\n            case 64: note = 9; break;\r\n            case 65: note = 10; break;\r\n            case 66: note = 10; isAccidental = true; break;\r\n            case 67: note = 11; break;\r\n            case 68: note = 11; isAccidental = true; break;\r\n            case 69: note = 12; break;\r\n            case 70: note = 12; isAccidental = true; break;\r\n            case 71: note = 13; break;\r\n            case 72: note = 0; break;\r\n            case 73: note = 0; isAccidental = true; break;\r\n            case 74: note = 1; break;\r\n            case 75: note = 1; isAccidental = true; break;\r\n            case 76: note = 2; break;\r\n            case 77: note = 3; break;\r\n            case 78: note = 3; isAccidental = true; break;\r\n            case 79: note = 4; break;\r\n            case 80: note = 4; isAccidental = true; break;\r\n            case 81: note = 5; break;\r\n            case 82: note = 5; isAccidental = true; break;\r\n            case 83: note = 6; break;\r\n            default: note = null;\r\n        }\r\n    }\r\n    return {\r\n        note: note,\r\n        isAccidental: isAccidental\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nclass ComposerTools extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let className = data.visible ? \"floating-tools tools-visible\" : \"floating-tools\"\r\n        return <div className={className}>\r\n            <div className=\"tools-row\">\r\n                <div>\r\n                    Scroll to the left / right to select the columns\r\n                </div>\r\n                <button onClick={functions.toggleTools}>\r\n                    Close\r\n                </button>\r\n            </div>\r\n            <div className=\"tools-buttons-wrapper\">\r\n                <div className='tools-half'>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.copyColumns('all')\r\n                        }}\r\n                        className={data.copiedColumns.length !== 0 ? \"tools-button-highlighted\" : \"\"}\r\n                    >\r\n                        Copy\r\n                    </button>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.copyColumns(data.layer)\r\n                        }}\r\n                        className={data.copiedColumns.length !== 0 ? \"tools-button-highlighted\" : \"\"}\r\n                    >\r\n                        Copy layer {data.layer}\r\n                    </button>\r\n                </div>\r\n                <div className='tools-half'>\r\n                    <button\r\n                        disabled={data.copiedColumns.length === 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.pasteColumns(false)\r\n                        }}\r\n                    >\r\n                        Paste\r\n                </button>\r\n                    <button\r\n                        disabled={data.copiedColumns.length === 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.pasteColumns(true)\r\n                        }}\r\n                    >\r\n                        Insert\r\n                </button>\r\n                </div>\r\n                <div className='tools-half'>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.eraseColumns('all')\r\n                        }}\r\n                    >\r\n                        Erase\r\n                    </button>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.eraseColumns(data.layer)\r\n                        }}\r\n                    >\r\n                        Erase layer {data.layer}\r\n                    </button>\r\n                </div>\r\n\r\n                <button\r\n                    disabled={data.copiedColumns.length !== 0}\r\n                    onClick={functions.deleteColumns}\r\n                >\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerTools","import React, { Component } from 'react'\r\nimport { cssClasses,appName } from \"../../appConfig\" \r\nclass ComposerNote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    shouldComponentUpdate(next, prev) {\r\n        return this.props.layers !== next.layers || this.props.noteText !== next.noteText\r\n    }\r\n    render() {\r\n        const {props} = this\r\n        const { data, layers } = props\r\n        let className = cssClasses.noteComposer\r\n        if (layers[0] === \"1\") className += \" layer-1\"\r\n        if (layers[1] === \"1\") className += \" layer-2\"\r\n        if (layers[2] === \"1\") className += \" layer-3\"\r\n        let layer3Class = \"Sky\" ? \"layer-3-ball-bigger\" : \"layer-3-ball\"\r\n        return <button onPointerDown={() => this.props.clickAction(data)} className=\"button-hitbox\">\r\n            <div className={className} >\r\n                <img\r\n                    draggable=\"false\"\r\n                    alt={data.noteNames.mobile}\r\n                    src={props.noteImage}>\r\n                </img>\r\n                <div className={layer3Class}>\r\n                </div>\r\n                <div className={appName === \"Sky\" ? \"note-name-sky\" : \"note-name\"}>\r\n                    {props.noteText}\r\n                </div>\r\n            </div>\r\n        </button>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerNote","import React, { Component } from 'react'\r\n\r\nclass MultiSwitch extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let props = this.props\r\n        return <>\r\n            {props.options.map(e => {\r\n                return <button\r\n                    style={{ backgroundColor: e === props.selected ? props.selectedColor : \"\" }}\r\n                    className={props.buttonsClass}\r\n                    onClick={() => props.onSelect(e)}\r\n                    key={e}\r\n                >\r\n                    {e}\r\n                </button>\r\n            })}\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MultiSwitch\r\n\r\n","import React, { Component } from 'react'\r\nimport ComposerNote from \"./ComposerNote\"\r\nimport MultiSwitch from \"./MultiSwitch\"\r\nimport { appName, keyNames, pitchArr , layoutImages,layoutData } from \"../../appConfig\"\r\nclass ComposerKeyboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let notesIndexes = data.currentColumn.notes.map((e) => e.index)\r\n        let hiddenSideMenu = data.isPlaying ? \" hidden\" : \"\"\r\n        let keyboardClass = \"keyboard\"\r\n        if (data.keyboard.layout.length === 15) keyboardClass += \" keyboard-5\"\r\n        if (data.keyboard.layout.length === 8) keyboardClass += \" keyboard-4\"\r\n        return <div>\r\n            <div className={keyboardClass}>\r\n            {data.keyboard.layout.length === 0 ? <div className=\"loading\">Loading...</div> : null}\r\n                {data.keyboard.layout.map((note, i) => {\r\n                    let index = notesIndexes.indexOf(i)\r\n                    let noteText = \"\"\r\n                    let noteImage = \"\"\r\n                    try{    \r\n                        noteImage = layoutImages[data.keyboard.layout.length][note.index]  \r\n                        if(data.noteNameType === \"Note name\") noteText = keyNames[appName][pitchArr.indexOf(data.pitch)][note.index]\r\n                        if(data.noteNameType === \"Keyboard layout\") noteText = layoutData[data.keyboard.layout.length].keyboardLayout[note.index]\r\n                        if(data.noteNameType === \"Do Re Mi\") noteText = layoutData[data.keyboard.layout.length].mobileLayout[note.index]\r\n                    }catch(e){}\r\n                    return <ComposerNote\r\n                        key={note.index}\r\n                        layers={index >= 0 ? data.currentColumn.notes[index].layer : \"000\"}\r\n                        data={note}\r\n                        noteText={noteText}\r\n                        noteImage={`./assets/icons/keys/${noteImage}.svg`}\r\n                        clickAction={functions.handleClick}\r\n                    />\r\n                })}\r\n            </div>\r\n            <div className={\"bottom-right-wrapper\" + hiddenSideMenu}>\r\n                <div className={\"layer-buttons-wrapper\"}>\r\n                    <div className=\"bottom-right-text\">\r\n                        Layer\r\n                    </div>\r\n                    <MultiSwitch\r\n                        buttonsClass={\"layer-button\"}\r\n                        selectedColor={\"#63aea7\"}\r\n                        options={[1, 2, 3]}\r\n                        onSelect={functions.changeLayer}\r\n                        selected={data.layer}\r\n                    />\r\n                </div>\r\n                <div className=\"tempo-changers-wrapper\">\r\n                    <div className=\"bottom-right-text\">\r\n                        Tempo\r\n                    </div>\r\n                    {data.TempoChangers.map((e) => {\r\n                        return <button\r\n                            key={e.id}\r\n                            onClick={() => functions.handleTempoChanger(e)}\r\n                            style={{ backgroundColor: \"#\" + e.color.toString(16) }}\r\n                        >\r\n                            {e.text}\r\n                        </button>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerKeyboard","import { TempoChangers } from \"../SongUtils\"\r\nimport * as PIXI from \"pixi.js\"\r\nimport {notesPerColumn } from \"../../appConfig\"\r\nlet noteData = {\r\n    background: \"#d3bd8e\",\r\n    border: \"#de4545\",\r\n    center: \"#de4545\"\r\n}\r\n\r\nlet horizontalLineBreak = notesPerColumn / 3\r\nlet standards = [\r\n    {\r\n        color: 0x515c6f //lighter\r\n    },\r\n    {\r\n        color: 0x485363 //darker\r\n    },\r\n    {\r\n        color: 0x1a968b //selected\r\n    },\r\n    {\r\n        color: 0xd6722f\r\n    }\r\n]\r\nlet notes = [\"000\", \"001\", \"010\", \"011\", \"100\", \"101\", \"110\", \"111\"]\r\nlet breakpoints = [\r\n    {\r\n        type: \"short\",\r\n        color: \"#282875\"\r\n    },\r\n    {\r\n        type: \"long\",\r\n        color: \"#282875\"\r\n    }\r\n]\r\nclass ComposerCache {\r\n    constructor(width, height, margin = 4, timelineHeight = 30) {\r\n        this.width = width\r\n        this.height = height\r\n        this.cache = {\r\n            columns: [],\r\n            notes: {},\r\n            standard: [],\r\n            columnsLarger: [],\r\n            standardLarger: [],\r\n            breakpoints: []\r\n        }\r\n        this.notesFigures = []\r\n        this.timelineHeight = timelineHeight\r\n        this.margin = margin\r\n        this.noteWidth = this.width\r\n        this.noteHeight = this.height / notesPerColumn\r\n        this.app = new PIXI.Application({\r\n            width: width,\r\n            height: height,\r\n        })\r\n        this.generate()\r\n    }\r\n    generate = () => {\r\n\r\n        TempoChangers.forEach(tempoChanger => {\r\n            let canvas = drawColumn(tempoChanger, this, 1)\r\n            this.cache.columns.push(canvas.toDataURL())\r\n        })\r\n        standards.forEach(standardColumn => {\r\n            let canvas = drawColumn(standardColumn, this, 1)\r\n            this.cache.standard.push(canvas.toDataURL())\r\n        })\r\n        standards.forEach(standardColumn => {\r\n            let canvas = drawColumn(standardColumn, this, 3)\r\n            this.cache.standardLarger.push(canvas.toDataURL())\r\n        })\r\n        notes.forEach(note => {\r\n            let roundNess = this.noteWidth > 20 ? 4 : 2\r\n            let canvas = document.createElement(\"canvas\")\r\n            canvas.height = this.noteHeight\r\n            canvas.width = this.noteWidth\r\n            let ctx = canvas.getContext(\"2d\")\r\n            if (note[0] === \"1\") {\r\n                ctx.fillStyle = noteData.background\r\n                roundRect(\r\n                    ctx,\r\n                    this.margin / 2,\r\n                    this.margin / 2,\r\n                    this.noteWidth - this.margin - 1,\r\n                    this.noteHeight - this.margin - 1,\r\n                    roundNess,\r\n                    true,\r\n                    false\r\n                )\r\n            }\r\n            if (note[1] === \"1\") {\r\n                ctx.strokeStyle = noteData.border\r\n                ctx.lineWidth = 2\r\n                roundRect(\r\n                    ctx,\r\n                    this.margin / 2,\r\n                    this.margin / 2,\r\n                    this.noteWidth - this.margin - 1,\r\n                    this.noteHeight - this.margin - 1,\r\n                    roundNess,\r\n                    false,\r\n                    true\r\n                )\r\n            }\r\n            if (note[2] === \"1\") {\r\n                ctx.beginPath()\r\n                ctx.fillStyle = noteData.center\r\n                let ballHeight = this.noteHeight / 4\r\n                ctx.arc(this.noteWidth / 2 - 0.5, this.noteHeight / 2 - 0.5, ballHeight, 0, 2 * Math.PI);\r\n                ctx.fill()\r\n            }\r\n            this.cache.notes[note] = canvas.toDataURL()\r\n        })\r\n        TempoChangers.forEach(tempoChanger => {\r\n            let canvas = drawColumn(tempoChanger, this, 2)\r\n            this.cache.columnsLarger.push(canvas.toDataURL())\r\n        })\r\n        breakpoints.forEach(breakpoint => {\r\n            let canvas = document.createElement(\"canvas\")\r\n            if (breakpoint.type === \"short\") {\r\n                let size = this.timelineHeight / 6\r\n                canvas.height = this.timelineHeight\r\n                canvas.width = size * 2\r\n                let ctx = canvas.getContext(\"2d\")\r\n                ctx.fillStyle = breakpoint.color\r\n                ctx.arc(size, this.timelineHeight / 2, size, 0, 2 * Math.PI);\r\n                ctx.fill()\r\n                this.cache.breakpoints.push(canvas.toDataURL())\r\n            } else {\r\n                canvas.height = this.height\r\n                canvas.width = this.width\r\n                let ctx = canvas.getContext(\"2d\")\r\n                ctx.fillStyle = breakpoint.color\r\n                /*\r\n               ctx.strokeStyle = breakpoint.color\r\n               ctx.lineWidth = 3\r\n                ctx.strokeRect(1,1,this.width - 3,this.height - 2)\r\n                */\r\n                ctx.beginPath();\r\n                ctx.moveTo(0, this.height)\r\n                ctx.lineTo(this.noteWidth / 2, this.height)\r\n                ctx.lineTo(0, this.height - this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.width, this.height)\r\n                ctx.lineTo(this.noteWidth / 2, this.height)\r\n                ctx.lineTo(this.width, this.height - this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(0, 0)\r\n                ctx.lineTo(this.noteWidth / 2, 0)\r\n                ctx.lineTo(0, this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.width, 0)\r\n                ctx.lineTo(this.noteWidth / 2, 0)\r\n                ctx.lineTo(this.width, this.noteHeight)\r\n                ctx.fill();\r\n\r\n                this.cache.breakpoints.push(canvas.toDataURL())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction drawColumn(tempoChanger, self, borderWidth) {\r\n    let canvas = document.createElement(\"canvas\")\r\n    canvas.height = self.height\r\n    canvas.width = self.width\r\n    let ctx = canvas.getContext(\"2d\")\r\n    ctx.fillStyle = \"#\" + tempoChanger.color.toString(16)\r\n    ctx.fillRect(0, 0, self.width, self.height)\r\n    ctx.strokeStyle = borderWidth === 2 ? \"black\" : \"#333333\"\r\n    ctx.lineWidth = borderWidth\r\n    ctx.beginPath()\r\n    ctx.moveTo(self.width, 0)\r\n    ctx.lineTo(self.width, self.height)\r\n    ctx.stroke()\r\n    ctx.strokeStyle = \"#333333\"\r\n    for (let i = 1; i < 3; i++) {\r\n        ctx.lineWidth = 1\r\n        let y = self.noteHeight * horizontalLineBreak * i\r\n        ctx.moveTo(0, y)\r\n        ctx.lineTo(self.width, y)\r\n    }\r\n    ctx.stroke()\r\n    return canvas\r\n}\r\n\r\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\r\n    if (typeof stroke === 'undefined') {\r\n        stroke = true;\r\n    }\r\n    if (typeof radius === 'undefined') {\r\n        radius = 5;\r\n    }\r\n    if (typeof radius === 'number') {\r\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\r\n    } else {\r\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\r\n        for (var side in defaultRadius) {\r\n            radius[side] = radius[side] || defaultRadius[side];\r\n        }\r\n    }\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + radius.tl, y);\r\n    ctx.lineTo(x + width - radius.tr, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n    ctx.lineTo(x + width, y + height - radius.br);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\r\n    ctx.lineTo(x + radius.bl, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n    ctx.lineTo(x, y + radius.tl);\r\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n    ctx.closePath();\r\n    if (fill) {\r\n        ctx.fill();\r\n    }\r\n    if (stroke) {\r\n        ctx.stroke();\r\n    }\r\n\r\n}\r\nexport {\r\n    ComposerCache\r\n}","import React, { Component } from 'react'\r\nimport { Stage, Container, Graphics, Sprite } from '@inlet/react-pixi';\r\nimport { ComposerCache } from \"./ComposerCache\"\r\nimport { faStepBackward, faStepForward, faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"./Composer.css\"\r\nimport isMobile from \"is-mobile\"\r\nimport { composerNotePositions, notesPerColumn, appName } from \"../../appConfig\"\r\nlet NumOfColumnsPerCanvas = 35\r\n\r\nclass ComposerCanvas extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let sizes = document.body.getBoundingClientRect()\r\n        this.sizes = sizes\r\n        NumOfColumnsPerCanvas = Number(this.props.data.settings.columnsPerCanvas.value)\r\n        let width = nearestEven(sizes.width * 0.82)\r\n        let height = nearestEven(sizes.height * 0.45)\r\n\r\n        if (window.screen.width < sizes.height) {\r\n            width = nearestEven(sizes.height * 0.82)\r\n            height = nearestEven(sizes.width * 0.45)\r\n        }\r\n        if(appName === \"Sky\") height = nearestEven(height * 0.95)\r\n        this.state = {\r\n            width: width,\r\n            height: height,\r\n            column: {\r\n                width: calcMinColumnWidth(nearestEven(width)),\r\n                height: height\r\n            },\r\n            timelineHeight: isMobile() ? 25 : 30,\r\n            currentBreakpoint: -1\r\n        }\r\n        this.canvasRef = React.createRef()\r\n        let margin = isMobile() ? 1 : 4\r\n        this.cache = new ComposerCache(this.state.column.width, height, margin, this.state.timelineHeight).cache\r\n        this.stageSelected = false\r\n        this.sliderSelected = false\r\n        this.stagePreviousPositon = 0\r\n        this.throttleStage = 0\r\n    }\r\n    resetPointerDown = (e) => {\r\n        this.stageSelected = false\r\n        this.sliderSelected = false\r\n        this.stagePreviousPositon = 0\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"pointerup\", this.resetPointerDown)\r\n        this.canvasRef.current._canvas.addEventListener(\"wheel\", this.handleWheel)\r\n        window.addEventListener(\"keydown\", this.handleKeyboard)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"pointerup\", this.resetPointerDown)\r\n        window.removeEventListener(\"keydown\", this.handleKeyboard)\r\n        this.canvasRef.current._canvas.removeEventListener(\"wheel\", this.handleWheel)\r\n    }\r\n    handleKeyboard = (event) => {\r\n        let key = event.code\r\n        switch (key) {\r\n            case \"ArrowRight\": this.handleBreakpoints(1)\r\n                break;\r\n            case \"ArrowLeft\": this.handleBreakpoints(-1)\r\n                break;\r\n            default : \r\n                break;\r\n        }\r\n    }\r\n    handleWheel = (e) => {\r\n        if (e.deltaY < 0) {\r\n            this.props.functions.selectColumn(this.props.data.selected - 1, true)\r\n        } else {\r\n            this.props.functions.selectColumn(this.props.data.selected + 1, true)\r\n        }\r\n    }\r\n    handleClick = (e, type) => {\r\n        let x = e.data.global.x\r\n        if (type === \"click\") {\r\n            let totalWidth = this.state.column.width * this.props.data.columns.length\r\n\r\n            let relativePos = Math.floor(x / this.state.width * totalWidth / this.state.column.width)\r\n            this.props.functions.selectColumn(relativePos)\r\n        }\r\n        if (type === \"up\") {\r\n            this.sliderSelected = false\r\n        }\r\n        if (type === \"down\") {\r\n            this.sliderSelected = true\r\n        }\r\n        if (type === \"downStage\") {\r\n            this.stagePreviousPositon = x\r\n            this.stageSelected = true\r\n        }\r\n    }\r\n    handleStageSlide = (e) => {\r\n        let x = e.data.global.x\r\n        if (this.stageSelected === true) {\r\n            this.throttleStage++\r\n            if (this.throttleStage < 5) return\r\n            this.throttleStage = 0\r\n            let isMovingLeft = this.stagePreviousPositon < x\r\n            let amount = Math.ceil(Math.abs(this.stagePreviousPositon - x) / 8)\r\n            if (amount > 4) amount = 4\r\n            let toAdd = isMovingLeft ? -1 : 1\r\n            this.stagePreviousPositon = x\r\n            let finalPos = this.props.data.selected + toAdd * amount\r\n            if (this.props.data.selected === finalPos) return\r\n            if (finalPos < 0) finalPos = 0\r\n            if (finalPos > this.props.data.columns.length) finalPos = this.props.data.columns.length - 1\r\n            this.props.functions.selectColumn(finalPos, true)\r\n        }\r\n    }\r\n    handleBreakpoints = (direction) => {\r\n        let selectedColumn = this.props.data.selected\r\n        let columns = this.props.data.columns\r\n        let breakpoint\r\n        let breakpoints = this.props.data.breakpoints\r\n        if (direction === 1) {//right\r\n            breakpoint = breakpoints.filter((v) => v > selectedColumn).sort((a, b) => a - b)\r\n        } else {\r\n            breakpoint = breakpoints.filter((v) => v < selectedColumn).sort((a, b) => b - a)\r\n        }\r\n        if (breakpoint.length >= 0) {\r\n            if (columns.length >= breakpoint[0] && breakpoint[0] >= 0) {\r\n                this.props.functions.selectColumn(breakpoint[0])\r\n            }\r\n        }\r\n\r\n    }\r\n    handleSlide = (e) => {\r\n        if (this.sliderSelected) {\r\n            this.throttleStage++\r\n            if (this.throttleStage < 4) return\r\n            this.throttleStage = 0\r\n            let totalWidth = this.state.column.width * this.props.data.columns.length\r\n            let x = e.data.global.x\r\n            let relativePos = Math.floor(x / this.state.width * totalWidth / this.state.column.width)\r\n            this.props.functions.selectColumn(relativePos, true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let s = this.state\r\n        let pixiOptions = {\r\n            backgroundColor: 0x495466,\r\n        }\r\n        const { data, functions } = this.props\r\n        let sizes = this.state.column\r\n        let xPos = (data.selected - NumOfColumnsPerCanvas / 2 + 1) * - sizes.width\r\n        let timelineHeight = this.state.timelineHeight\r\n        let counter = 0\r\n        let switcher = false\r\n        let cache = this.cache\r\n        let beatMarks = Number(data.settings.beatMarks.value)\r\n        let counterLimit = beatMarks === 0 ? 11 : 4 * beatMarks - 1\r\n        let relativeColumnWidth = this.state.width / data.columns.length\r\n        let stageSize = Math.floor(relativeColumnWidth * (NumOfColumnsPerCanvas + 1))\r\n        if (stageSize > this.state.width) stageSize = this.state.width\r\n        let stagePos = relativeColumnWidth * data.selected - (NumOfColumnsPerCanvas / 2 - 1) * relativeColumnWidth\r\n        return <div className=\"canvas-wrapper\" style={{ width: s.width + 6 }}>\r\n            <Stage\r\n                width={s.width}\r\n                height={s.height}\r\n                raf={false}\r\n                renderOnComponentChange={true}\r\n                options={pixiOptions}\r\n                key={this.state.width}\r\n                ref={this.canvasRef}\r\n            >\r\n                <Container\r\n                    anchor={[0.5, 0.5]}\r\n                    x={xPos}\r\n                    interactive={true}\r\n                    pointerdown={(e) => this.handleClick(e, \"downStage\")}\r\n                    pointermove={(e) => this.handleStageSlide(e)}\r\n                >\r\n                    {data.columns.map((column, i) => {\r\n                        if (counter > counterLimit) {\r\n                            switcher = !switcher\r\n                            counter = 0\r\n                        }\r\n                        counter++\r\n                        if (!isVisible(i, data.selected)) return null\r\n                        let tempoChangersCache = (i + 1) % 4 === 0 ? cache.columnsLarger : cache.columns\r\n                        let standardCache = (i + 1) % 4 === 0 ? cache.standardLarger : cache.standard\r\n                        let standardBg = standardCache[Number(switcher)] // boolean is 1 or 0\r\n                        let background = column.tempoChanger === 0 ? standardBg : tempoChangersCache[column.tempoChanger]\r\n                        return <Column\r\n                            cache={cache}\r\n                            key={i}\r\n                            data={column}\r\n                            index={i}\r\n                            sizes={sizes}\r\n                            backgroundCache={background}\r\n                            isToolsSelected={data.toolsColumns.includes(i)}\r\n                            click={functions.selectColumn}\r\n                            isSelected={i === data.selected}\r\n                            isBreakpoint={data.breakpoints.includes(i)}\r\n                        />\r\n\r\n                    })}\r\n\r\n                </Container>\r\n            </Stage>\r\n            <div className=\"timeline-wrapper\" style={{ height: this.state.timelineHeight }}>\r\n                <div className=\"timeline-button\" onClick={() => this.handleBreakpoints(-1)}>\r\n                    <FontAwesomeIcon icon={faStepBackward} />\r\n                </div>\r\n                <div className=\"timeline-button\" onClick={() => this.handleBreakpoints(1)}>\r\n                    <FontAwesomeIcon icon={faStepForward} />\r\n                </div>\r\n\r\n\r\n                <Stage\r\n                    width={s.width}\r\n                    height={timelineHeight}\r\n                    options={{ antialias: true, autoDensity: true,backgroundColor: 0x515c6f }}\r\n                    raf={false}\r\n                    renderOnComponentChange={true}\r\n                >\r\n                    <Container\r\n                        width={this.state.width}\r\n                        height={this.state.timelineHeight}\r\n                        interactive={true}\r\n                        pointertap={(e) => this.handleClick(e, \"click\")}\r\n                        pointerdown={(e) => this.handleClick(e, \"down\")}\r\n                        pointerup={(e) => this.handleClick(e, \"up\")}\r\n                        pointermove={this.handleSlide}\r\n                    >\r\n                        <Graphics draw={(e) => { fillX(e, this.state.width, this.state.timelineHeight) }} />\r\n                        {data.breakpoints.map(breakpoint => {\r\n                            return <Sprite\r\n                                image={cache.breakpoints[0]}\r\n                                key={breakpoint}\r\n                                x={relativeColumnWidth * breakpoint}\r\n\r\n                            >\r\n                            </Sprite>\r\n                        })}\r\n                    </Container>\r\n\r\n                    <Graphics draw={(e) => drawStage(e, stageSize, this.state.timelineHeight)} x={stagePos} y={2} />\r\n\r\n\r\n                </Stage>\r\n                <div className=\"timeline-button\" onClick={functions.toggleBreakpoint}>\r\n                    <FontAwesomeIcon icon={data.breakpoints.includes(data.selected) ? faMinusCircle : faPlusCircle} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction fillX(g, width, height) {\r\n    g.clear()\r\n    g.beginFill(0x515c6f, 1)\r\n    g.drawRect(0, 0, width, height)\r\n}\r\nfunction drawStage(g, width, height) {\r\n    g.clear()\r\n    g.lineStyle(3, 0x1a968b, 0.8)\r\n    g.drawRoundedRect(0, 0, width - 2, height - 4, 6)\r\n}\r\n\r\nfunction Column(props) {\r\n    let { data, index, sizes, click, cache, backgroundCache, isBreakpoint, isSelected, isToolsSelected } = props\r\n    return <Container\r\n        pointertap={() => click(index)}\r\n        interactive={true}\r\n        x={sizes.width * index}\r\n\r\n    >\r\n        <Sprite\r\n            image={backgroundCache}\r\n            interactiveChildren={false}\r\n        >\r\n            {isSelected || isToolsSelected ? <Sprite\r\n                image={isToolsSelected && !isSelected? cache.standard[3] : cache.standard[2]}\r\n                alpha={isToolsSelected ?0.4 : 0.6}\r\n                zIndex={1}\r\n            >\r\n            </Sprite> : null}\r\n            {isBreakpoint ? <Sprite\r\n                image={cache.breakpoints[1]}\r\n            >\r\n            </Sprite> : null}\r\n        </Sprite>\r\n        {data.notes.map((note) => {\r\n            return <Sprite\r\n                key={note.index}\r\n                image={cache.notes[note.layer]}\r\n                y={positions[note.index] * sizes.height / notesPerColumn}\r\n            >\r\n\r\n            </Sprite>\r\n        })}\r\n\r\n    </Container>\r\n}\r\nfunction calcMinColumnWidth(parentWidth) {\r\n    return nearestEven(parentWidth / NumOfColumnsPerCanvas)\r\n}\r\nfunction nearestEven(num) {\r\n    return 2 * Math.round(num / 2);\r\n}\r\nfunction isVisible(pos, currentPos) {\r\n    let threshold = NumOfColumnsPerCanvas / 2 + 2\r\n    let boundaries = [currentPos - threshold, currentPos + threshold]\r\n    return boundaries[0] < pos && pos < boundaries[1]\r\n}\r\nconst positions = composerNotePositions\r\nexport default ComposerCanvas","import React, { Component, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSave, faMusic, faTimes, faCog, faTrash, faCompactDisc, faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport \"../mainPage/menu.css\"\r\n\r\nimport { FileDownloader, LoggerEvent, ComposerSongSerialization, prepareSongDownload } from \"../SongUtils\"\r\nimport { appName } from '../../appConfig'\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            selectedMenu: \"Settings\",\r\n            selectedSongType: \"composed\",\r\n        }\r\n    }\r\n    toggleMenu = (override) => {\r\n        if (typeof override !== \"boolean\") override = undefined\r\n        let newState = override !== undefined ? override : !this.state.open\r\n        this.setState({\r\n            open: newState,\r\n        })\r\n        if (newState === false) {\r\n            this.props.functions.toggleMenuVisible()\r\n        }\r\n    }\r\n    changeSelectedSongType = (name) => {\r\n        this.setState({\r\n            selectedSongType: name\r\n        })\r\n    }\r\n    selectSideMenu = (selection) => {\r\n        if (selection === this.state.selectedMenu && this.state.open) {\r\n            return this.setState({\r\n                open: false,\r\n            })\r\n        }\r\n        this.setState({\r\n            selectedMenu: selection,\r\n            open: true\r\n        })\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        if (song.data.isComposedVersion) {\r\n            song = ComposerSongSerialization(song)\r\n        }\r\n        let songName = song.name\r\n        if (appName === \"Sky\") {\r\n            //adds old format into the sheet\r\n            song = prepareSongDownload(song)\r\n        }\r\n        if (!Array.isArray(song)) song = [song]\r\n        song.forEach(song1 => {\r\n            song1.data.appName = appName\r\n        })\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json, `${songName}.${appName.toLowerCase()}sheet.json`)\r\n        new LoggerEvent(\"Success\", \"Song downloaded\").trigger()\r\n    }\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let sideClass = this.state.open ? \"side-menu menu-open\" : \"side-menu\"\r\n        let selectedMenu = this.state.selectedMenu\r\n        const { loadSong, removeSong, updateSong, changePage, handleSettingChange, changeVolume, createNewSong, changeMidiVisibility } = functions\r\n        let songFunctions = {\r\n            loadSong: loadSong,\r\n            removeSong: removeSong,\r\n            toggleMenu: this.toggleMenu,\r\n            downloadSong: this.downloadSong\r\n        }\r\n        let songs = data.songs.filter(song => !song.data?.isComposedVersion)\r\n        let composedSongs = data.songs.filter(song => song.data?.isComposedVersion)\r\n        let hasUnsaved = data.hasChanges ? \"margin-top-auto not-saved\" : \"margin-top-auto\"\r\n        let menuClass = data.menuOpen ? \"menu menu-visible\" : \"menu\"\r\n        return <div className=\"menu-wrapper\">\r\n            <div className={menuClass}>\r\n                <CloseMenu action={this.toggleMenu} />\r\n                <MenuItem type=\"Save\" action={() => updateSong(data.currentSong)} className={hasUnsaved}>\r\n                    <FontAwesomeIcon icon={faSave} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Songs\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faMusic} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Settings\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faCog} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Composer\" action={() => changePage(\"\")} className=\"inverted\">\r\n                    <FontAwesomeIcon icon={faCompactDisc} className=\"icon\" />\r\n                </MenuItem>\r\n            </div>\r\n            <div className={sideClass}>\r\n                <MenuPanel title=\"No selection\" visible={selectedMenu}>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Songs\" visible={selectedMenu}>\r\n                    <div className=\"songs-buttons-wrapper\">\r\n                        <button className=\"genshin-button\" onClick={() => { changeMidiVisibility(true); this.toggleMenu() }}>\r\n                            Create from MIDI\r\n                        </button>\r\n                        <button className=\"genshin-button\" onClick={createNewSong}>\r\n                            Create new song\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"tab-selector-wrapper\">\r\n                        <button\r\n                            className={this.state.selectedSongType === \"recorded\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"recorded\")}\r\n                        >\r\n                            Recorded\r\n                        </button>\r\n                        <button\r\n                            className={this.state.selectedSongType === \"composed\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"composed\")}\r\n                        >\r\n                            Composed\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"songs-wrapper no-margin\">\r\n                        {this.state.selectedSongType === \"recorded\"\r\n                            ? songs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={songFunctions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n\r\n                            : composedSongs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={songFunctions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Settings\" visible={selectedMenu}>\r\n                    {Object.entries(data.settings).map(([key, data]) => {\r\n                        return <SettingsRow\r\n                            key={key + data.value}\r\n                            objKey={key}\r\n                            data={data}\r\n                            changeVolume={changeVolume}\r\n                            update={handleSettingChange}\r\n                        >\r\n\r\n                        </SettingsRow>\r\n                    })}\r\n                    {!checkIfTWA() && <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Support me\r\n                    </a>}\r\n                </MenuPanel>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction MenuPanel(props) {\r\n    let className = props.visible === props.title ? \"menu-panel menu-panel-visible\" : \"menu-panel\"\r\n    return <div className={className}>\r\n        <div className=\"menu-title\">\r\n            {props.title}\r\n        </div>\r\n        <div className=\"panel-content-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\nfunction CloseMenu(props) {\r\n    return <div onClick={() => props.action(false)} className=\"close-menu menu-item\">\r\n        <FontAwesomeIcon icon={faTimes} className=\"icon\" />\r\n    </div>\r\n}\r\n\r\nfunction SongRow(props) {\r\n    const { data, functions } = props\r\n    const { removeSong, toggleMenu, loadSong, downloadSong } = functions\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\" onClick={() => {\r\n            loadSong(data)\r\n            toggleMenu(false)\r\n        }}>\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => removeSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nfunction SettingsRow(props) {\r\n    const { data, update, objKey, changeVolume } = props\r\n    const [valueHook, setter] = useState(data.value)\r\n    const [volumeHook, setterVolume] = useState(data.volume)\r\n    function handleChange(e) {\r\n        let el = e.target\r\n        let value = data.type === \"checkbox\" ? el.checked : el.value\r\n        if (data.type === \"number\") {\r\n            value = Number(value)\r\n            e.target.value = \"\" //have to do this to remove a react bug that adds a 0 at the start\r\n            if (value < data.threshold[0] || value > data.threshold[1]) {\r\n                return\r\n            }\r\n        }\r\n        setter(value)\r\n    }\r\n    function sendChange() {\r\n        if (data.value === valueHook) return\r\n        data.value = valueHook\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function sendChangeSelect(e) {\r\n        let value = e.target.value\r\n        data.value = value\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function handleVolume(e) {\r\n        setterVolume(Number(e.target.value))\r\n    }\r\n    function sendVolumeChange() {\r\n        changeVolume({\r\n            key: objKey,\r\n            value: volumeHook\r\n        })\r\n    }\r\n    if (objKey === \"settingVesion\") return null\r\n    return <div className=\"settings-row\">\r\n        <div>\r\n            {data.name}\r\n        </div>\r\n        {data.type === \"select\"\r\n            ? <select value={data.value}\r\n                onChange={sendChangeSelect}\r\n            >\r\n                {data.options.map(e => {\r\n                    return <option value={e} key={e}>{e}</option>\r\n                })}\r\n            </select>\r\n            : null\r\n        }\r\n        {[\"number\", \"text\", \"checkbox\"].includes(data.type) ?\r\n            <input\r\n                type={data.type}\r\n                value={valueHook}\r\n                checked={valueHook}\r\n                onChange={handleChange}\r\n                onBlur={sendChange}\r\n            />\r\n            : null\r\n        }\r\n        {data.type === \"instrument\"\r\n            ? <div className=\"instrument-picker\">\r\n                <select value={data.value}\r\n                    onChange={sendChangeSelect}\r\n                >\r\n                    {data.options.map(e => {\r\n                        return <option value={e} key={e}>{e}</option>\r\n                    })}\r\n                </select>\r\n\r\n                <input\r\n                    type=\"range\"\r\n                    min={1}\r\n                    max={100}\r\n                    value={volumeHook}\r\n                    onChange={handleVolume}\r\n                    onPointerUp={sendVolumeChange}\r\n                />\r\n            </div>\r\n            : null\r\n        }\r\n    </div>\r\n}\r\n\r\nfunction checkIfTWA() {\r\n    let isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n    return isTwa\r\n}\r\n\r\nclass MenuItem extends Component {\r\n    render() {\r\n        let className = this.props.className ? `menu-item ${this.props.className}` : \"menu-item\"\r\n        return <div\r\n            className={className}\r\n            onClick={() => this.props.action(this.props.type)}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n}\r\nexport default Menu","import React, { Component } from 'react'\r\nimport ZangoDb from \"zangodb\"\r\nimport { faPlay, faPlus, faPause, faBars, faChevronLeft, faChevronRight, faTools } from \"@fortawesome/free-solid-svg-icons\"\r\nimport * as workerTimers from 'worker-timers';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport rotateImg from \"../../assets/icons/rotate.svg\"\r\nimport addCell from \"../../assets/icons/addCell.svg\"\r\nimport removeCell from \"../../assets/icons/removeCell.svg\"\r\nimport { appName } from \"../../appConfig\"\r\n\r\nimport MidiImport from \"./MidiParser\"\r\nimport ComposerTools from \"./ComposerTools\"\r\nimport ComposerKeyboard from \"./ComposerKeyboard\"\r\nimport ComposerCanvas from \"./ComposerCanvas\"\r\nimport Menu from \"./Menu\"\r\n\r\nimport { asyncConfirm, asyncPrompt } from \"../AsyncPrompts\"\r\nimport { ComposerSettings } from \"../SettingsObj\"\r\nimport Instrument from \"../Instrument\"\r\nimport {\r\n    ComposedSong, LoggerEvent, ColumnNote, Column, TempoChangers,\r\n    ComposerSongSerialization, ComposerSongDeSerialization, getPitchChanger, RecordingToComposed\r\n} from \"../SongUtils\"\r\n\r\nclass Composer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.db = new ZangoDb.Db(appName, { songs: [] })\r\n        this.dbCol = {\r\n            songs: this.db.collection(\"songs\")\r\n\r\n        }\r\n        let settings = this.getSettings()\r\n        this.playbackInterval = undefined\r\n        this.state = {\r\n            instrument: new Instrument(),\r\n            layers: [new Instrument(), new Instrument()],\r\n            audioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            reverbAudioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            songs: [],\r\n            isPlaying: false,\r\n            song: new ComposedSong(\"Untitled\"),\r\n            settings: settings,\r\n            menuOpen: false,\r\n            layer: 1,\r\n            toolsColumns: [],\r\n            toolsVisible: false,\r\n            midiVisible: false,\r\n        }\r\n        this.copiedColums = []\r\n        this.changes = 0\r\n        this.syncSongs()\r\n        this.loadInstrument(settings.instrument.value, 1)\r\n        this.loadInstrument(settings.layer2.value, 2)\r\n        this.loadInstrument(settings.layer3.value, 3)\r\n\r\n        try {\r\n            this.loadReverb()\r\n        } catch(e) {\r\n            console.log(\"Error with reverb1\")\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"keydown\", this.handleKeyboard)\r\n        if (window.location.hostname !== \"localhost\") {\r\n            window.addEventListener(\"beforeunload\", (event) => {\r\n                event.preventDefault()\r\n                event.returnValue = ''\r\n            })\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyboard)\r\n        let state = this.state\r\n        state.isPlaying = false\r\n    }\r\n    componentDidCatch() {\r\n        this.setState({\r\n            song: new ComposedSong(\"Untitled\")\r\n        })\r\n        new LoggerEvent(\"Warning\", \"There was an error with the song! Restoring default...\").trigger()\r\n    }\r\n    handleAutoSave = () => {\r\n        this.changes++\r\n        if (this.changes > 5 && this.state.settings.autosave.value) {\r\n            if (this.state.song.name !== \"Untitled\") {\r\n                this.updateSong(this.state.song)\r\n            }\r\n\r\n        }\r\n    }\r\n    loadReverb() {\r\n        let audioCtx = this.state.audioContext\r\n        fetch(\"./assets/audio/reverb4.wav\")\r\n            .then(r => r.arrayBuffer().catch((e) => { console.log(\"Error with reverb1\",e) }))\r\n            .then(b => audioCtx.decodeAudioData(b, (impulse_response) => {\r\n                let convolver = audioCtx.createConvolver()\r\n                let gainNode = audioCtx.createGain()\r\n                gainNode.gain.value = 2.5\r\n                convolver.buffer = impulse_response\r\n                convolver.connect(gainNode)\r\n                gainNode.connect(audioCtx.destination)\r\n                this.setState({\r\n                    reverbAudioContext: convolver\r\n                })\r\n            })).catch((e) => {\r\n                console.log(\"Error with reverb2\",e)\r\n            })\r\n    }\r\n    getSettings = () => {\r\n        let storedSettings = localStorage.getItem(appName + \"_Composer_Settings\")\r\n        try {\r\n            storedSettings = JSON.parse(storedSettings)\r\n        } catch (e) {\r\n            storedSettings = null\r\n        }\r\n        if (storedSettings !== null) {\r\n            if (storedSettings.settingVesion !== ComposerSettings.settingVesion) {\r\n                this.updateSettings(ComposerSettings)\r\n                return ComposerSettings\r\n            }\r\n            return storedSettings\r\n        }\r\n        return ComposerSettings\r\n    }\r\n    updateSettings = (override) => {\r\n        let state\r\n        if (override !== undefined) {\r\n            state = override\r\n        } else {\r\n            state = this.state.settings\r\n        }\r\n        localStorage.setItem(appName + \"_Composer_Settings\", JSON.stringify(state))\r\n    }\r\n    handleSettingChange = (setting) => {\r\n        const {state} = this\r\n        let settings = state.settings\r\n        let data = setting.data\r\n        settings[setting.key].value = data.value\r\n        if (data.songSetting) {\r\n            state.song[setting.key] = data.value\r\n        }\r\n        if (setting.key === \"instrument\") this.loadInstrument(data.value, 1)\r\n        if (setting.key === \"layer2\") this.loadInstrument(data.value, 2)\r\n        if (setting.key === \"layer3\") this.loadInstrument(data.value, 3)\r\n        this.setState({\r\n            settings: settings,\r\n            song: this.state.song\r\n        }, () => {\r\n            this.updateSettings()\r\n        })\r\n    }\r\n    loadInstrument = async (name, layer) => {\r\n        const {settings} = this.state\r\n        if (layer === 1) {\r\n            let newInstrument = new Instrument(name)\r\n            await newInstrument.load(this.state.audioContext)\r\n            newInstrument.changeVolume(settings.instrument.volume)\r\n            this.setState({\r\n                instrument: newInstrument\r\n            })\r\n        } else {\r\n            let newInstrument = new Instrument(name)\r\n            let layers = this.state.layers\r\n            layers[layer - 2] = newInstrument\r\n            await newInstrument.load(this.state.audioContext)\r\n            newInstrument.changeVolume(settings[`layer${layer}`]?.volume)\r\n            this.setState({\r\n                layers: layers\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n    changeVolume = (obj) => {\r\n        let settings = this.state.settings\r\n        if (obj.key === \"instrument\") {\r\n            settings.instrument.volume = obj.value\r\n            this.state.instrument.changeVolume(obj.value)\r\n        }\r\n        if (obj.key === \"layer2\") {\r\n            settings.layer2.volume = obj.value\r\n            this.state.layers[0].changeVolume(obj.value)\r\n        }\r\n        if (obj.key === \"layer3\") {\r\n            settings.layer3.volume = obj.value\r\n            this.state.layers[1].changeVolume(obj.value)\r\n        }\r\n        this.setState({\r\n            settings: settings\r\n        }, () => this.updateSettings())\r\n    }\r\n    handleKeyboard = (event) => {\r\n        let key = event.code\r\n        if (document.activeElement.tagName === \"INPUT\") return\r\n        switch (key) {\r\n            case \"KeyD\": this.selectColumn(this.state.song.selected + 1)\r\n                break;\r\n            case \"KeyA\": this.selectColumn(this.state.song.selected - 1)\r\n                break;\r\n            case \"Digit1\": this.handleTempoChanger(TempoChangers[0])\r\n                break;\r\n            case \"Digit2\": this.handleTempoChanger(TempoChangers[1])\r\n                break;\r\n            case \"Digit3\": this.handleTempoChanger(TempoChangers[2])\r\n                break;\r\n            case \"Digit4\": this.handleTempoChanger(TempoChangers[3])\r\n                break;\r\n            case \"Space\": this.togglePlay()\r\n                break;\r\n            case \"KeyQ\": this.removeColumns(1, this.state.song.selected)\r\n                break;\r\n            case \"KeyE\": this.addColumns(1, this.state.song.selected)\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n    }\r\n    playSound = (instrument, index) => {\r\n        try{\r\n            const source = this.state.audioContext.createBufferSource()\r\n            let note = instrument.layout[index]\r\n            if(note === undefined) return\r\n            //TODO export below to Instrument.js\r\n            source.buffer = note.buffer\r\n            source.playbackRate.value = getPitchChanger(this.state.settings.pitch.value)\r\n            source.connect(instrument.gain)\r\n            if (this.state.settings.caveMode.value) {\r\n                instrument.gain.connect(this.state.reverbAudioContext)\r\n            } else {\r\n                instrument.gain.connect(this.state.audioContext.destination)\r\n            }\r\n            source.start(0)\r\n        }catch(e){\r\n\r\n        }\r\n    }\r\n    changePitch = (value) => {\r\n        const {settings} = this.state\r\n        settings.pitch.value = value\r\n        this.setState({\r\n            settings: settings\r\n        }, () => this.updateSettings())\r\n    }\r\n    handleClick = (note) => {\r\n        let column = this.state.song.columns[this.state.song.selected]\r\n        let index = column.notes.findIndex((n) => {\r\n            return note.index === n.index\r\n        })\r\n        let layerIndex = this.state.layer - 1\r\n        if (index < 0) { //if it doesn't exist, create a new one\r\n            let columnNote = new ColumnNote(note.index)\r\n            columnNote.layer = replaceAt(columnNote.layer, layerIndex, \"1\")\r\n            column.notes.push(columnNote)\r\n        } else { //if it exists, toggle the current layer and if it's 000 delete it\r\n            let currentNote = column.notes[index]\r\n            currentNote.layer = replaceAt(currentNote.layer, layerIndex, currentNote.layer[layerIndex] === \"0\" ? \"1\" : \"0\")\r\n            if (currentNote.layer === \"000\") column.notes.splice(index, 1)\r\n        }\r\n        this.setState({\r\n            song: this.state.song\r\n        })\r\n        this.handleAutoSave()\r\n        let instrument = this.state.instrument\r\n        if (this.state.layer > 1) {\r\n            instrument = this.state.layers[this.state.layer - 2]\r\n        }\r\n        this.playSound(instrument, note.index)\r\n    }\r\n    syncSongs = async () => {\r\n        let songs = await this.dbCol.songs.find().toArray()\r\n        songs = songs.map(song => {\r\n            if (song.data.isComposedVersion) {\r\n                return ComposerSongDeSerialization(song)\r\n            }\r\n            return song\r\n        })\r\n        this.setState({\r\n            composedSongs: songs,\r\n            songs: songs\r\n        })\r\n    }\r\n    addSong = async (song) => {\r\n        if (await this.songExists(song.name)) {\r\n            return new LoggerEvent(\"Warning\", \"A song with this name already exists! \\n\" + song.name).trigger()\r\n        }\r\n        await this.dbCol.songs.insert(ComposerSongSerialization(song))\r\n        this.syncSongs()\r\n    }\r\n    updateSong = async (song) => {\r\n        if (song.name === \"Untitled\") {\r\n            let name = await this.askForSongName()\r\n            if (name === null) return\r\n            song.name = name\r\n            return this.addSong(song)\r\n\r\n        }\r\n        return new Promise(async resolve => {\r\n            let settings = this.state.settings\r\n            if (await this.songExists(song.name)) {\r\n                song.instruments[0] = settings.instrument.value\r\n                song.instruments[1] = settings.layer2.value\r\n                song.instruments[2] = settings.layer3.value\r\n                await this.dbCol.songs.update({ name: song.name }, ComposerSongSerialization(song))\r\n                console.log(\"song saved:\", song.name)\r\n                this.changes = 0\r\n                this.syncSongs()\r\n            } else {\r\n                if(song.name.includes(\"- Composed\")){\r\n                    let name = await this.askForSongName()\r\n                    if (name === null) return resolve()\r\n                    song.name = name\r\n                    await this.dbCol.songs.insert(ComposerSongSerialization(song))\r\n                    this.syncSongs()\r\n                    return resolve()\r\n                }\r\n                console.log(\"song doesn't exist\")\r\n                song.name = \"Untitled\"\r\n                this.updateSong(song)\r\n            }\r\n            resolve()\r\n        })\r\n    }\r\n    askForSongName = () => {\r\n        return new Promise(async resolve => {\r\n            let promptString = \"Write song name, press cancel to ignore\"\r\n            while (true) {\r\n                let songName = await asyncPrompt(promptString)\r\n                if (songName === null) return resolve(null)\r\n                if (songName !== \"\") {\r\n                    if (await this.songExists(songName)) {\r\n                        promptString = \"This song already exists: \" + songName\r\n                    } else {\r\n                        return resolve(songName)\r\n                    }\r\n                } else {\r\n                    promptString = \"Write song name, press cancel to ignore\"\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n    askForSongUpdate = () => {\r\n        return new Promise(async resolve => {\r\n            let result = await asyncConfirm(`You have unsaved changes to the song: \"${this.state.song.name}\" do you want to save now?`)\r\n            resolve(result)\r\n        })\r\n    }\r\n    songExists = async (name) => {\r\n        return await this.dbCol.songs.findOne({ name: name }) !== undefined\r\n    }\r\n    createNewSong = async () => {\r\n        if (this.state.song.name !== \"Untitled\" && this.changes > 0) {\r\n            let wantsToSave = await this.askForSongUpdate()\r\n            if (wantsToSave) {\r\n                await this.updateSong(this.state.song)\r\n            }\r\n        }\r\n        let name = await this.askForSongName()\r\n        if (name === null) return\r\n        let song = new ComposedSong(name)\r\n        this.changes = 0\r\n        this.setState({\r\n            song: song\r\n        }, () => this.addSong(song))\r\n    }\r\n    removeSong = async (name) => {\r\n        let confirm = await asyncConfirm(\"Are you sure you want to delete the song: \" + name)\r\n        if (confirm) this.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n    }\r\n\r\n    loadSong = async (song) => {\r\n        const state = this.state\r\n        song = JSON.parse(JSON.stringify(song)) //lose reference\r\n        if (!song.data.isComposedVersion) {\r\n            song = RecordingToComposed(song)\r\n            song.name += \" - Composed\"\r\n        }\r\n        if (this.changes !== 0) {\r\n            let confirm = state.settings.autosave.value && state.song.name !== \"Untitled\"\r\n            if (!confirm && state.song.columns.length > 0) {\r\n                confirm = await asyncConfirm(`You have unsaved changes to the song: \"${state.song.name}\" do you want to save? UNSAVED CHANGES WILL BE LOST`)\r\n            }\r\n            if (confirm) await this.updateSong(state.song)\r\n        }\r\n\r\n        let settings = this.state.settings\r\n        settings.bpm.value = song.bpm\r\n        settings.pitch.value = song.pitch\r\n        if (settings.instrument.value !== song.instruments[0]) {\r\n            this.loadInstrument(song.instruments[0], 1)\r\n            settings.instrument.value = song.instruments[0]\r\n        }\r\n        if (settings.layer2.value !== song.instruments[1]) {\r\n            this.loadInstrument(song.instruments[1], 2)\r\n            settings.layer2.value = song.instruments[1]\r\n        }\r\n        if (settings.layer3.value !== song.instruments[2]) {\r\n            this.loadInstrument(song.instruments[2], 3)\r\n            settings.layer3.value = song.instruments[2]\r\n        }\r\n        this.changes = 0\r\n        console.log(\"song loaded:\", song)\r\n        this.setState({\r\n            song: song,\r\n            settings: settings,\r\n            toolsColumns: []\r\n        })\r\n    }\r\n\r\n    addColumns = (amount = 1, position = \"end\") => {\r\n        return new Promise(resolve => {\r\n            let columns = new Array(amount).fill().map(() => new Column())\r\n            let songColumns = this.state.song.columns\r\n            if (position === \"end\") {\r\n                songColumns.push(...columns)\r\n            } else {\r\n                songColumns.splice(position + 1, 0, ...columns)\r\n            }\r\n            if (amount === 1) this.selectColumn(this.state.song.selected + 1)\r\n            this.handleAutoSave()\r\n            this.setState({\r\n                song: this.state.song\r\n            }, resolve)\r\n        })\r\n\r\n    }\r\n    removeColumns = (amount, position) => {\r\n        let song = this.state.song\r\n        if (song.columns.length < 16) return\r\n        let indexes = new Array(amount).fill().map((e, i) => position + i)\r\n        indexes.forEach(index => {\r\n            if (song.breakpoints.includes(index)) this.toggleBreakpoint(index)\r\n        })\r\n        song.columns.splice(position, amount)\r\n        if (song.columns.length <= song.selected) this.selectColumn(song.selected - 1)\r\n        this.handleAutoSave()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    //----------------------------------------------//\r\n\r\n    togglePlay = async (override) => {\r\n        let newState = typeof override === \"boolean\" ? override : !this.state.isPlaying\r\n        this.setState({\r\n            isPlaying: newState\r\n        }, async () => {\r\n            if (this.state.isPlaying) this.selectColumn(this.state.song.selected)\r\n            let pastError = 0\r\n            let previousTime = new Date().getTime()\r\n            while (this.state.isPlaying) {\r\n                const { song, settings } = this.state\r\n                let tempoChanger = TempoChangers[song.columns[song.selected].tempoChanger]\r\n                let msPerBPM = Math.floor(60000 / settings.bpm.value * tempoChanger.changer) + pastError\r\n                previousTime = new Date().getTime()\r\n                await delayMs(msPerBPM)\r\n                if (!this.state.isPlaying) break\r\n                this.handleTick()\r\n                pastError = previousTime + msPerBPM - new Date().getTime()\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    handleTick = () => {\r\n        let newIndex = this.state.song.selected + 1\r\n        if (this.state.isPlaying && newIndex > this.state.song.columns.length - 1) {\r\n            return this.togglePlay(false)\r\n        }\r\n        this.selectColumn(this.state.song.selected + 1)\r\n\r\n    }\r\n    toggleMenuVisible = () => {\r\n        this.setState({\r\n            menuOpen: !this.state.menuOpen\r\n        })\r\n    }\r\n    toggleBreakpoint = (override) => {\r\n        let song = this.state.song\r\n        let index = typeof override === \"number\" ? override : song.selected\r\n        let indexOfBreakpoint = song.breakpoints.indexOf(index)\r\n        if (indexOfBreakpoint >= 0 && song.columns.length > index) {\r\n            song.breakpoints.splice(indexOfBreakpoint, 1)\r\n        } else if (song.columns.length > index) {\r\n            song.breakpoints.push(index)\r\n        }\r\n        this.validateBreakpoints()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    handleTempoChanger = (changer) => {\r\n        let song = this.state.song\r\n        song.columns[this.state.song.selected].tempoChanger = changer.id\r\n        this.handleAutoSave()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    changePage = async (page) => {\r\n        if (this.changes !== 0) {\r\n            let confirm = await asyncConfirm(`You have unsaved changes to the song: \"${this.state.song.name}\" do you want to save? UNSAVED CHANGES WILL BE LOST`)\r\n            if (confirm) {\r\n                await this.updateSong(this.state.song)\r\n            }\r\n        }\r\n\r\n        this.props.changePage(page)\r\n    }\r\n    selectColumn = (index, ignoreAudio) => {\r\n        const state = this.state\r\n        let song = state.song\r\n        if (index < 0 || index > song.columns.length - 1) return\r\n        let currentColumn = state.song.columns[index]\r\n        song.selected = index\r\n        let toolsColumns = state.toolsColumns\r\n        if (state.toolsVisible && this.copiedColums.length === 0) {\r\n            toolsColumns.push(index)\r\n            let min = Math.min(...toolsColumns)\r\n            let max = Math.max(...toolsColumns)\r\n            toolsColumns = new Array(max - min + 1).fill().map((e, i) => min + i)\r\n        }\r\n        this.setState({\r\n            song: song,\r\n            toolsColumns: toolsColumns\r\n        })\r\n\r\n        if (ignoreAudio) return\r\n        currentColumn.notes.forEach(note => {\r\n            if (note.layer[0] === \"1\") this.playSound(state.instrument, note.index)\r\n            if (note.layer[1] === \"1\") this.playSound(state.layers[0], note.index)\r\n            if (note.layer[2] === \"1\") this.playSound(state.layers[1], note.index)\r\n        })\r\n    }\r\n    changeLayer = (layer) => {\r\n        this.setState({\r\n            layer: layer\r\n        })\r\n    }\r\n    //-----------------------TOOLS---------------------//\r\n    toggleTools = () => {\r\n        this.setState({\r\n            toolsVisible: !this.state.toolsVisible,\r\n            toolsColumns: this.state.toolsVisible ? [] : [this.state.song.selected]\r\n        })\r\n        this.copiedColums = []\r\n    }\r\n    copyColumns = (layer) => {\r\n        this.copiedColums = []\r\n        this.state.toolsColumns.forEach((index) => {\r\n            let column = this.state.song.columns[index]\r\n            if (column !== undefined) this.copiedColums.push(column)\r\n        })\r\n        this.copiedColums = JSON.parse(JSON.stringify(this.copiedColums)) // removing reference\r\n        if (layer !== 'all') {\r\n            this.copiedColums = this.copiedColums.map(column => {\r\n                column.notes = column.notes.filter(e => e.layer[layer - 1] === '1')\r\n                column.notes = column.notes.map(e => {\r\n                    e.layer = '000'\r\n                    e.layer = replaceAt(e.layer, layer - 1, '1')\r\n                    return e\r\n                })\r\n                return column\r\n            })\r\n        }\r\n        this.setState({\r\n            toolsColumns: []\r\n        })\r\n    }\r\n    pasteColumns = async (insert) => {\r\n        let song = this.state.song\r\n        let copiedColumns = JSON.parse(JSON.stringify(this.copiedColums))\r\n        if (!insert) {\r\n            song.columns.splice(song.selected, 0, ...copiedColumns)\r\n        } else {\r\n            copiedColumns.forEach((copiedColumn, i) => {\r\n                let column = song.columns[song.selected + i]\r\n                if (column !== undefined) {\r\n                    copiedColumn.notes.forEach(copiedNote => {\r\n                        let index = column.notes.findIndex(note => copiedNote.index === note.index)\r\n                        if (index < 0) {\r\n                            column.notes.push(copiedNote)\r\n                        } else {\r\n                            for (let j = 0; j < 3; j++) {\r\n                                if (copiedNote.layer[j] === '1') {\r\n                                    column.notes[index].layer = replaceAt(column.notes[index].layer, j, 1)\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    eraseColumns = (layer) => {\r\n        let song = this.state.song\r\n        if(layer === 'all'){\r\n            this.state.toolsColumns.forEach(columnIndex => {\r\n                let column = song.columns[columnIndex]\r\n                if (column !== undefined) song.columns[columnIndex].notes = []\r\n            })\r\n        }else{\r\n            this.state.toolsColumns.forEach(columnIndex => {\r\n                let column = song.columns[columnIndex]\r\n                if (column !== undefined){\r\n                    song.columns[columnIndex].notes.forEach(note =>{\r\n                        note.layer = replaceAt(note.layer,layer-1,'0')\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    validateBreakpoints = () => {\r\n        let breakpoints = this.state.song.breakpoints.filter(breakpoint => breakpoint < this.state.song.columns.length)\r\n        let song = this.state.song\r\n        song.breakpoints = breakpoints\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    deleteColumns = async () => {\r\n        let song = this.state.song\r\n        song.columns = song.columns.filter((e, i) => !this.state.toolsColumns.includes(i))\r\n        if (song.selected > song.columns.length - 1) song.selected = song.columns.length - 1\r\n        if (song.selected <= 0) song.selected = 0\r\n        if (song.columns.length === 0) await this.addColumns(12, 0)\r\n        this.setState({\r\n            song: song,\r\n            toolsColumns: []\r\n        }, this.validateBreakpoints)\r\n    }\r\n    changeMidiVisibility = (visibility) =>{\r\n        this.setState({\r\n            midiVisible: visibility\r\n        })\r\n    }\r\n    render() {\r\n\r\n        const { state } = this\r\n        const { midiVisible } = state\r\n        let song = state.song\r\n        let menuData = {\r\n            songs: state.songs,\r\n            currentSong: state.song,\r\n            settings: state.settings,\r\n            hasChanges: this.changes,\r\n            menuOpen: state.menuOpen\r\n        }\r\n        let menuFunctions = {\r\n            loadSong: this.loadSong,\r\n            removeSong: this.removeSong,\r\n            createNewSong: this.createNewSong,\r\n            changePage: this.changePage,\r\n            updateSong: this.updateSong,\r\n            handleSettingChange: this.handleSettingChange,\r\n            toggleMenuVisible: this.toggleMenuVisible,\r\n            changeVolume: this.changeVolume,\r\n            changeMidiVisibility: this.changeMidiVisibility\r\n        }\r\n        let keyboardFunctions = {\r\n            handleClick: this.handleClick,\r\n            handleTempoChanger: this.handleTempoChanger,\r\n            changeLayer: this.changeLayer\r\n        }\r\n        let keyboardData = {\r\n            keyboard: state.instrument,\r\n            currentColumn: state.song.columns[state.song.selected],\r\n            TempoChangers: TempoChangers,\r\n            layer: state.layer,\r\n            pitch: state.settings.pitch.value,\r\n            isPlaying: state.isPlaying,\r\n            noteNameType: state.settings.noteNameType.value,\r\n        }\r\n        let canvasFunctions = {\r\n            selectColumn: this.selectColumn,\r\n            toggleBreakpoint: this.toggleBreakpoint\r\n        }\r\n        let canvasData = {\r\n            columns: song.columns,\r\n            selected: song.selected,\r\n            settings: state.settings,\r\n            breakpoints: state.song.breakpoints,\r\n            toolsColumns: state.toolsColumns\r\n        }\r\n        let toolsData = {\r\n            visible: this.state.toolsVisible,\r\n            copiedColumns: this.copiedColums,\r\n            layer: this.state.layer\r\n        }\r\n        let toolsFunctions = {\r\n            toggleTools: this.toggleTools,\r\n            eraseColumns: this.eraseColumns,\r\n            deleteColumns: this.deleteColumns,\r\n            copyColumns: this.copyColumns,\r\n            pasteColumns: this.pasteColumns\r\n        }\r\n        let midiParserFunctions = {\r\n            loadSong: this.loadSong,\r\n            changeMidiVisibility: this.changeMidiVisibility,\r\n            changePitch: this.changePitch,\r\n        }\r\n        let midiParserData = {\r\n            instruments: [state.instrument, ...state.layers].map(layer => layer.instrumentName),\r\n            selectedColumn: song.selected,\r\n\r\n        }\r\n        return <div className=\"app\">\r\n            {midiVisible && <MidiImport functions={midiParserFunctions} data={midiParserData}/>}\r\n            <div className=\"hamburger\" onClick={this.toggleMenuVisible}>\r\n                <FontAwesomeIcon icon={faBars} />\r\n\r\n            </div>\r\n            <div className=\"rotate-screen\">\r\n                <img src={rotateImg} alt=\"a rotating screen\">\r\n                </img>\r\n                    For a better experience, add the website to the home screen, and rotate your device\r\n            </div>\r\n\r\n            <div className=\"right-panel-composer\">\r\n\r\n                <div className=\"column fill-x\">\r\n\r\n                    <div className=\"top-panel-composer\">\r\n                        <div className=\"buttons-composer-wrapper\">\r\n                            <div className=\"tool\" onClick={() => this.selectColumn(song.selected + 1)}>\r\n                                <FontAwesomeIcon icon={faChevronRight} />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.selectColumn(song.selected - 1)}>\r\n                                <FontAwesomeIcon icon={faChevronLeft} />\r\n                            </div>\r\n\r\n                            <div className=\"tool\" onClick={this.togglePlay}>\r\n                                <FontAwesomeIcon icon={this.state.isPlaying ? faPause : faPlay} />\r\n                            </div>\r\n                        </div>\r\n                        <ComposerCanvas\r\n                            key={this.state.settings.columnsPerCanvas.value}\r\n                            functions={canvasFunctions}\r\n                            data={canvasData}\r\n                        />\r\n                        <div className=\"buttons-composer-wrapper-right\">\r\n\r\n                            <div className=\"tool\" onClick={() => this.addColumns(1, song.selected)}>\r\n                                <img src={addCell} className=\"tool-icon\" alt=\"Add a new cell\"/>\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.removeColumns(1, song.selected)}>\r\n                                <img src={removeCell} className=\"tool-icon\" alt=\"Remove a cell\"/>\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.addColumns(this.state.settings.beatMarks.value * 4, \"end\")}>\r\n                                <FontAwesomeIcon icon={faPlus} />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={this.toggleTools}>\r\n                                <FontAwesomeIcon icon={faTools} />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <ComposerKeyboard\r\n                    functions={keyboardFunctions}\r\n                    data={keyboardData}\r\n                />\r\n            </div>\r\n            <Menu\r\n                data={menuData}\r\n                functions={menuFunctions}\r\n            />\r\n            <ComposerTools\r\n                data={toolsData}\r\n                functions={toolsFunctions}\r\n            />\r\n            <div className=\"song-info\">\r\n                <div>\r\n                    {song.name}\r\n                </div>\r\n                <div>\r\n                    {formatMillis(calculateLength(this.state.song, this.state.song.selected))}\r\n                     /\r\n                    {formatMillis(calculateLength(this.state.song, this.state.song.columns.length))}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\nfunction formatMillis(millis) {\r\n    var minutes = Math.floor(millis / 60000);\r\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n}\r\nfunction calculateLength(song, end) {\r\n    let columns = song.columns\r\n    let bpmPerMs = Math.floor(60000 / song.bpm)\r\n    let totalLength = 0\r\n    columns.forEach((column, i) => {\r\n        if (i > end) return\r\n        totalLength += bpmPerMs * TempoChangers[column.tempoChanger].changer\r\n    })\r\n    return totalLength\r\n}\r\nfunction delayMs(ms) {\r\n    return new Promise(resolve => {\r\n        workerTimers.setTimeout(resolve, ms)\r\n    })\r\n}\r\nfunction replaceAt(string, index, replacement) {\r\n    if (index >= string.length) {\r\n        return string.valueOf();\r\n    }\r\n\r\n    return string.substring(0, index) + replacement + string.substring(index + 1);\r\n}\r\nexport default Composer\r\n\r\n","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport ZangoDb from \"zangodb\"\r\nimport { FileDownloader, LoggerEvent } from \"./SongUtils\"\r\nimport { asyncConfirm } from \"./AsyncPrompts\"\r\nimport { appName } from \"../appConfig\"\r\nclass ErrorPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.db = new ZangoDb.Db(appName, { songs: [] })\r\n        this.dbCol = {\r\n            songs: this.db.collection(\"songs\")\r\n\r\n        }\r\n        this.state = {\r\n            songs: []\r\n        }\r\n        this.syncSongs()\r\n    }\r\n    syncSongs = async () => {\r\n        let songs = await this.dbCol.songs.find().toArray()\r\n        this.setState({\r\n            songs: songs\r\n        })\r\n    }\r\n    deleteSong = async (name) => {\r\n        if (await asyncConfirm(\"Are you sure you want to delete the song: \" + name)) {\r\n            this.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n        }\r\n\r\n    }\r\n    deleteAllSongs = async () =>{\r\n        if (await asyncConfirm(\"Are you sure you want to delete ALL SONGS?\")) {\r\n            this.dbCol.songs.remove({}, this.syncSongs)\r\n        }\r\n    }\r\n    resetSettings = () => {\r\n        localStorage.removeItem(appName+\"_Composer_Settings\")\r\n        localStorage.removeItem(appName+\"_Main_Settings\")\r\n        new LoggerEvent(\"Success\", \"Settings have been reset\").trigger()\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json, `${song.name}.${appName.toLowerCase()}sheet.json`)\r\n    }\r\n    render() {\r\n        return <div className=\"error-page app\">\r\n            <div className=\"error-text-wrapper\">\r\n                There seems to be an error. <br />\r\n                Here you can download or delete your songs,\r\n                try to find what song caused the error and remove it.\r\n            </div>\r\n            <div className=\"error-buttons-wrapper\">\r\n                <button className=\"genshin-button\" onClick={this.resetSettings}>\r\n                    Reset settings\r\n                </button>\r\n                <button className=\"genshin-button\" onClick={this.deleteAllSongs}>\r\n                    Delete all songs\r\n                </button>\r\n            </div>\r\n            <div className=\"error-songs-wrapper\">\r\n                {this.state.songs.map(song => {\r\n                    return <SongRow\r\n                        data={song}\r\n                        functions={\r\n                            {\r\n                                deleteSong: this.deleteSong,\r\n                                downloadSong: this.downloadSong\r\n                            }\r\n                        }\r\n                    >\r\n\r\n                    </SongRow>\r\n                })}\r\n            </div>\r\n            <button\r\n                className=\"error-go-back genshin-button\"\r\n                onClick={() => this.props.changePage(\"\")}\r\n            >\r\n                Go back to main page\r\n            </button>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction SongRow(props) {\r\n    let data = props.data\r\n    let deleteSong = props.functions.deleteSong\r\n    let downloadSong = props.functions.downloadSong\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\">\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => deleteSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ErrorPage","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/mainPage/App';\r\nimport Composer from \"./Components/Composer/Composer\"\r\nimport ErrorPage from \"./Components/ErrorPage\"\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport \"./Components/mainPage/App.css\"\r\nimport { HashRouter, Route, Redirect } from \"react-router-dom\";\r\nimport { LoggerEvent } from \"./Components/SongUtils\"\r\nimport {appName} from \"./appConfig\"\r\nlet pages = [\"\", \"Composer\", \"ErrorPage\"]\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    let path = window.location.href.split(\"/\")\r\n    path = path.length === 0 ? \"\" : path = path[path.length - 1]\r\n    if (!pages.includes(path)) path = \"\"\r\n    this.state = {\r\n      floatingMessage: {\r\n        timestamp: 0,\r\n        visible: false,\r\n        text: \"Text\",\r\n        title: \"Title\"\r\n      },\r\n      hasVisited: localStorage.getItem(appName+\"_Visited\"),\r\n      hasPersistentStorage: navigator.storage && navigator.storage.persist,\r\n      selectedPage: path\r\n    }\r\n    this.checkUpdate()\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('logEvent', this.logEvent);\r\n  }\r\n  changePage = (page) => {\r\n    this.setState({\r\n      selectedPage: page\r\n    })\r\n  }\r\n  componentDidCatch() {\r\n    this.setState({\r\n      selectedPage: \"ErrorPage\"\r\n    })\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('logEvent', this.logEvent);\r\n  }\r\n  askForStorage = async () => {\r\n    try {\r\n      if (navigator.storage && navigator.storage.persist) {\r\n        let result = await navigator.storage.persist()\r\n        if (result) {\r\n          new LoggerEvent(\"Success\", \"Storage permission allowed\").trigger()\r\n        } else {\r\n          new LoggerEvent(\"Warning\", \"Storage permission refused, if you weren't prompt, your browser denied it for you. Don't worry, it will still work fine\",6000).trigger()\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      new LoggerEvent(\"Error\", \"There was an error with setting up persistent storage\").trigger()\r\n    }\r\n    this.closeWelcomeScreen()\r\n  }\r\n  closeWelcomeScreen = () => {\r\n    localStorage.setItem(appName+\"_Visited\", true)\r\n    this.setState({\r\n      hasVisited: true\r\n    })\r\n  }\r\n  hideMessage = () => {\r\n    let state = this.state\r\n    state.floatingMessage.visible = false\r\n    this.setState({\r\n      floatingMessage: state.floatingMessage\r\n    })\r\n  }\r\n  checkUpdate = () => {\r\n    setTimeout(async () => {\r\n      let currentVersion = \"1.7\"\r\n      let updateMessage =\r\n        `\r\n         (For genshin) Added Zither, Added back \"do re mi\" format\r\n         (For all) Added song backup download \r\n        `\r\n      let storedVersion = localStorage.getItem(appName+\"_Version\")\r\n      if(!this.state.hasVisited){\r\n        return localStorage.setItem(appName+\"_Version\", currentVersion)\r\n      }\r\n\r\n      if (currentVersion !== storedVersion) {\r\n        new LoggerEvent(\"Update V\" + currentVersion, updateMessage, 6000).trigger()\r\n        localStorage.setItem(appName+\"_Version\", currentVersion)\r\n      }\r\n      if (navigator.storage && navigator.storage.persist) {\r\n        let isPersisted = await navigator.storage.persisted()\r\n        if(!isPersisted) isPersisted = await navigator.storage.persist()\r\n        console.log(isPersisted? \"Storage Persisted\" : \"Storage Not persisted\")\r\n      }\r\n    }, 1000)\r\n  }\r\n  logEvent = (error) => {\r\n    error = error.detail\r\n    error.timestamp = new Date().getTime()\r\n    if (typeof error !== \"object\") return\r\n    this.setState({\r\n      floatingMessage: {\r\n        timestamp: error.timestamp,\r\n        visible: true,\r\n        text: error.text,\r\n        title: error.title\r\n      }\r\n    })\r\n    setTimeout(() => {\r\n      if (this.state.floatingMessage.timestamp !== error.timestamp) return\r\n      this.setState({\r\n        floatingMessage: {\r\n          timestamp: 0,\r\n          visible: false,\r\n          text: \"\",\r\n          title: \"\"\r\n        }\r\n      })\r\n    }, error.timeout)\r\n  }\r\n  render() {\r\n    let floatingMessage = this.state.floatingMessage\r\n    let floatingMessageClass = floatingMessage.visible ? \"floating-message floating-message-visible\" : \"floating-message\"\r\n    return <div className=\"index\">\r\n      <div className={floatingMessageClass} onClick={this.hideMessage}>\r\n        <div className=\"floating-message-title\">\r\n          {floatingMessage.title}\r\n        </div>\r\n        <div className=\"floating-message-text\">\r\n          {floatingMessage.text}\r\n        </div>\r\n      </div>\r\n      {[null, false, \"false\"].includes(this.state.hasVisited) ?\r\n        <div className=\"welcome-message\">\r\n          <div className={\"welcome-message-title\"}>Welcome to {appName} music {appName===\"Sky\" ? \"nightly\" : \"\"}</div>\r\n          <div>\r\n            This is a webapp which is run in your browser, if you currently are on one, please add\r\n            the website to the homescreen to have a fullscreen view and a more \"app\" feel.\r\n            <br /><br />\r\n            <div className=\"red-text\">WARNING</div>: Clearing your browser cache / storage might also delete your songs, make sure to\r\n            make a backup sometimes.\r\n            <br /><br />\r\n            {this.state.hasPersistentStorage ?\r\n              <div>\r\n                <div className=\"red-text\">WARNING</div>: To prevent your browser from automatically clearing the app storage, click the \"confirm\" button below, if asked,\r\n                allow permission to keep the website data (Persistent storage). If it doesn't work, the program will try to request it again at every launch.\r\n              </div>\r\n              : null\r\n            }\r\n          </div>\r\n          <div className=\"welcome-message-button-wrapper\">\r\n            <button className=\"welcome-message-button\" onClick={this.askForStorage}>\r\n              Confirm\r\n                </button>\r\n          </div>\r\n        </div> : null\r\n      }\r\n      <HashRouter>\r\n        <Redirect to={\"/\" + this.state.selectedPage}></Redirect>\r\n        {this.state.selectedPage === \"ErrorPage\"\r\n          ? <Route exact path={\"/ErrorPage\"}>\r\n            <ErrorPage changePage={this.changePage} />\r\n          </Route>\r\n          : <>\r\n            <Route exact path=\"/\">\r\n              <App changePage={this.changePage} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/Composer\">\r\n              <Composer changePage={this.changePage} />\r\n            </Route>\r\n\r\n          </>\r\n        }\r\n\r\n      </HashRouter>\r\n    </div>\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Index />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nfunction checkIfTWA(){\r\n  let isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n  return isTwa\r\n}\r\n\r\nfunction setIfInTWA(){\r\n  if(checkIfTWA()) return console.log('inTWA')\r\n  let isTwa = document.referrer.includes('android-app://')\r\n  sessionStorage.setItem('isTwa',isTwa)\r\n}\r\n\r\nsetIfInTWA()\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n"],"sourceRoot":""}