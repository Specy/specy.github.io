{"version":3,"sources":["appConfig.js","Components/SongUtils.js","Components/audio/Instrument.js","Components/audio/Note.js","Components/audio/Keyboard.js","assets/images/mainpage.png","assets/images/composer.png","Components/menu/Menu.js","Components/Composer/SettingsObj.js","Components/AsyncPrompts.js","assets/icons/rotate.svg","App.js","Components/Composer/menu/Menu.js","Components/Composer/ComposerNote.js","Components/Composer/MultiSwitch.js","Components/Composer/ComposerKeyboard.js","Components/Composer/ComposerCache.js","Components/Composer/ComposerCanvas.js","assets/icons/addCell.svg","assets/icons/removeCell.svg","Components/Composer/ComposerTools.js","Composer.js","Components/ErrorPage.js","serviceWorkerRegistration.js","index.js"],"names":["appName","cssClasses","noteComposer","note","instruments","notesPerColumn","instrumentsData","Lyre","notes","DunDun","Bells","Trumpet","Contrabass","Drum","Flute","Guitar","HandPan","Harp","Horn","Piano","Pipa","WinterPiano","Xylophone","layoutData","21","keyboardLayout","split","mobileLayout","keyboardCodes","8","15","keyNames","0","1","2","3","4","5","6","7","9","10","11","pitchArr","composerNotePositions","reverse","importNotePositions","skyImages","Recording","init","start","Date","getTime","console","log","addNote","index","length","push","this","Song","name","data","version","bpm","pitch","isComposed","isComposedVersion","Object","entries","forEach","entry","LoggerEvent","title","text","timeout","trigger","window","dispatchEvent","event","undefined","CustomEvent","detail","PlayingSong","timestamp","FileDownloader","type","download","file","dataType","encodeURIComponent","el","document","createElement","style","body","appendChild","setAttribute","click","remove","TempoChangers","id","changer","color","ComposedSong","breakpoints","columns","selected","Array","fill","e","column","Column","tempoChanger","ComposerSongDeSerialization","song","obj","columnObj","ColumnNote","ComposerToRecording","recordedSong","bpmPerMs","Math","floor","totalTime","ComposerSongSerialization","columnArr","map","layer","genshinLayout","RecordingToComposed","bpmToMs","composed","converted","grouped","threshold","result","row","shift","amount","i","splice","groupByNotes","combinations","columnNote","difference","paddingColumns","finalPadding","col","getPitchChanger","indexOf","Number","pow","toFixed","NoteData","noteNames","url","buffer","ArrayBuffer","Instrument","instrumentName","getNoteFromCode","code","findIndex","setBuffers","bufferArray","layout","changeVolume","gain","value","load","audioContext","a","createGain","requests","fetch","then","arrayBuffer","decodeAudioData","catch","AudioBuffer","sampleRate","Promise","all","buffers","instrumentNameTemp","GainNode","instrumentData","keyboard","mobile","Note","props","state","className","clicked","toBeClicked","toBeClickedNext","noteText","isMobile","animation","transition","fadeTime","svgUrl","skyImg","skyText","onPointerDown","clickAction","draggable","alt","src","Component","delayMs","ms","resolve","workerTimers","Keyboard","handleKeyboard","activeElement","tagName","instrument","keyCode","handleClick","handlePlayEvent","setState","playTimestamp","playSong","handlePracticeEvent","practiceSong","JSON","parse","stringify","loadInstrument","newInstrument","urls","preload","songLength","chunks","chunk","delay","startTime","j","songToPractice","setSlider","size","position","changeSliderPosition","sliderState","functions","changeSliderState","previous","playSound","stopSong","indexClicked","isRecording","handleRecording","setTimeout","source","createBufferSource","playbackRate","settings","caveMode","connect","reverbAudioContext","destination","AudioContext","webkitAudioContext","loadReverb","addEventListener","removeEventListener","audioCtx","r","b","impulse_response","convolver","createConvolver","gainNode","keyboardSize","keyboardClass","transform","find","Menu","toggleMenu","override","newState","open","selectSideMenu","selection","selectedMenu","changeSelectedSongType","selectedSongType","importSong","reader","FileReader","target","isArray","songNotes","bitsPerPage","includes","getSongType","pitchLevel","filter","self","n","key","time","l","SkyToGenshin","addSong","error","readAsText","downloadSong","_id","json","toLowerCase","sideClass","handleSettingChange","changePage","songs","composedSongs","CloseMenu","action","icon","faInfo","faMusic","faCog","faCompactDisc","MenuPanel","visible","onClick","onChange","SongRow","SettingsRow","objKey","update","href","mainPageImg","faCrosshairs","faDownload","composerImg","marginLeft","Key","children","faTimes","useState","valueHook","setter","options","checked","onBlur","deleteSong","removeSong","faTrash","MenuItem","ComposerSettings","settingVesion","songSetting","volume","layer2","layer3","beatMarks","columnsPerCanvas","autosave","MainPageSettings","asyncPrompt","question","container","innerText","input","placeholder","cancel","ok","append","trim","classList","add","asyncConfirm","GenshinButton","active","App","getSettings","storedSettings","localStorage","getItem","updateSettings","setItem","setting","syncSongs","dbCol","toArray","keyboardData","oldState","practicingSong","thereIsSong","songExists","findOne","insert","recording","handleSliderEvent","playingSong","lastPlayedSong","askForSongName","promptString","songName","toggleRecord","eventData","db","ZangoDb","Db","collection","keyboardFunctions","menuFunctions","menuData","rotateImg","faStop","min","max","faSyncAlt","toggleMenuVisible","loadSong","updateSong","songFunctions","hasUnsaved","hasChanges","menuClass","menuOpen","currentSong","faSave","createNewSong","volumeHook","setterVolume","sendChangeSelect","onPointerUp","ComposerNote","next","prev","layers","MultiSwitch","backgroundColor","selectedColor","buttonsClass","onSelect","ComposerKeyboard","notesIndexes","currentColumn","hiddenSideMenu","isPlaying","changeLayer","handleTempoChanger","toString","noteData","horizontalLineBreak","standards","ComposerCache","width","height","margin","timelineHeight","generate","canvas","drawColumn","cache","toDataURL","standardColumn","standard","standardLarger","roundNess","noteWidth","noteHeight","ctx","getContext","fillStyle","roundRect","strokeStyle","lineWidth","beginPath","ballHeight","arc","PI","columnsLarger","breakpoint","moveTo","lineTo","notesFigures","app","PIXI","borderWidth","fillRect","stroke","y","x","radius","tl","tr","br","bl","defaultRadius","side","quadraticCurveTo","closePath","NumOfColumnsPerCanvas","ComposerCanvas","resetPointerDown","stageSelected","sliderSelected","stagePreviousPositon","handleBreakpoints","handleWheel","deltaY","selectColumn","global","totalWidth","relativePos","handleStageSlide","throttleStage","isMovingLeft","ceil","abs","toAdd","finalPos","direction","selectedColumn","v","sort","handleSlide","sizes","getBoundingClientRect","parentWidth","nearestEven","screen","currentBreakpoint","canvasRef","React","createRef","current","_canvas","s","xPos","counter","switcher","counterLimit","relativeColumnWidth","stageSize","stagePos","ref","anchor","interactive","pointerdown","pointermove","pos","currentPos","boundaries","isVisible","tempoChangersCache","standardBg","background","backgroundCache","isToolsSelected","toolsColumns","isSelected","isBreakpoint","faStepBackward","faStepForward","antialias","autoDensity","pointertap","pointerup","draw","g","clear","beginFill","drawRect","image","lineStyle","drawRoundedRect","toggleBreakpoint","faMinusCircle","faPlusCircle","interactiveChildren","alpha","zIndex","positions","num","round","ComposerTools","toggleTools","disabled","copiedColumns","copyColumns","pasteColumns","eraseColumns","deleteColumns","formatMillis","millis","minutes","seconds","calculateLength","end","totalLength","replaceAt","string","replacement","valueOf","substring","Composer","handleAutoSave","changes","togglePlay","removeColumns","addColumns","layerIndex","currentNote","askForSongUpdate","confirm","songColumns","pastError","previousTime","msPerBPM","handleTick","newIndex","indexOfBreakpoint","validateBreakpoints","page","ignoreAudio","toolsVisible","copiedColums","copiedColumn","copiedNote","columnIndex","playbackInterval","location","hostname","preventDefault","returnValue","canvasFunctions","canvasData","toolsData","toolsFunctions","faBars","faChevronRight","faChevronLeft","faPause","faPlay","addCell","removeCell","faPlus","faTools","ErrorPage","resetSettings","removeItem","isLocalhost","Boolean","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","pages","Index","selectedPage","askForStorage","storage","persist","closeWelcomeScreen","hasVisited","hideMessage","floatingMessage","checkUpdate","logEvent","path","pathname","hasPersistentStorage","floatingMessageClass","baseName","substr","lastIndexOf","replace","basename","to","exact","ReactDOM","render","StrictMode","getElementById","URL","process","origin","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.79ad169a.chunk.js","sourcesContent":["const appName = [\"Sky\",\"Genshin\"][0]\r\nconst cssClasses = {\r\n    noteComposer: appName === \"Genshin\" ? \"note-composer\" : \"note-composer-sky\",\r\n    note: appName === \"Genshin\" ? \"note\" : \"note-sky\"\r\n}\r\nconst instruments = appName === \"Genshin\" ? [\r\n    \"Lyre\",\r\n    \"DunDun\"\r\n    ]:[\r\n        \"Piano\",\r\n        \"Contrabass\",\r\n        \"Guitar\",\r\n        \"Harp\",\r\n        \"Horn\",\r\n        \"Trumpet\",\r\n        \"Pipa\",\r\n        \"WinterPiano\",\r\n        \"Xylophone\",\r\n        \"Drum\",\r\n        \"Bells\",\r\n        \"DunDun\",\r\n        \"HandPan\",\r\n        \"Flute\",\r\n    ]\r\nconst notesPerColumn = appName === \"Genshin\" ? 21 : 15\r\nconst instrumentsData = {\r\n    Lyre: {\r\n        notes: 21\r\n    },\r\n    DunDun: {\r\n        notes: 8\r\n    },\r\n    Bells: {\r\n        notes: 8\r\n    },\r\n    Trumpet:{\r\n        notes: 15\r\n    },\r\n    Contrabass: {\r\n        notes: 15\r\n    },\r\n    Drum: {\r\n        notes: 8\r\n    },\r\n    Flute: {\r\n        notes: 15\r\n    },\r\n    Guitar: {\r\n        notes: 15\r\n    },\r\n    HandPan: {\r\n        notes: 8\r\n    },\r\n    Harp: {\r\n        notes: 15\r\n    },\r\n    Horn: {\r\n        notes: 15\r\n    },\r\n    Piano: {\r\n        notes: 15\r\n    },\r\n    Pipa: {\r\n        notes: 15\r\n    },\r\n    WinterPiano: {\r\n        notes: 15\r\n    },\r\n    Xylophone: {\r\n        notes: 15\r\n    }\r\n}\r\n\r\n\r\nconst layoutData = {\r\n    21: {\r\n        keyboardLayout: (\"Q W E R T Y U \" +\r\n            \"A S D F G H J \" +\r\n            \"Z X C V B N M\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa so la ti \" +\r\n            \"do re mi fa so la ti \" +\r\n            \"do re mi fa so la ti\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 84 89 85 \" +\r\n            \"65 83 68 70 71 72 74 \" +\r\n            \"90 88 67 86 66 78 77\").split(\" \")\r\n    },\r\n    8: {\r\n        keyboardLayout: (\"Q W E R \" +\r\n            \"A S D F\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa \" +\r\n            \"do re mi fa\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 \" +\r\n        \"65 83 68 70\").split(\" \")\r\n    },\r\n    15: {\r\n        keyboardLayout: (\"Q W E R T \" +\r\n            \"A S D F G \" +\r\n            \"Z X C V B\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa so \" +\r\n            \"do re mi fa so \" +\r\n            \"do re mi fa so\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 84 \" +\r\n            \"65 83 68 70 71 \" +\r\n            \"90 88 67 86 66\").split(\" \")\r\n    }\r\n}\r\n\r\nconst keyNames = {\r\n    0: [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\"],\r\n    1: [\"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\"],\r\n    2: [\"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\"],\r\n    3: [\"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\"],\r\n    4: [\"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\"],\r\n    5: [\"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\"],\r\n    6: [\"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\"],\r\n    7: [\"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\"],\r\n    8: [\"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\"],\r\n    9: [\"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\"],\r\n    10: [\"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\"],\r\n    11: [\"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\"]\r\n}\r\nconst pitchArr = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"] \r\n\r\nconst composerNotePositions =  appName === \"Genshin\" ? [14, 15, 16, 17, 18, 19, 20, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6].reverse() : [15,16,17,18,19,20,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14].reverse()\r\n\r\nconst importNotePositions = appName === \"Genshin\" ? [14, 15, 16, 17, 18, 19, 20, 7, 8, 9, 10, 11, 12, 13, 0] :  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]\r\n\r\nconst skyImages = {\r\n    15: \"dmcr dm cr dm cr cr dm dmcr dm cr cr dm cr dm dmcr\".split(\" \"),\r\n    8: \"cr dm cr dm cr dm cr dm\".split(\" \"),\r\n    21: \"do re mi fa so la ti do re mi fa so la ti do re mi fa so la ti\".split(\" \")\r\n}\r\nexport {\r\n    instruments,\r\n    instrumentsData,\r\n    composerNotePositions,\r\n    importNotePositions,\r\n    appName,\r\n    layoutData,\r\n    cssClasses,\r\n    notesPerColumn,\r\n    keyNames,\r\n    pitchArr,\r\n    skyImages\r\n}","import { importNotePositions, appName, instruments } from \"../appConfig\"\r\nclass Recording {\r\n  constructor() {\r\n    this.start = new Date().getTime()\r\n    this.notes = []\r\n  }\r\n  init = () => {\r\n    this.start = new Date().getTime() - 100\r\n    console.log(\"Started new recording\")\r\n  }\r\n  addNote = (index) => {\r\n    if (this.notes.length === 0) this.init()\r\n    let currentTime = new Date().getTime()\r\n    let note = [index, currentTime - this.start]\r\n    this.notes.push(note)\r\n  }\r\n}\r\nclass Song {\r\n  constructor(name, notes = [], data = {}) {\r\n    this.name = name\r\n    this.version = 1\r\n    this.notes = notes\r\n    this.bpm = 220\r\n    this.pitch = \"C\"\r\n    this.data = {\r\n      isComposed: false,\r\n      isComposedVersion: false,\r\n      appName: appName\r\n    }\r\n    Object.entries(data).forEach((entry) => {\r\n      this.data[entry[0]] = entry[1]\r\n    })\r\n  }\r\n}\r\nclass LoggerEvent {\r\n  constructor(title, text, timeout) {\r\n    this.title = title\r\n    this.timeout = timeout\r\n    this.text = text\r\n    if (timeout === undefined) this.timeout = 3000\r\n    this.event = new CustomEvent(\"logEvent\", {\r\n      detail: {\r\n        title: this.title,\r\n        text: this.text,\r\n        timeout: this.timeout\r\n      }\r\n    })\r\n  }\r\n  trigger = () => {\r\n    window.dispatchEvent(this.event)\r\n  }\r\n}\r\nclass NoteData {\r\n  constructor(index, noteNames, url) {\r\n    this.index = index\r\n    this.noteNames = noteNames\r\n    this.url = url\r\n    this.buffer = new ArrayBuffer(8)\r\n    this.clicked = false\r\n  }\r\n}\r\nclass PlayingSong {\r\n  constructor(notes) {\r\n    this.timestamp = new Date().getTime()\r\n    this.notes = notes\r\n  }\r\n}\r\nclass FileDownloader {\r\n  constructor(type) {\r\n    if (type === undefined) type = \"text/json\"\r\n    this.dataType = \"data:\" + type + \";charset=utf-8,\"\r\n  }\r\n  download = (file, name) => {\r\n    let data = this.dataType + encodeURIComponent(file)\r\n    var el = document.createElement(\"a\")\r\n    el.style = \"display:none\"\r\n    document.body.appendChild(el)\r\n    el.setAttribute(\"href\", data)\r\n    el.setAttribute(\"download\", name)\r\n    el.click();\r\n    el.remove();\r\n  }\r\n}\r\n\r\nlet TempoChangers = [\r\n  {\r\n    id: 0,\r\n    text: \"1\",\r\n    changer: 1,\r\n    color: 0x515c6f\r\n  }, {\r\n    id: 1,\r\n    text: \"1/2\",\r\n    changer: 1 / 2,\r\n    color: 0x517553\r\n  }, {\r\n    id: 2,\r\n    text: \"1/4\",\r\n    changer: 1 / 4,\r\n    color: 0x434c7d\r\n  }, {\r\n    id: 3,\r\n    text: \"1/8\",\r\n    changer: 1 / 8,\r\n    color: 0x774D6D\r\n  }\r\n]\r\nclass ComposedSong {\r\n  constructor(name, notes = [], data = {}) {\r\n    data.isComposed = true\r\n    data.isComposedVersion = true\r\n    this.version = 1\r\n    this.data = data\r\n    this.name = name\r\n    this.bpm = 220\r\n    this.pitch = \"C\"\r\n    this.notes = notes\r\n    this.instruments = [instruments[0], instruments[0], instruments[0]]\r\n    this.breakpoints = [0]\r\n    this.columns = []\r\n    this.selected = 0\r\n    new Array(100).fill().forEach((e) => {\r\n      let column = new Column()\r\n      column.tempoChanger = 0\r\n      this.columns.push(column)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nfunction ComposerSongDeSerialization(song) {\r\n  let obj = {\r\n    data: song.data,\r\n    name: song.name,\r\n    bpm: song.bpm ?? 220,\r\n    pitch: song.pitch ?? \"C\",\r\n    instruments: song.instruments || [instruments[0], instruments[0], instruments[0]],\r\n    breakpoints: song.breakpoints ?? [],\r\n    notes: [],\r\n    selected: 0,\r\n    columns: []\r\n  }\r\n  song.columns.forEach(column => {\r\n    let columnObj = new Column()\r\n    columnObj.tempoChanger = column[0]\r\n    column[1].forEach(note => {\r\n      columnObj.notes.push(new ColumnNote(note[0], note[1]))\r\n    })\r\n    obj.columns.push(columnObj)\r\n  })\r\n  return obj\r\n}\r\nfunction ComposerToRecording(song) {\r\n  let recordedSong = new Song(song.name)\r\n  let bpmPerMs = Math.floor(60000 / song.bpm)\r\n  let totalTime = 100\r\n  song.columns.forEach(column => {\r\n    column[1].forEach(note => {\r\n      recordedSong.notes.push([note[0], totalTime])\r\n    })\r\n    totalTime += Math.floor(bpmPerMs * TempoChangers[column[0]].changer)\r\n  })\r\n  return recordedSong\r\n}\r\nfunction ComposerSongSerialization(song) {\r\n  let obj = {\r\n    data: song.data,\r\n    name: song.name,\r\n    bpm: song.bpm,\r\n    pitch: song.pitch,\r\n    breakpoints: song.breakpoints,\r\n    instruments: song.instruments,\r\n    columns: []\r\n  }\r\n  obj.data.appName = appName\r\n  /*\r\n      notes = [tempoChanger,notes] ----> note = [index,layer]\r\n      tempoChanger = Number\r\n  */\r\n  song.columns.forEach(column => {\r\n    let columnArr = [column.tempoChanger]\r\n    let notes = column.notes.map(note => {\r\n      return [note.index, note.layer]\r\n    })\r\n    columnArr[1] = notes\r\n    obj.columns.push(columnArr)\r\n  })\r\n  return obj\r\n}\r\nfunction getSongType(song) {\r\n  try {\r\n    if (Array.isArray(song) && song.length > 0) song = song[0]\r\n    if (Array.isArray(song.songNotes) && song.bitsPerPage !== undefined) {\r\n      //sky\r\n      if ([true, \"true\"].includes(song.isComposed)) {\r\n        return \"skyComposed\"\r\n      } else {\r\n        return \"skyRecorded\"\r\n      }\r\n    } else {\r\n      //genshin\r\n      if (song.data.appName !== appName) return \"none\"\r\n      if (song.data.isComposedVersion) {\r\n        if (typeof song.name !== \"string\") return \"none\"\r\n        if (typeof song.bpm !== \"number\") return \"none\"\r\n        if (!pitchArr.includes(song.pitch)) return \"none\"\r\n        if (Array.isArray(song.breakpoints)) {\r\n          if (song.breakpoints.length > 0) {\r\n            if (typeof song.breakpoints[0] !== \"number\") return \"none\"\r\n          }\r\n        } else {\r\n          return \"none\"\r\n        }\r\n        if (Array.isArray(song.columns)) {\r\n          if (song.columns.length > 0) {\r\n            let column = song.columns[0]\r\n            if (typeof column[0] !== \"number\") return \"none\"\r\n          }\r\n        } else {\r\n          return \"none\"\r\n        }\r\n        return \"genshinComposed\"\r\n      } else {\r\n        if (typeof song.name !== \"string\") return \"none\"\r\n        if (typeof song.bpm !== \"number\") return \"none\"\r\n        if (!pitchArr.includes(song.pitch)) return \"none\"\r\n        return \"genshinRecorded\"\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e)\r\n    return \"none\"\r\n  }\r\n  return \"none\"\r\n}\r\nlet genshinLayout = importNotePositions\r\n\r\nfunction SkyToGenshin(song) {\r\n  let result = new Song(\"Error\")\r\n  try {\r\n    song = song[0]\r\n    result = new Song(song.name)\r\n    result.bpm = song.bpm || 220\r\n    result.pitch = (pitchArr[song.pitchLevel || 0]) || \"C\"\r\n    //remove duplicate notes\r\n    song.songNotes = song.songNotes.filter((note, index, self) =>\r\n      index === self.findIndex((n) => {\r\n        return n.key.split('Key')[1] === note.key.split('Key')[1] && n.time === note.time\r\n      })\r\n    )\r\n    let songNotes = song.songNotes\r\n    songNotes.forEach(note => {\r\n      let data = note.key.split(\"Key\")\r\n      result.notes.push([genshinLayout[data[1]], note.time, note.l ?? Number(data[0])])\r\n    })\r\n\r\n    if ([true, \"true\"].includes(song.isComposed)) {\r\n      result = ComposerSongSerialization(RecordingToComposed(result))\r\n    } else {\r\n      result.notes = result.notes.map(e => [e[0], e[1]])\r\n    }\r\n\r\n\r\n  } catch (e) {\r\n    console.log(e)\r\n    return new Song(\"Error importing\")\r\n  }\r\n  return result\r\n}\r\nfunction RecordingToComposed(song) {\r\n  let bpmToMs = Math.floor(60000 / song.bpm)\r\n  let composed = new ComposedSong(song.name, [])\r\n  composed.bpm = song.bpm\r\n  composed.pitch = song.pitch\r\n  let notes = song.notes\r\n  //remove duplicates\r\n\r\n  let converted = []\r\n  let grouped = groupByNotes(notes, bpmToMs / 9)\r\n  let combinations = [bpmToMs, Math.floor(bpmToMs / 2), Math.floor(bpmToMs / 4), Math.floor(bpmToMs / 8)]\r\n  for (let i = 0; i < grouped.length; i++) {\r\n    let column = new Column()\r\n    column.notes = grouped[i].map(note => {\r\n      let columnNote = new ColumnNote(note[0])\r\n      if (note[2] === 0) columnNote.layer = \"100\"\r\n      if (note[2] === 1) columnNote.layer = \"100\"\r\n      if (note[2] === 2) columnNote.layer = \"010\"\r\n      if (note[2] === 3) columnNote.layer = \"110\"\r\n      if (note[2] === undefined) columnNote.layer = \"100\"\r\n      return columnNote\r\n    })\r\n    let next = grouped[i + 1] || [[0, 0, 0]]\r\n    let difference = next[0][1] - grouped[i][0][1]\r\n    let paddingColumns = []\r\n    while (difference >= combinations[3]) {\r\n      if (difference / combinations[0] >= 1) {\r\n        difference -= combinations[0]\r\n        paddingColumns.push(0)\r\n      } else if (difference / combinations[1] >= 1) {\r\n        difference -= combinations[1]\r\n        paddingColumns.push(1)\r\n      } else if (difference / combinations[2] >= 1) {\r\n        difference -= combinations[2]\r\n        paddingColumns.push(2)\r\n      } else if (difference / combinations[3] >= 1) {\r\n        difference -= combinations[3]\r\n        paddingColumns.push(3)\r\n      }\r\n    }\r\n    let finalPadding = []\r\n    column.tempoChanger = paddingColumns.shift() || 0\r\n    paddingColumns = paddingColumns.forEach((col, i) => {\r\n      let column = new Column()\r\n      column.tempoChanger = col\r\n      finalPadding.push(column)\r\n    })\r\n    converted.push(column, ...finalPadding)\r\n  }\r\n  composed.columns = converted\r\n  return composed\r\n}\r\nclass Column {\r\n  constructor() {\r\n    this.notes = []\r\n    this.tempoChanger = 0\r\n\r\n  }\r\n}\r\nfunction groupByNotes(notes, threshold) {\r\n  let result = []\r\n  while (notes.length > 0) {\r\n    let row = [notes.shift()]\r\n    let amount = 0\r\n    for (let i = 0; i < notes.length; i++) {\r\n      if (row[0][1] > notes[i][1] - threshold) amount++\r\n    }\r\n    result.push([...row, ...notes.splice(0, amount)])\r\n  }\r\n  return result\r\n}\r\nclass ColumnNote {\r\n  constructor(index, layer = \"000\") {\r\n    this.index = index\r\n    this.layer = layer\r\n  }\r\n}\r\nlet pitchArr = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"]\r\nfunction getPitchChanger(pitch) {\r\n  let index = pitchArr.indexOf(pitch)\r\n  if (index < 0) index = 0\r\n  return Number(Math.pow(2, index / 12).toFixed(2))\r\n}\r\nfunction randomNum(min, max) {\r\n  return Math.floor(Math.random() * max) + min\r\n}\r\nexport {\r\n  Recording,\r\n  Song,\r\n  NoteData,\r\n  FileDownloader,\r\n  LoggerEvent,\r\n  PlayingSong,\r\n  ComposedSong,\r\n  ColumnNote,\r\n  Column,\r\n  TempoChangers,\r\n  ComposerSongSerialization,\r\n  ComposerSongDeSerialization,\r\n  ComposerToRecording,\r\n  getPitchChanger,\r\n  getSongType,\r\n  SkyToGenshin,\r\n  RecordingToComposed\r\n}","import {instrumentsData, layoutData, instruments} from \"../../appConfig\"\r\nclass Instrument {\r\n    constructor(instrumentName) {\r\n        this.instrumentName = instrumentName\r\n        let instrumentNameTemp = instrumentName === undefined ? instruments[0] : instrumentName\r\n        this.layout = []\r\n        this.gain = GainNode\r\n        let instrumentData = instrumentsData[instrumentNameTemp]\r\n        this.keyboardLayout = layoutData[instrumentData.notes].keyboardLayout\r\n\r\n        this.mobileLayout = layoutData[instrumentData.notes].mobileLayout\r\n        this.keyboardCodes = layoutData[instrumentData.notes].keyboardCodes\r\n        let i = 0\r\n        if (instrumentName === undefined) return\r\n        for (const noteName of this.keyboardLayout) {\r\n            let noteNames = {\r\n                keyboard: noteName,\r\n                mobile: this.mobileLayout[i]\r\n            }\r\n            let url = `./assets/audio/${instrumentName}/${i}.mp3`\r\n            let note = new NoteData(i, noteNames, url)\r\n            this.layout.push(note)\r\n            i++\r\n        }\r\n\r\n    }\r\n    getNoteFromCode = (code) => {\r\n        let index = this.keyboardCodes.findIndex(e => e == code)\r\n        return index !== -1 ? index : null\r\n    }\r\n    setBuffers = (bufferArray) => {\r\n        bufferArray.forEach((buffer, i) => {\r\n            this.layout[i].buffer = buffer\r\n        })\r\n    }\r\n    changeVolume = (amount) => {\r\n        this.gain.gain.value = amount / 100\r\n    }\r\n    load = async (audioContext) => {\r\n        this.gain = audioContext.createGain()\r\n        this.gain.gain.value = 1\r\n        const requests = this.layout.map(e => fetch(e.url)\r\n            .then(result => result.arrayBuffer())\r\n            .then(buffer => audioContext.decodeAudioData(buffer)\r\n                .catch(e => { \r\n                    return new AudioBuffer({\r\n                        length:1, \r\n                        sampleRate:48000\r\n                    })\r\n                })\r\n            ))\r\n        let buffers = await Promise.all(requests)\r\n        this.setBuffers(buffers)\r\n        return true\r\n    }\r\n}\r\n\r\nclass NoteData {\r\n    constructor(index, noteNames, url) {\r\n        this.index = index\r\n        this.noteNames = noteNames\r\n        this.url = url\r\n        this.buffer = new ArrayBuffer(8)\r\n    }\r\n}\r\nexport default Instrument","import React, { Component } from 'react'\r\nimport isMobile from \"is-mobile\"\r\nimport { cssClasses, appName} from \"../../appConfig\"\r\n\r\nclass Note extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        const { props } = this\r\n        let data = props.data\r\n        let className = data.clicked ? (cssClasses.note + \" click-event\") : cssClasses.note\r\n        let toBeClicked = props.toBeClicked ? \" note-red\" : \"\"\r\n        let toBeClickedNext = props.toBeClickedNext ? \" note-border-click\" : \"\"\r\n        className += toBeClicked + toBeClickedNext\r\n        let noteText = isMobile() ? data.noteNames.mobile : data.noteNames.keyboard\r\n        let animation = { transition: `all ${props.fadeTime}s` }\r\n        let svgUrl = `./assets/icons/keys/${data.noteNames.mobile}.svg`\r\n        if(appName === \"Sky\") svgUrl = `./assets/icons/keys/${props.skyImg}.svg`\r\n        if(appName === \"Sky\") noteText = props.skyText\r\n        return <button\r\n            onPointerDown={() => props.clickAction(data)}\r\n            className=\"button-hitbox\"\r\n\r\n        >\r\n            <div className={className} style={animation}>\r\n                <img\r\n                    draggable=\"false\"\r\n                    alt={data.noteNames.mobile}\r\n                    src={svgUrl}>\r\n\r\n                </img>\r\n                <div className={appName === \"Sky\" ? \"note-name-sky\" : \"note-name\"}>\r\n                    {noteText}\r\n                </div>\r\n            </div>\r\n        </button>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Note","import React, { Component } from 'react'\r\nimport \"./Keyboard.css\"\r\nimport { getPitchChanger } from \"../SongUtils\"\r\nimport Instrument from \"./Instrument\"\r\nimport Note from \"./Note\"\r\nimport * as workerTimers from 'worker-timers';\r\nimport { keyNames, pitchArr , skyImages, appName} from \"../../appConfig\"\r\nclass Keyboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            instrument: new Instrument(),\r\n            audioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            reverbAudioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            playTimestamp: new Date().getTime(),\r\n            songToPractice: [],\r\n            sliderState: {\r\n                position: 0,\r\n                size: 0\r\n            }\r\n        }\r\n        console.log(\"created\")\r\n        this.loadInstrument(props.data.instrument)\r\n        try {\r\n            this.loadReverb()\r\n        } catch {\r\n            console.log(\"Error with reverb\")\r\n        }\r\n    }\r\n    handleKeyboard = (event) => {\r\n        if (document.activeElement.tagName === \"INPUT\") return\r\n        let index = this.state.instrument.getNoteFromCode(event.keyCode)\r\n        let note\r\n        if (index !== null) {\r\n            note = this.state.instrument.layout[index]\r\n        }\r\n        if (note !== undefined) {\r\n            this.handleClick(note)\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyboard)\r\n        window.addEventListener(\"playSong\", this.handlePlayEvent)\r\n        window.addEventListener(\"practiceSong\", this.handlePracticeEvent)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyboard);\r\n        window.removeEventListener(\"playSong\", this.handlePlayEvent)\r\n        window.removeEventListener(\"practiceSong\", this.handlePracticeEvent)\r\n        let state = this.state\r\n        state.playTimestamp = new Date().getTime()\r\n    }\r\n    loadReverb() {\r\n        let audioCtx = this.state.audioContext\r\n        fetch(\"./assets/audio/reverb4.wav\")\r\n            .then(r => r.arrayBuffer().catch(function () { console.log(\"Error with reverb \") }))\r\n            .then(b => audioCtx.decodeAudioData(b, (impulse_response) => {\r\n                let convolver = audioCtx.createConvolver()\r\n                let gainNode = audioCtx.createGain()\r\n                gainNode.gain.value = 2.5\r\n                convolver.buffer = impulse_response\r\n                convolver.connect(gainNode)\r\n                gainNode.connect(audioCtx.destination)\r\n                this.setState({\r\n                    reverbAudioContext: convolver\r\n                })\r\n            })).catch(function () {\r\n                console.log(\"Error with reverb\")\r\n            })\r\n    }\r\n    handlePlayEvent = (event) => {\r\n        let data = event.detail\r\n        this.setState({\r\n            playTimestamp: data.timestamp\r\n        }, () => this.playSong(data))\r\n    }\r\n    handlePracticeEvent = (event) => {\r\n        let data = event.detail\r\n        this.practiceSong(JSON.parse(JSON.stringify(data)))\r\n    }\r\n    loadInstrument = async (name) => {\r\n        let newInstrument = new Instrument(name)\r\n        let urls = newInstrument.layout.map(e => e.url)\r\n        let buffers = await this.preload(urls)\r\n        newInstrument.setBuffers(buffers)\r\n        this.setState({\r\n            instrument: newInstrument\r\n        })\r\n\r\n    }\r\n    practiceSong = (song) => {\r\n        let notes = song.notes\r\n        let songLength = notes.length\r\n        if (song.start === undefined) song.start = 0\r\n        notes.splice(0, song.start)\r\n        let chunks = []\r\n        for (let i = 0; notes.length > 0; i++) {\r\n            let chunk = {\r\n                notes: [notes.shift()],\r\n                delay: 0\r\n            }\r\n            let startTime = chunk.notes.length > 0 ? chunk.notes[0][1] : 0\r\n            for (let j = 0; j < notes.length && j < 20; j++) {\r\n                let difference = notes[j][1] - chunk.notes[0][1] - song.threshold\r\n                if (difference < 0) {\r\n                    chunk.notes.push(notes.shift())\r\n                    j--\r\n                }\r\n            }\r\n            chunk.delay = notes.length > 0 ? notes[0][1] - startTime : 0\r\n            chunks.push(chunk)\r\n        }\r\n        this.setState({\r\n            songToPractice: chunks\r\n        })\r\n        this.setSlider({\r\n            size: songLength,\r\n            position: song.start\r\n        })\r\n    }\r\n    changeSliderPosition = (position) => {\r\n        let sliderState = this.state.sliderState\r\n        sliderState.position += position\r\n        this.setState({\r\n            sliderState: sliderState\r\n        }, () => this.props.functions.changeSliderState(this.state.sliderState))\r\n    }\r\n    setSlider = (state) => {\r\n        this.setState({\r\n            sliderState: state\r\n        }, this.props.functions.changeSliderState(state))\r\n    }\r\n    playSong = async (song) => {\r\n        let notes = song.notes\r\n        let previous = 0\r\n        this.setSlider({\r\n            size: notes.length,\r\n            position: 0\r\n        })\r\n        if (notes.length === 0) return\r\n        for (let i = 0; i < notes.length; i++) {\r\n            let delay = notes[i][1] - previous\r\n            previous = notes[i][1]\r\n            let note = notes[i][0]\r\n            if (this.state.playTimestamp !== song.timestamp) break\r\n            if (delay > 10) await delayMs(delay)\r\n            this.changeSliderPosition(1)\r\n            this.playSound(this.state.instrument.layout[note])\r\n        }\r\n        this.props.functions.stopSong()\r\n    }\r\n    handleClick = (note) => {\r\n        let practiceSong = this.state.songToPractice\r\n        if (practiceSong.length > 0) {\r\n            let indexClicked = practiceSong[0]?.notes.findIndex(e => e[0] === note.index)\r\n            if (indexClicked !== -1) {\r\n                practiceSong[0].notes.splice(indexClicked, 1)\r\n                if (practiceSong[0].notes.length === 0) practiceSong.shift()\r\n                if (practiceSong.length === 0) this.props.functions.stopSong()\r\n                this.setState({\r\n                    songToPractice: practiceSong\r\n                }, () => this.changeSliderPosition(1))\r\n            }\r\n        }\r\n\r\n        this.playSound(note)\r\n\r\n    }\r\n    playSound = (note) => {\r\n        if(note === undefined) return\r\n        if (this.props.isRecording) this.props.functions.handleRecording(note)\r\n        note.clicked = true\r\n        setTimeout(() => {\r\n            note.clicked = false\r\n            this.setState({\r\n                instrument: this.state.instrument\r\n            })\r\n        }, 200)\r\n        const source = this.state.audioContext.createBufferSource()\r\n        source.playbackRate.value = getPitchChanger(this.props.settings.pitch.value)\r\n        source.buffer = note.buffer\r\n        if (this.props.settings.caveMode.value) {\r\n            source.connect(this.state.reverbAudioContext)\r\n        } else {\r\n            source.connect(this.state.audioContext.destination)\r\n        }\r\n        source.start(0)\r\n        this.setState({\r\n            instrument: this.state.instrument\r\n        })\r\n    }\r\n    preload = (urls) => {\r\n        const requests = urls.map(url => fetch(url)\r\n            .then(result => result.arrayBuffer())\r\n            .then(buffer => this.state.audioContext.decodeAudioData(buffer).catch(e => { return new AudioBuffer({length:1, sampleRate:48000})}))\r\n        )\r\n        return Promise.all(requests)\r\n    }\r\n    render() {\r\n        let state = this.state\r\n        let size = this.props.settings.keyboardSize.value / 100\r\n        if (size < 0.5) size = 0.5\r\n        if (size > 1.5) size = 1.5\r\n        let keyboardClass = \"keyboard\"\r\n        if (state.instrument.layout.length === 15) keyboardClass += \" keyboard-5\"\r\n        if (state.instrument.layout.length === 8) keyboardClass += \" keyboard-4\"\r\n        return <div className={keyboardClass} style={{ transform: `scale(${size})` }}>\r\n             {state.instrument.layout.length === 0 ? <div className=\"loading\">Loading...</div> : null}\r\n            {state.instrument.layout.map(note => {\r\n                let toBeClicked = state.songToPractice[0]?.notes.find(e => e[0] === note.index) !== undefined\r\n                let toBeClickedNext = state.songToPractice[1]?.notes.find(e => e[0] === note.index) !== undefined\r\n                let fadeTime = state.songToPractice[0]?.delay !== undefined ? state.songToPractice[0]?.delay / 1000 : 0.1\r\n                let skyText = \"\"\r\n                let skyImg = \"\"\r\n                try{\r\n                    skyText = keyNames[pitchArr.indexOf(this.props.settings.pitch.value)][note.index]\r\n                    skyImg = skyImages[state.instrument.layout.length][note.index]\r\n                }catch(e){}\r\n\r\n                return <Note\r\n                    key={note.index}\r\n                    toBeClicked={toBeClicked}\r\n                    fadeTime={fadeTime}\r\n                    toBeClickedNext={toBeClickedNext}\r\n                    data={note}\r\n                    skyText={skyText}\r\n                    skyImg={skyImg}\r\n                    clickAction={this.handleClick}\r\n                >\r\n\r\n                </Note>\r\n            })}\r\n        </div>\r\n    }\r\n}\r\nfunction delayMs(ms) {\r\n    return new Promise(resolve => {\r\n        workerTimers.setTimeout(resolve, ms)\r\n    })\r\n}\r\nexport default Keyboard\r\n","export default __webpack_public_path__ + \"static/media/mainpage.114ce51f.png\";","export default __webpack_public_path__ + \"static/media/composer.76adcf72.png\";","import React, { Component, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMusic, faTimes, faCog, faTrash, faCrosshairs, faDownload, faInfo, faCompactDisc, } from '@fortawesome/free-solid-svg-icons'\r\nimport { FaDiscord, FaGooglePlay , FaGithub} from 'react-icons/fa';\r\nimport \"./menu.css\"\r\nimport mainPageImg from '../../assets/images/mainpage.png'\r\nimport composerImg from '../../assets/images/composer.png'\r\nimport { FileDownloader, LoggerEvent, getSongType, SkyToGenshin } from \"../SongUtils\"\r\nimport { FilePicker } from \"react-file-picker\"\r\nimport { appName } from \"../../appConfig\"\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            selectedMenu: \"Songs\",\r\n            selectedSongType: \"recorded\",\r\n\r\n        }\r\n    }\r\n\r\n    toggleMenu = (override) => {\r\n        if (typeof override !== \"boolean\") override = undefined\r\n        let newState = override !== undefined ? override : !this.state.open\r\n        this.setState({\r\n            open: newState,\r\n        })\r\n    }\r\n    selectSideMenu = (selection) => {\r\n        if (selection === this.state.selectedMenu && this.state.open) {\r\n            return this.setState({\r\n                open: false,\r\n            })\r\n        }\r\n        this.setState({\r\n            selectedMenu: selection,\r\n            open: true\r\n        })\r\n    }\r\n    changeSelectedSongType = (name) => {\r\n        this.setState({\r\n            selectedSongType: name\r\n        })\r\n    }\r\n    importSong = (file) => {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', (event) => {\r\n\r\n            try {\r\n                let song = JSON.parse(event.target.result)\r\n                let type = getSongType(song)\r\n                if (type === \"none\") {\r\n                    return new LoggerEvent(\"Error\", \"Invalid song\").trigger()\r\n                }\r\n                if ([\"skyRecorded\", \"skyComposed\"].includes(type)) {\r\n                    song = SkyToGenshin(song)\r\n                }\r\n                this.props.functions.addSong(song)\r\n            } catch (e) {\r\n                new LoggerEvent(\"Error\", \"Error importing song\").trigger()\r\n                console.error(e)\r\n            }\r\n\r\n        });\r\n        reader.readAsText(file)\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json, song.name + `.${appName.toLowerCase()}sheet.json`)\r\n        new LoggerEvent(\"Success\", \"Song downloaded\").trigger()\r\n    }\r\n    render() {\r\n        let sideClass = this.state.open ? \"side-menu menu-open\" : \"side-menu\"\r\n        let selectedMenu = this.state.selectedMenu\r\n        const { data, functions } = this.props\r\n        const { handleSettingChange } = functions\r\n        functions.toggleMenu = this.toggleMenu\r\n        functions.downloadSong = this.downloadSong\r\n        let changePage = this.props.functions.changePage\r\n        let songs = data.songs.filter(song => !song.data.isComposedVersion)\r\n        let composedSongs = data.songs.filter(song => song.data.isComposedVersion)\r\n\r\n        return <div className=\"menu-wrapper\">\r\n            <div className=\"menu menu-visible\">\r\n                {this.state.open && <CloseMenu action={this.toggleMenu} />}\r\n                <MenuItem type=\"Help\" action={this.selectSideMenu} className=\"margin-top-auto\">\r\n                    <FontAwesomeIcon icon={faInfo} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Songs\" action={this.selectSideMenu} >\r\n                    <FontAwesomeIcon icon={faMusic} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Settings\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faCog} className=\"icon\" />\r\n                </MenuItem>\r\n\r\n                <MenuItem type=\"Composer\" action={() => changePage(\"Composer\")}>\r\n                    <FontAwesomeIcon icon={faCompactDisc} className=\"icon\" />\r\n                </MenuItem>\r\n            </div>\r\n            <div className={sideClass}>\r\n                <MenuPanel title=\"No selection\" visible={selectedMenu}>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Songs\" visible={selectedMenu}>\r\n                    <div className=\"songs-buttons-wrapper\">\r\n                        <button className=\"genshin-button\"\r\n                            onClick={() => changePage(\"Composer\")}\r\n                        >\r\n                            Compose song\r\n                        </button>\r\n                        <FilePicker\r\n                            onChange={(file) => this.importSong(file)}\r\n                        >\r\n                            <button className=\"genshin-button\">\r\n                                Import song\r\n                            </button>\r\n                        </FilePicker>\r\n\r\n                    </div>\r\n                    <div className=\"tab-selector-wrapper\">\r\n                        <button\r\n                            className={this.state.selectedSongType === \"recorded\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"recorded\")}\r\n                        >\r\n                            Recorded\r\n                        </button>\r\n                        <button\r\n                            className={this.state.selectedSongType === \"composed\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"composed\")}\r\n                        >\r\n                            Composed\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"songs-wrapper\">\r\n                        {this.state.selectedSongType === \"recorded\"\r\n                            ? songs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={functions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n\r\n                            : composedSongs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={functions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Settings\" visible={selectedMenu}>\r\n                    {Object.entries(data.settings).map(([key, data]) => {\r\n                        return <SettingsRow\r\n                            key={key + data.value}\r\n                            objKey={key}\r\n                            data={data}\r\n                            update={handleSettingChange}\r\n                        >\r\n\r\n                        </SettingsRow>\r\n                    })}\r\n                    <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\">\r\n                        Support me\r\n                    </a>\r\n\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Help\" visible={selectedMenu}>\r\n                    <div className='help-icon-wrapper'>\r\n                        <a href='https://discord.gg/Rj8V5gkZPc' >\r\n                            <FaDiscord className='help-icon' />\r\n                        </a>\r\n                        <a href='https://github.com/Specy/genshin-music' >\r\n                            <FaGithub className='help-icon' />\r\n                        </a>\r\n                        \r\n                    </div>\r\n                    <div className='help-title'>\r\n                        Main page\r\n                    </div>\r\n                    <div>\r\n                        <img src={mainPageImg} className='help-img' />\r\n                        <ol>\r\n                            <li>Keyboard</li>\r\n                            <li>Record your keyboard</li>\r\n                            <li>Open the composer</li>\r\n                            <li>Open the settings</li>\r\n                            <li>Open the saved songs</li>\r\n                        </ol>\r\n                        <div className=\"column\">\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faCrosshairs} /> = practice the song\r\n                            </div>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faDownload} /> = download the song\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='help-title'>\r\n                        Composer\r\n                    </div>\r\n                    <div>\r\n                        <img src={composerImg} className='help-img' />\r\n                        <ol>\r\n                            <li>Go to the next / previous breakpoint</li>\r\n                            <li>Timeline of the breakpoints</li>\r\n                            <li>Open the tools</li>\r\n                            <li>Add 16 columns to the end</li>\r\n                            <li>Remove the current selected column</li>\r\n                            <li>Add column after the current one</li>\r\n                        </ol>\r\n                        The composer has tools for PC users: <br/><br/>\r\n                            <div style={{marginLeft:'1rem'}}>\r\n                                <Key>A / D</Key> = move left / right <br/>\r\n                                <Key>1 / 2 / 3 / 4</Key> = change tempo <br/>\r\n                                <Key>Space bar</Key> = play / pause song <br/>\r\n                                <Key>Arrow left</Key> = go to previous breakpoint<br/>\r\n                                <Key>Arrow right</Key> = go to next breakpoint <br/>\r\n                                <Key>Q</Key> = remove current column<br/>\r\n                                <Key>E</Key> = add column <br/>\r\n                            </div>\r\n                    </div>\r\n                    <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\">\r\n                        Support me\r\n                    </a>\r\n                </MenuPanel>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction Key(props){\r\n    return <div className='keyboard-key'>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nfunction MenuPanel(props) {\r\n    let className = props.visible === props.title ? \"menu-panel menu-panel-visible\" : \"menu-panel\"\r\n    return <div className={className}>\r\n        <div className=\"menu-title\">\r\n            {props.title}\r\n        </div>\r\n        <div className=\"panel-content-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\nfunction CloseMenu(props) {\r\n    return <div onClick={() => props.action(false)} className=\"close-menu menu-item\">\r\n        <FontAwesomeIcon icon={faTimes} className=\"icon\" />\r\n    </div>\r\n}\r\nfunction SettingsRow(props) {\r\n    const { data, update, objKey } = props\r\n    const [valueHook, setter] = useState(data.value)\r\n    function handleChange(e) {\r\n        let el = e.target\r\n        let value = data.type === \"checkbox\" ? el.checked : el.value\r\n        if (data.type === \"number\") {\r\n            value = Number(value)\r\n            e.target.value = \"\" //have to do this to remove a react bug that adds a 0 at the start\r\n            if (value < data.threshold[0] || value > data.threshold[1]) {\r\n                return\r\n            }\r\n        }\r\n\r\n        setter(value)\r\n    }\r\n    function sendChange() {\r\n        if (data.value === valueHook) return\r\n        data.value = valueHook\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function sendChangeSelect(e) {\r\n        let value = e.target.value\r\n        data.value = value\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    if (objKey === \"settingVesion\") return null\r\n    return <div className=\"settings-row\">\r\n        <div>\r\n            {data.name}\r\n        </div>\r\n        {data.type === \"select\"\r\n            ? <select value={data.value}\r\n                onChange={sendChangeSelect}\r\n            >\r\n                {data.options.map(e => {\r\n                    return <option value={e} key={e}>{e}</option>\r\n                })}\r\n            </select>\r\n            : <input\r\n                type={data.type}\r\n                value={valueHook}\r\n                checked={valueHook}\r\n                onChange={handleChange}\r\n                onBlur={sendChange}\r\n            />}\r\n    </div>\r\n}\r\nfunction SongRow(props) {\r\n    let data = props.data\r\n    let deleteSong = props.functions.removeSong\r\n    let playSong = props.functions.playSong\r\n    let practiceSong = props.functions.practiceSong\r\n    let toggleMenu = props.functions.toggleMenu\r\n    let downloadSong = props.functions.downloadSong\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\" onClick={() => {\r\n            playSong(data)\r\n            toggleMenu(false)\r\n        }}>\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => {\r\n                practiceSong(data)\r\n                toggleMenu(false)\r\n            }}\r\n            >\r\n                <FontAwesomeIcon icon={faCrosshairs} />\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => deleteSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\nclass MenuItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        let className = this.props.className ? `menu-item ${this.props.className}` : \"menu-item\"\r\n        return <div\r\n            className={className}\r\n            onClick={() => this.props.action(this.props.type)}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n}\r\nexport default Menu","import {instruments, appName} from \"../../appConfig\"\r\nlet ComposerSettings = {\r\n    settingVesion: appName + 2,\r\n    instrument: {\r\n        name: \"Instrument (Layer 1)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    layer2: {\r\n        name: \"Instrument (Layer 2)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    layer3: {\r\n        name: \"Instrument (Layer 3)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    bpm: {\r\n        name: \"Bpm\",\r\n        type: \"number\",\r\n        songSetting: true,\r\n        threshold: [0, 1000],\r\n        value: 220\r\n    },\r\n    beatMarks: {\r\n        name: \"Beat marks\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 3,\r\n        options: [\r\n            3,\r\n            4\r\n        ]\r\n    },\r\n    pitch: {\r\n        name: \"Pitch\",\r\n        type: \"select\",\r\n        songSetting: true,\r\n        value: \"C\",\r\n        options: [\r\n            \"C\",\r\n            \"Db\",\r\n            \"D\",\r\n            \"Eb\",\r\n            \"E\",\r\n            \"F\",\r\n            \"Gb\",\r\n            \"G\",\r\n            \"Ab\",\r\n            \"A\",\r\n            \"Bb\",\r\n            \"B\",\r\n        ]\r\n    },\r\n    columnsPerCanvas: {\r\n        name: \"Number of visible columns\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 35,\r\n        options: [\r\n            20,\r\n            25,\r\n            30,\r\n            35,\r\n            40,\r\n            45,\r\n            50\r\n        ]\r\n    },\r\n    caveMode: {\r\n        name: \"Reverb (cave mode)\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    },\r\n    autosave: {\r\n        name: \"Autosave changes\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    }\r\n}\r\nlet MainPageSettings = {\r\n    settingVesion:appName + 2,\r\n    keyboardSize: {\r\n        name: \"Keyboard size\",\r\n        type: \"number\",\r\n        songSetting: false,\r\n        value: 100,\r\n        threshold: [0, 200]\r\n    },\r\n    instrument: {\r\n        name: \"Instrument\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        options: instruments\r\n    },\r\n    pitch: {\r\n        name: \"Pitch\",\r\n        type: \"select\",\r\n        songSetting: true,\r\n        value: \"C\",\r\n        options: [\r\n            \"C\",\r\n            \"Db\",\r\n            \"D\",\r\n            \"Eb\",\r\n            \"E\",\r\n            \"F\",\r\n            \"Gb\",\r\n            \"G\",\r\n            \"Ab\",\r\n            \"A\",\r\n            \"Bb\",\r\n            \"B\",\r\n        ]\r\n    },\r\n    caveMode: {\r\n        name: \"Reverb (cave mode)\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    }\r\n}\r\nexport {\r\n    ComposerSettings,\r\n    MainPageSettings\r\n}","import { LoggerEvent } from \"./SongUtils\"\r\n\r\nasync function asyncPrompt(question) {\r\n    return new Promise(resolve => {\r\n        let container = document.createElement(\"div\")\r\n        container.className = \"floating-prompt\"\r\n        let text = document.createElement(\"div\")\r\n        text.innerText = question\r\n        let input = document.createElement(\"input\")\r\n        input.type = \"text\"\r\n        input.placeholder = \"Write here\"\r\n        input.className = \"prompt-input\"\r\n        let row = document.createElement(\"div\")\r\n        let cancel = document.createElement(\"button\")\r\n        let ok = document.createElement(\"button\")\r\n        cancel.className = \"prompt-button\"\r\n        ok.className = \"prompt-button disabled\"\r\n        row.className = \"prompt-row\"\r\n        ok.innerText = \"Ok\"\r\n        cancel.innerText = \"Cancel\"\r\n        row.append(cancel, ok)\r\n        container.append(text, input, row)\r\n        document.body.appendChild(container)\r\n        input.addEventListener(\"input\", () => {\r\n            if (input.value.trim() === \"\") {\r\n                ok.classList.add(\"disabled\")\r\n            } else {\r\n                ok.classList.remove(\"disabled\")\r\n            }\r\n\r\n        })\r\n        cancel.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(null)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n        ok.addEventListener(\"click\", () => {\r\n            if (input.value.trim() === \"Untitled\") {\r\n                input.value = \"\"\r\n                return new LoggerEvent(\"Warning\", '\"Untitled\" is a reserved word, use another').trigger()\r\n            }\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(input.value.trim())\r\n\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n    })\r\n}\r\n\r\nasync function asyncConfirm(question) {\r\n    return new Promise(resolve => {\r\n        let container = document.createElement(\"div\")\r\n        container.className = \"floating-prompt\"\r\n        let text = document.createElement(\"div\")\r\n        text.innerText = question\r\n        let row = document.createElement(\"div\")\r\n        let cancel = document.createElement(\"button\")\r\n        let ok = document.createElement(\"button\")\r\n\r\n        cancel.className = \"prompt-button\"\r\n        ok.className = \"prompt-button\"\r\n        row.className = \"prompt-row\"\r\n        ok.innerText = \"Yes\"\r\n        cancel.innerText = \"No\"\r\n        row.append(cancel, ok)\r\n        container.append(text, row)\r\n        document.body.appendChild(container)\r\n        cancel.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(false)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n        ok.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(true)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n    })\r\n}\r\n\r\nexport {\r\n    asyncConfirm,\r\n    asyncPrompt\r\n}","export default __webpack_public_path__ + \"static/media/rotate.e7c0f107.svg\";","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Keyboard from \"./Components/audio/Keyboard\"\r\nimport Menu from \"./Components/menu/Menu\"\r\nimport ZangoDb from \"zangodb\"\r\nimport { Song, Recording, LoggerEvent, PlayingSong, ComposerToRecording } from \"./Components/SongUtils\"\r\nimport { MainPageSettings } from \"./Components/Composer/SettingsObj\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSyncAlt, faStop } from '@fortawesome/free-solid-svg-icons'\r\nimport { asyncConfirm, asyncPrompt } from \"./Components/AsyncPrompts\"\r\nimport rotateImg from \"./assets/icons/rotate.svg\"\r\nimport { appName } from \"./appConfig\"\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.db = new ZangoDb.Db(appName, { songs: [] })\r\n    this.recording = new Recording()\r\n    let settings = this.getSettings()\r\n    this.dbCol = {\r\n      songs: this.db.collection(\"songs\")\r\n    }\r\n    this.state = {\r\n      keyboardData: {\r\n        instrument: settings.instrument.value,\r\n        playingSong: {\r\n          timestamp: 0,\r\n          notes: []\r\n        },\r\n        practicingSong: {\r\n          timestamp: 0,\r\n          notes: [],\r\n          threshold: 100\r\n        }\r\n      },\r\n      isRecording: false,\r\n      songs: [],\r\n      settings: settings,\r\n      sliderState: {\r\n        position: 0,\r\n        size: 0\r\n      },\r\n      thereIsSong: \"none\"\r\n    }\r\n    this.lastPlayedSong = new Recording()\r\n    this.syncSongs()\r\n  }\r\n\r\n\r\n  getSettings = () => {\r\n    let storedSettings = localStorage.getItem(appName + \"_Main_Settings\")\r\n    try {\r\n      storedSettings = JSON.parse(storedSettings)\r\n    } catch (e) {\r\n      storedSettings = null\r\n    }\r\n    if (storedSettings !== null) {\r\n      if (storedSettings.settingVesion !== MainPageSettings.settingVesion) {\r\n        this.updateSettings(MainPageSettings)\r\n        return MainPageSettings\r\n      }\r\n      return storedSettings\r\n    }\r\n    return MainPageSettings\r\n  }\r\n  updateSettings = (override) => {\r\n    let state\r\n    if (override !== undefined) {\r\n      state = override\r\n    } else {\r\n      state = this.state.settings\r\n    }\r\n    localStorage.setItem(appName + \"_Main_Settings\", JSON.stringify(state))\r\n  }\r\n  handleSettingChange = (setting) => {\r\n    let settings = this.state.settings\r\n    let data = setting.data\r\n    settings[setting.key].value = data.value\r\n    if (setting.key === \"instrument\") {\r\n      this.loadInstrument(data.value)\r\n    }\r\n    this.setState({\r\n      settings: settings,\r\n    }, this.updateSettings)\r\n  }\r\n  syncSongs = async () => {\r\n    let songs = await this.dbCol.songs.find().toArray()\r\n    this.setState({\r\n      songs: songs\r\n    })\r\n  }\r\n  loadInstrument = (instrument) => {\r\n    let state = this.state\r\n    state.keyboardData.instrument = instrument\r\n    this.setState({\r\n      keyboardData: state.keyboardData\r\n    })\r\n  }\r\n  practiceSong = async (song, start = 0) => {\r\n    await this.stopSong()\r\n    let oldState = this.state.keyboardData.practicingSong\r\n    if (song.data?.isComposedVersion) {\r\n      song = ComposerToRecording(song)\r\n      oldState.threshold = 10\r\n    }\r\n    oldState.notes = song.notes\r\n    oldState.timestamp = new Date().getTime()\r\n    let songToPractice = JSON.parse(JSON.stringify(this.state.keyboardData.practicingSong))\r\n    songToPractice.start = start\r\n    this.setState({\r\n      keyboardData: this.state.keyboardData,\r\n      thereIsSong: \"practicing\"\r\n    }, () => {\r\n      let event = new CustomEvent(\"practiceSong\", { detail: songToPractice })\r\n      window.dispatchEvent(event)\r\n    })\r\n  }\r\n  //to add the composed songs\r\n  songExists = async (name) => {\r\n    return await this.dbCol.songs.findOne({ name: name }) !== undefined\r\n  }\r\n  addSong = async (song) => {\r\n    if (await this.songExists(song.name)) {\r\n      return new LoggerEvent(\"Warning\", \"A song with this name already exists! \\n\" + song.name).trigger()\r\n    }\r\n    await this.dbCol.songs.insert(song)\r\n    this.syncSongs()\r\n    new LoggerEvent(\"Success\", `Song added to the ${song.data.isComposedVersion ? \"Composed\" : \"Recorded\"} tab!`, 4000).trigger()\r\n  }\r\n  componentDidCatch() {\r\n    new LoggerEvent(\"Warning\", \"There was an error with the song! Restoring default...\").trigger()\r\n    this.stopSong()\r\n  }\r\n  removeSong = async (name) => {\r\n    let result = await asyncConfirm(`Are you sure you want to delete the song: \"${name}\" ?`)\r\n    if (result) {\r\n      this.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n    }\r\n  }\r\n  handleRecording = (note) => {\r\n    if (this.state.isRecording) {\r\n      this.recording.addNote(note.index)\r\n    }\r\n  }\r\n  handleSliderEvent = (event) => {\r\n\r\n    this.changeSliderState({\r\n      position: Number(event.target.value),\r\n      size: this.state.sliderState.size\r\n    })\r\n  }\r\n  stopSong = () => {\r\n    return new Promise(resolve => {\r\n      let keyboardData = this.state.keyboardData\r\n      keyboardData.practicingSong = new PlayingSong([])\r\n      keyboardData.playingSong = new PlayingSong([])\r\n      this.setState({\r\n        thereIsSong: \"none\",\r\n        keyboardData: keyboardData\r\n      }, () => {\r\n        let event = new CustomEvent(\"playSong\", { detail: new PlayingSong([]) })\r\n        window.dispatchEvent(event)\r\n        event = new CustomEvent(\"practiceSong\", { detail: new PlayingSong([]) })\r\n        window.dispatchEvent(event)\r\n        setTimeout(resolve, 300)\r\n      })\r\n    })\r\n  }\r\n  changeSliderState = (newState) => {\r\n    this.setState({\r\n      sliderState: newState\r\n    })\r\n  }\r\n  playSong = async (song) => {\r\n    await this.stopSong()\r\n    let settings = this.state.settings\r\n    settings.pitch.value = song.pitch\r\n    if (song.data.isComposedVersion) {\r\n      song = ComposerToRecording(song)\r\n    }\r\n    let playingSong = {\r\n      timestamp: new Date().getTime(),\r\n      notes: song.notes\r\n    }\r\n    this.state.keyboardData.playingSong = playingSong\r\n    this.setState({\r\n      keyboardData: this.state.keyboardData,\r\n      thereIsSong: \"playing\",\r\n      settings:settings\r\n    })\r\n\r\n    let event = new CustomEvent(\"playSong\", { detail: playingSong })\r\n    window.dispatchEvent(event)\r\n    this.lastPlayedSong = song\r\n  }\r\n  askForSongName = () => {\r\n    return new Promise(async resolve => {\r\n        let promptString = \"Write song name, press cancel to ignore\"\r\n        while (true) {\r\n            let songName = await asyncPrompt(promptString)\r\n            if (songName === null) return resolve(null)\r\n            if (songName !== \"\") {\r\n                if (await this.songExists(songName)) {\r\n                    promptString = \"This song already exists: \" + songName\r\n                } else {\r\n                    return resolve(songName)\r\n                }\r\n            } else {\r\n                promptString = \"Write song name, press cancel to ignore\"\r\n            }\r\n        }\r\n    })\r\n\r\n}\r\n  toggleRecord = async (override) => {\r\n    if (typeof override !== \"boolean\") override = undefined\r\n    let newState = override !== undefined ? override : !this.state.isRecording\r\n    if (!newState && this.recording.notes.length > 0) {\r\n      let songName = await this.askForSongName()\r\n      let song = new Song(songName, this.recording.notes)\r\n      song.pitch = this.state.settings.pitch.value\r\n      if (songName !== null) this.addSong(song)\r\n    } else {\r\n      this.recording = new Recording()\r\n      let eventData = new PlayingSong([])\r\n      let event = new CustomEvent(\"playSong\", { detail: eventData })\r\n      window.dispatchEvent(event)\r\n    }\r\n    this.state.isRecording = newState\r\n    this.setState({\r\n      open: this.state.isRecording\r\n    })\r\n  }\r\n  render() {\r\n    let state = this.state\r\n    let keyboardFunctions = {\r\n      handleRecording: this.handleRecording,\r\n      changeSliderState: this.changeSliderState,\r\n      stopSong: this.stopSong\r\n    }\r\n    let menuFunctions = {\r\n      addSong: this.addSong,\r\n      removeSong: this.removeSong,\r\n      playSong: this.playSong,\r\n      practiceSong: this.practiceSong,\r\n      stopSong: this.stopSong,\r\n      changePage: this.props.changePage,\r\n      handleSettingChange: this.handleSettingChange,\r\n    }\r\n    let menuData = {\r\n      songs: state.songs,\r\n      settings: this.state.settings\r\n    }\r\n\r\n    return <div className=\"app\">\r\n      <div className=\"rotate-screen\">\r\n        <img src={rotateImg}>\r\n        </img>\r\n          For a better experience, add the website to the home screen, and rotate your device\r\n      </div>\r\n\r\n      <Menu functions={menuFunctions} data={menuData} />\r\n      <div className=\"right-panel\">\r\n        <div className=\"upper-right\">\r\n          {this.state.thereIsSong !== \"none\"\r\n            ? <div className=\"slider-wrapper\">\r\n              <button className=\"song-button\" onClick={this.stopSong}>\r\n                <FontAwesomeIcon icon={faStop} />\r\n              </button>\r\n              <input\r\n                type=\"range\"\r\n                className=\"slider\"\r\n                min={0}\r\n                onChange={this.handleSliderEvent}\r\n                max={state.sliderState.size}\r\n                value={state.sliderState.position}\r\n              ></input>\r\n              <button className=\"song-button\" onClick={async () => {\r\n                if (this.state.thereIsSong === \"practicing\") {\r\n                  this.practiceSong(state.keyboardData.practicingSong, state.sliderState.position)\r\n                } else {\r\n                  await this.stopSong()\r\n                  this.playSong(this.lastPlayedSong)\r\n                }\r\n              }}>\r\n                <FontAwesomeIcon icon={faSyncAlt} />\r\n              </button>\r\n            </div>\r\n            :\r\n            <GenshinButton\r\n              active={state.isRecording}\r\n              click={this.toggleRecord}\r\n            >\r\n              {state.isRecording ? \"Stop\" : \"Record\"}\r\n            </GenshinButton>\r\n\r\n          }\r\n\r\n\r\n\r\n        </div>\r\n        <div className=\"keyboard-wrapper\">\r\n\r\n          <Keyboard\r\n            key={state.keyboardData.instrument}\r\n            data={state.keyboardData}\r\n            settings={this.state.settings}\r\n            functions={keyboardFunctions}\r\n            isRecording={state.isRecording}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction GenshinButton(props) {\r\n  let className = \"genshin-button record-btn \" + (props.active ? \"selected\" : \"\")\r\n  return <button className={className} onClick={props.click}>\r\n    {props.children}\r\n  </button>\r\n}\r\nexport default App;\r\n","import React, { Component, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSave, faMusic, faTimes, faCog, faTrash, faCompactDisc } from '@fortawesome/free-solid-svg-icons'\r\nimport \"../../menu/menu.css\"\r\n\r\nimport { FileDownloader, LoggerEvent } from \"../../SongUtils\"\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            selectedMenu: \"Settings\",\r\n            selectedSongType: \"composed\",\r\n        }\r\n    }\r\n    toggleMenu = (override) => {\r\n        if (typeof override !== \"boolean\") override = undefined\r\n        let newState = override !== undefined ? override : !this.state.open\r\n        this.setState({\r\n            open: newState,\r\n        })\r\n        if (newState === false) {\r\n            this.props.functions.toggleMenuVisible()\r\n        }\r\n    }\r\n    changeSelectedSongType = (name) => {\r\n        this.setState({\r\n            selectedSongType: name\r\n        })\r\n    }\r\n    selectSideMenu = (selection) => {\r\n        if (selection === this.state.selectedMenu && this.state.open) {\r\n            return this.setState({\r\n                open: false,\r\n            })\r\n        }\r\n        this.setState({\r\n            selectedMenu: selection,\r\n            open: true\r\n        })\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json, song.name + \".json\")\r\n    }\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let sideClass = this.state.open ? \"side-menu menu-open\" : \"side-menu\"\r\n        let selectedMenu = this.state.selectedMenu\r\n        const { loadSong, removeSong, updateSong, changePage, handleSettingChange, changeVolume } = functions\r\n        let songFunctions = {\r\n            loadSong: loadSong,\r\n            removeSong: removeSong,\r\n            toggleMenu: this.toggleMenu\r\n        }\r\n        let songs = data.songs.filter(song => !song.data?.isComposedVersion)\r\n        let composedSongs = data.songs.filter(song => song.data?.isComposedVersion)\r\n        let hasUnsaved = data.hasChanges ? \"margin-top-auto not-saved\" : \"margin-top-auto\"\r\n        let menuClass = data.menuOpen ? \"menu menu-visible\" : \"menu\"\r\n        return <div className=\"menu-wrapper\">\r\n            <div className={menuClass}>\r\n                <CloseMenu action={this.toggleMenu} />\r\n                <MenuItem type=\"Save\" action={() => updateSong(data.currentSong)} className={hasUnsaved}>\r\n                    <FontAwesomeIcon icon={faSave} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Songs\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faMusic} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Settings\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faCog} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Composer\" action={() => changePage(\"\")} className=\"inverted\">\r\n                    <FontAwesomeIcon icon={faCompactDisc} className=\"icon\" />\r\n                </MenuItem>\r\n            </div>\r\n            <div className={sideClass}>\r\n                <MenuPanel title=\"No selection\" visible={selectedMenu}>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Songs\" visible={selectedMenu}>\r\n                    <div className=\"songs-buttons-wrapper\">\r\n                        <button className=\"genshin-button\" onClick={this.props.functions.createNewSong}>\r\n                            Create new song\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"tab-selector-wrapper\">\r\n                        <button\r\n                            className={this.state.selectedSongType === \"recorded\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"recorded\")}\r\n                        >\r\n                            Recorded\r\n                        </button>\r\n                        <button\r\n                            className={this.state.selectedSongType === \"composed\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"composed\")}\r\n                        >\r\n                            Composed\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"songs-wrapper no-margin\">\r\n                        {this.state.selectedSongType === \"recorded\"\r\n                            ? songs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={songFunctions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n\r\n                            : composedSongs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={songFunctions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Settings\" visible={selectedMenu}>\r\n                    {Object.entries(data.settings).map(([key, data]) => {\r\n                        return <SettingsRow\r\n                            key={key + data.value}\r\n                            objKey={key}\r\n                            data={data}\r\n                            changeVolume={changeVolume}\r\n                            update={handleSettingChange}\r\n                        >\r\n\r\n                        </SettingsRow>\r\n                    })}\r\n                    <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\">\r\n                        Support me\r\n                    </a>\r\n                </MenuPanel>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction MenuPanel(props) {\r\n    let className = props.visible === props.title ? \"menu-panel menu-panel-visible\" : \"menu-panel\"\r\n    return <div className={className}>\r\n        <div className=\"menu-title\">\r\n            {props.title}\r\n        </div>\r\n        <div className=\"panel-content-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\nfunction CloseMenu(props) {\r\n    return <div onClick={() => props.action(false)} className=\"close-menu menu-item\">\r\n        <FontAwesomeIcon icon={faTimes} className=\"icon\" />\r\n    </div>\r\n}\r\n\r\nfunction SongRow(props) {\r\n    const { data, functions } = props\r\n    const { removeSong, toggleMenu, loadSong } = functions\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\" onClick={() => {\r\n            loadSong(data)\r\n            toggleMenu(false)\r\n        }}>\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => removeSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nfunction SettingsRow(props) {\r\n    const { data, update, objKey, changeVolume } = props\r\n    const [valueHook, setter] = useState(data.value)\r\n    const [volumeHook, setterVolume] = useState(data.volume)\r\n    function handleChange(e) {\r\n        let el = e.target\r\n        let value = data.type === \"checkbox\" ? el.checked : el.value\r\n        if (data.type === \"number\") {\r\n            value = Number(value)\r\n            e.target.value = \"\" //have to do this to remove a react bug that adds a 0 at the start\r\n            if (value < data.threshold[0] || value > data.threshold[1]) {\r\n                return\r\n            }\r\n        }\r\n        setter(value)\r\n    }\r\n    function sendChange() {\r\n        if (data.value === valueHook) return\r\n        data.value = valueHook\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function sendChangeSelect(e) {\r\n        let value = e.target.value\r\n        data.value = value\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function handleVolume(e) {\r\n        setterVolume(Number(e.target.value))\r\n    }\r\n    function sendVolumeChange() {\r\n        changeVolume({\r\n            key: objKey,\r\n            value: volumeHook\r\n        })\r\n    }\r\n    if (objKey === \"settingVesion\") return null\r\n    return <div className=\"settings-row\">\r\n        <div>\r\n            {data.name}\r\n        </div>\r\n        {data.type === \"select\"\r\n            ? <select value={data.value}\r\n                onChange={sendChangeSelect}\r\n            >\r\n                {data.options.map(e => {\r\n                    return <option value={e} key={e}>{e}</option>\r\n                })}\r\n            </select>\r\n            : null\r\n        }\r\n        {[\"number\", \"text\", \"checkbox\"].includes(data.type) ?\r\n            <input\r\n                type={data.type}\r\n                value={valueHook}\r\n                checked={valueHook}\r\n                onChange={handleChange}\r\n                onBlur={sendChange}\r\n            />\r\n            : null\r\n        }\r\n        {data.type === \"instrument\"\r\n            ? <div className=\"instrument-picker\">\r\n                <select value={data.value}\r\n                    onChange={sendChangeSelect}\r\n                >\r\n                    {data.options.map(e => {\r\n                        return <option value={e} key={e}>{e}</option>\r\n                    })}\r\n                </select>\r\n\r\n                <input\r\n                    type=\"range\"\r\n                    min={1}\r\n                    max={100}\r\n                    value={volumeHook}\r\n                    onChange={handleVolume}\r\n                    onPointerUp={sendVolumeChange}\r\n                />\r\n            </div>\r\n            : null\r\n        }\r\n    </div>\r\n}\r\nclass MenuItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        let className = this.props.className ? `menu-item ${this.props.className}` : \"menu-item\"\r\n        return <div\r\n            className={className}\r\n            onClick={() => this.props.action(this.props.type)}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n}\r\nexport default Menu","import React, { Component } from 'react'\r\nimport { cssClasses,appName } from \"../../appConfig\" \r\nclass ComposerNote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    shouldComponentUpdate(next, prev) {\r\n        return this.props.layers !== next.layers || this.props.skyText !== next.skyText\r\n    }\r\n    render() {\r\n        const {props} = this\r\n        const { data, layers } = props\r\n        let className = cssClasses.noteComposer\r\n        if (layers[0] === \"1\") className += \" layer-1\"\r\n        if (layers[1] === \"1\") className += \" layer-2\"\r\n        if (layers[2] === \"1\") className += \" layer-3\"\r\n        let noteText = data.noteNames.mobile\r\n        let svgUrl = `./assets/icons/keys/${data.noteNames.mobile}.svg`\r\n        if(appName === \"Sky\") svgUrl = `./assets/icons/keys/${props.skyImg}.svg`\r\n        if(appName === \"Sky\") noteText = props.skyText\r\n        let layer3Class = \"Sky\" ? \"layer-3-ball-bigger\" : \"layer-3-ball\"\r\n        return <button onPointerDown={() => this.props.clickAction(data)} className=\"button-hitbox\">\r\n            <div className={className} >\r\n                <img\r\n                    draggable=\"false\"\r\n                    alt={data.noteNames.mobile}\r\n                    src={svgUrl}>\r\n\r\n                </img>\r\n                <div className={layer3Class}>\r\n                </div>\r\n                <div className={appName === \"Sky\" ? \"note-name-sky\" : \"note-name\"}>\r\n                    {noteText}\r\n                </div>\r\n            </div>\r\n        </button>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerNote","import React, { Component } from 'react'\r\n\r\nclass MultiSwitch extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let props = this.props\r\n        return <>\r\n            {props.options.map(e => {\r\n                return <button\r\n                    style={{ backgroundColor: e === props.selected ? props.selectedColor : \"\" }}\r\n                    className={props.buttonsClass}\r\n                    onClick={() => props.onSelect(e)}\r\n                    key={e}\r\n                >\r\n                    {e}\r\n                </button>\r\n            })}\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MultiSwitch\r\n\r\n","import React, { Component } from 'react'\r\nimport ComposerNote from \"./ComposerNote\"\r\nimport MultiSwitch from \"./MultiSwitch\"\r\nimport { keyNames, pitchArr , skyImages, appName} from \"../../appConfig\"\r\nclass ComposerKeyboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let notesIndexes = data.currentColumn.notes.map((e) => e.index)\r\n        let hiddenSideMenu = data.isPlaying ? \" hidden\" : \"\"\r\n        let keyboardClass = \"keyboard\"\r\n        if (data.keyboard.layout.length === 15) keyboardClass += \" keyboard-5\"\r\n        if (data.keyboard.layout.length === 8) keyboardClass += \" keyboard-4\"\r\n        return <div>\r\n            <div className={keyboardClass}>\r\n            {data.keyboard.layout.length === 0 ? <div className=\"loading\">Loading...</div> : null}\r\n                {data.keyboard.layout.map((note, i) => {\r\n                    let index = notesIndexes.indexOf(i)\r\n                    let skyText = \"\"\r\n                    let skyImg = \"\"\r\n                    try{\r\n                        skyText = keyNames[pitchArr.indexOf(data.pitch)][note.index]\r\n                        skyImg = skyImages[data.keyboard.layout.length][note.index]     \r\n                    }catch(e){}\r\n\r\n                    return <ComposerNote\r\n                        key={note.index}\r\n                        layers={index >= 0 ? data.currentColumn.notes[index].layer : \"000\"}\r\n                        data={note}\r\n                        skyText={skyText}\r\n                        skyImg={skyImg}\r\n                        clickAction={functions.handleClick}\r\n                    />\r\n                })}\r\n            </div>\r\n            <div className={\"bottom-right-wrapper\" + hiddenSideMenu}>\r\n                <div className={\"layer-buttons-wrapper\"}>\r\n                    <div className=\"bottom-right-text\">\r\n                        Layer\r\n                    </div>\r\n                    <MultiSwitch\r\n                        buttonsClass={\"layer-button\"}\r\n                        selectedColor={\"#63aea7\"}\r\n                        options={[1, 2, 3]}\r\n                        onSelect={functions.changeLayer}\r\n                        selected={data.layer}\r\n                    />\r\n                </div>\r\n                <div className=\"tempo-changers-wrapper\">\r\n                    <div className=\"bottom-right-text\">\r\n                        Tempo\r\n                    </div>\r\n                    {data.TempoChangers.map((e) => {\r\n                        return <button\r\n                            key={e.id}\r\n                            onClick={() => functions.handleTempoChanger(e)}\r\n                            style={{ backgroundColor: \"#\" + e.color.toString(16) }}\r\n                        >\r\n                            {e.text}\r\n                        </button>\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerKeyboard","import { TempoChangers } from \"../SongUtils\"\r\nimport * as PIXI from \"pixi.js\"\r\nimport {notesPerColumn } from \"../../appConfig\"\r\nlet noteData = {\r\n    background: \"#d3bd8e\",\r\n    border: \"#de4545\",\r\n    center: \"#de4545\"\r\n}\r\n\r\nlet horizontalLineBreak = notesPerColumn / 3\r\nlet standards = [\r\n    {\r\n        color: 0x515c6f //lighter\r\n    },\r\n    {\r\n        color: 0x485363 //darker\r\n    },\r\n    {\r\n        color: 0x1a968b //selected\r\n    },\r\n    {\r\n        color: 0xd6722f\r\n    }\r\n]\r\nlet notes = [\"000\", \"001\", \"010\", \"011\", \"100\", \"101\", \"110\", \"111\"]\r\nlet breakpoints = [\r\n    {\r\n        type: \"short\",\r\n        color: \"#282875\"\r\n    },\r\n    {\r\n        type: \"long\",\r\n        color: \"#282875\"\r\n    }\r\n]\r\nclass ComposerCache {\r\n    constructor(width, height, margin = 4, timelineHeight = 30) {\r\n        this.width = width\r\n        this.height = height\r\n        this.cache = {\r\n            columns: [],\r\n            notes: {},\r\n            standard: [],\r\n            columnsLarger: [],\r\n            standardLarger: [],\r\n            breakpoints: []\r\n        }\r\n        this.notesFigures = []\r\n        this.timelineHeight = timelineHeight\r\n        this.margin = margin\r\n        this.noteWidth = this.width\r\n        this.noteHeight = this.height / notesPerColumn\r\n        this.app = new PIXI.Application({\r\n            width: width,\r\n            height: height,\r\n        })\r\n        this.generate()\r\n    }\r\n    generate = () => {\r\n\r\n        TempoChangers.forEach(tempoChanger => {\r\n            let canvas = drawColumn(tempoChanger, this, 1)\r\n            this.cache.columns.push(canvas.toDataURL())\r\n        })\r\n        standards.forEach(standardColumn => {\r\n            let canvas = drawColumn(standardColumn, this, 1)\r\n            this.cache.standard.push(canvas.toDataURL())\r\n        })\r\n        standards.forEach(standardColumn => {\r\n            let canvas = drawColumn(standardColumn, this, 3)\r\n            this.cache.standardLarger.push(canvas.toDataURL())\r\n        })\r\n        notes.forEach(note => {\r\n            let roundNess = this.noteWidth > 20 ? 4 : 2\r\n            let canvas = document.createElement(\"canvas\")\r\n            canvas.height = this.noteHeight\r\n            canvas.width = this.noteWidth\r\n            let ctx = canvas.getContext(\"2d\")\r\n            if (note[0] === \"1\") {\r\n                ctx.fillStyle = noteData.background\r\n                roundRect(\r\n                    ctx,\r\n                    this.margin / 2,\r\n                    this.margin / 2,\r\n                    this.noteWidth - this.margin - 1,\r\n                    this.noteHeight - this.margin - 1,\r\n                    roundNess,\r\n                    true,\r\n                    false\r\n                )\r\n            }\r\n            if (note[1] === \"1\") {\r\n                ctx.strokeStyle = noteData.border\r\n                ctx.lineWidth = 2\r\n                roundRect(\r\n                    ctx,\r\n                    this.margin / 2,\r\n                    this.margin / 2,\r\n                    this.noteWidth - this.margin - 1,\r\n                    this.noteHeight - this.margin - 1,\r\n                    roundNess,\r\n                    false,\r\n                    true\r\n                )\r\n            }\r\n            if (note[2] === \"1\") {\r\n                ctx.beginPath()\r\n                ctx.fillStyle = noteData.center\r\n                let ballHeight = this.noteHeight / 4\r\n                ctx.arc(this.noteWidth / 2 - 0.5, this.noteHeight / 2 - 0.5, ballHeight, 0, 2 * Math.PI);\r\n                ctx.fill()\r\n            }\r\n            this.cache.notes[note] = canvas.toDataURL()\r\n        })\r\n        TempoChangers.forEach(tempoChanger => {\r\n            let canvas = drawColumn(tempoChanger, this, 2)\r\n            this.cache.columnsLarger.push(canvas.toDataURL())\r\n        })\r\n        breakpoints.forEach(breakpoint => {\r\n            let canvas = document.createElement(\"canvas\")\r\n            if (breakpoint.type === \"short\") {\r\n                let size = this.timelineHeight / 6\r\n                canvas.height = this.timelineHeight\r\n                canvas.width = size * 2\r\n                let ctx = canvas.getContext(\"2d\")\r\n                ctx.fillStyle = breakpoint.color\r\n                ctx.arc(size, this.timelineHeight / 2, size, 0, 2 * Math.PI);\r\n                ctx.fill()\r\n                this.cache.breakpoints.push(canvas.toDataURL())\r\n            } else {\r\n                canvas.height = this.height\r\n                canvas.width = this.width\r\n                let ctx = canvas.getContext(\"2d\")\r\n                ctx.fillStyle = breakpoint.color\r\n                /*\r\n               ctx.strokeStyle = breakpoint.color\r\n               ctx.lineWidth = 3\r\n                ctx.strokeRect(1,1,this.width - 3,this.height - 2)\r\n                */\r\n                ctx.beginPath();\r\n                ctx.moveTo(0, this.height)\r\n                ctx.lineTo(this.noteWidth / 2, this.height)\r\n                ctx.lineTo(0, this.height - this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.width, this.height)\r\n                ctx.lineTo(this.noteWidth / 2, this.height)\r\n                ctx.lineTo(this.width, this.height - this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(0, 0)\r\n                ctx.lineTo(this.noteWidth / 2, 0)\r\n                ctx.lineTo(0, this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.width, 0)\r\n                ctx.lineTo(this.noteWidth / 2, 0)\r\n                ctx.lineTo(this.width, this.noteHeight)\r\n                ctx.fill();\r\n\r\n                this.cache.breakpoints.push(canvas.toDataURL())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction drawColumn(tempoChanger, self, borderWidth) {\r\n    let canvas = document.createElement(\"canvas\")\r\n    canvas.height = self.height\r\n    canvas.width = self.width\r\n    let ctx = canvas.getContext(\"2d\")\r\n    ctx.fillStyle = \"#\" + tempoChanger.color.toString(16)\r\n    ctx.fillRect(0, 0, self.width, self.height)\r\n    ctx.strokeStyle = borderWidth === 2 ? \"black\" : \"#333333\"\r\n    ctx.lineWidth = borderWidth\r\n    ctx.beginPath()\r\n    ctx.moveTo(self.width, 0)\r\n    ctx.lineTo(self.width, self.height)\r\n    ctx.stroke()\r\n    ctx.strokeStyle = \"#333333\"\r\n    for (let i = 1; i < 3; i++) {\r\n        ctx.lineWidth = 1\r\n        let y = self.noteHeight * horizontalLineBreak * i\r\n        ctx.moveTo(0, y)\r\n        ctx.lineTo(self.width, y)\r\n    }\r\n    ctx.stroke()\r\n    return canvas\r\n}\r\n\r\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\r\n    if (typeof stroke === 'undefined') {\r\n        stroke = true;\r\n    }\r\n    if (typeof radius === 'undefined') {\r\n        radius = 5;\r\n    }\r\n    if (typeof radius === 'number') {\r\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\r\n    } else {\r\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\r\n        for (var side in defaultRadius) {\r\n            radius[side] = radius[side] || defaultRadius[side];\r\n        }\r\n    }\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + radius.tl, y);\r\n    ctx.lineTo(x + width - radius.tr, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n    ctx.lineTo(x + width, y + height - radius.br);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\r\n    ctx.lineTo(x + radius.bl, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n    ctx.lineTo(x, y + radius.tl);\r\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n    ctx.closePath();\r\n    if (fill) {\r\n        ctx.fill();\r\n    }\r\n    if (stroke) {\r\n        ctx.stroke();\r\n    }\r\n\r\n}\r\nexport {\r\n    ComposerCache\r\n}","import React, { Component } from 'react'\r\nimport { Stage, Container, Graphics, Sprite } from '@inlet/react-pixi';\r\nimport { ComposerCache } from \"./ComposerCache\"\r\nimport { faStepBackward, faStepForward, faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"./Composer.css\"\r\nimport isMobile from \"is-mobile\"\r\nimport { composerNotePositions, notesPerColumn, appName } from \"../../appConfig\"\r\nlet NumOfColumnsPerCanvas = 35\r\n\r\nclass ComposerCanvas extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let sizes = document.body.getBoundingClientRect()\r\n        this.sizes = sizes\r\n        NumOfColumnsPerCanvas = Number(this.props.data.settings.columnsPerCanvas.value)\r\n        let width = nearestEven(sizes.width * 0.82)\r\n        let height = nearestEven(sizes.height * 0.45)\r\n\r\n        if (window.screen.width < sizes.height) {\r\n            width = nearestEven(sizes.height * 0.82)\r\n            height = nearestEven(sizes.width * 0.45)\r\n        }\r\n        if(appName === \"Sky\") height = nearestEven(height * 0.95)\r\n        this.state = {\r\n            width: width,\r\n            height: height,\r\n            column: {\r\n                width: calcMinColumnWidth(nearestEven(width)),\r\n                height: height\r\n            },\r\n            timelineHeight: isMobile() ? 25 : 30,\r\n            currentBreakpoint: -1\r\n        }\r\n        this.canvasRef = React.createRef()\r\n        let margin = isMobile() ? 1 : 4\r\n        this.cache = new ComposerCache(this.state.column.width, height, margin, this.state.timelineHeight).cache\r\n        this.stageSelected = false\r\n        this.sliderSelected = false\r\n        this.stagePreviousPositon = 0\r\n        this.throttleStage = 0\r\n    }\r\n    resetPointerDown = (e) => {\r\n        this.stageSelected = false\r\n        this.sliderSelected = false\r\n        this.stagePreviousPositon = 0\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"pointerup\", this.resetPointerDown)\r\n        this.canvasRef.current._canvas.addEventListener(\"wheel\", this.handleWheel)\r\n        window.addEventListener(\"keydown\", this.handleKeyboard)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"pointerup\", this.resetPointerDown)\r\n        window.removeEventListener(\"keydown\", this.handleKeyboard)\r\n        this.canvasRef.current._canvas.removeEventListener(\"wheel\", this.handleWheel)\r\n    }\r\n    handleKeyboard = (event) => {\r\n        let key = event.keyCode\r\n        switch (key) {\r\n            case 39: this.handleBreakpoints(1)\r\n                break;\r\n            case 37: this.handleBreakpoints(-1)\r\n                break;\r\n        }\r\n    }\r\n    handleWheel = (e) => {\r\n        if (e.deltaY < 0) {\r\n            this.props.functions.selectColumn(this.props.data.selected - 1, true)\r\n        } else {\r\n            this.props.functions.selectColumn(this.props.data.selected + 1, true)\r\n        }\r\n    }\r\n    handleClick = (e, type) => {\r\n        let x = e.data.global.x\r\n        if (type === \"click\") {\r\n            let totalWidth = this.state.column.width * this.props.data.columns.length\r\n\r\n            let relativePos = Math.floor(x / this.state.width * totalWidth / this.state.column.width)\r\n            this.props.functions.selectColumn(relativePos)\r\n        }\r\n        if (type === \"up\") {\r\n            this.sliderSelected = false\r\n        }\r\n        if (type === \"down\") {\r\n            this.sliderSelected = true\r\n        }\r\n        if (type === \"downStage\") {\r\n            this.stagePreviousPositon = x\r\n            this.stageSelected = true\r\n        }\r\n    }\r\n    handleStageSlide = (e) => {\r\n        let x = e.data.global.x\r\n        if (this.stageSelected === true) {\r\n            this.throttleStage++\r\n            if (this.throttleStage < 5) return\r\n            this.throttleStage = 0\r\n            let isMovingLeft = this.stagePreviousPositon < x\r\n            let amount = Math.ceil(Math.abs(this.stagePreviousPositon - x) / 8)\r\n            if (amount > 4) amount = 4\r\n            let toAdd = isMovingLeft ? -1 : 1\r\n            this.stagePreviousPositon = x\r\n            let finalPos = this.props.data.selected + toAdd * amount\r\n            if (this.props.data.selected === finalPos) return\r\n            if (finalPos < 0) finalPos = 0\r\n            if (finalPos > this.props.data.columns.length) finalPos = this.props.data.columns.length - 1\r\n            this.props.functions.selectColumn(finalPos, true)\r\n        }\r\n    }\r\n    handleBreakpoints = (direction) => {\r\n        let selectedColumn = this.props.data.selected\r\n        let columns = this.props.data.columns\r\n        let breakpoint\r\n        let breakpoints = this.props.data.breakpoints\r\n        if (direction === 1) {//right\r\n            breakpoint = breakpoints.filter((v) => v > selectedColumn).sort((a, b) => a - b)\r\n        } else {\r\n            breakpoint = breakpoints.filter((v) => v < selectedColumn).sort((a, b) => b - a)\r\n        }\r\n        if (breakpoint.length >= 0) {\r\n            if (columns.length >= breakpoint[0] && breakpoint[0] >= 0) {\r\n                this.props.functions.selectColumn(breakpoint[0])\r\n            }\r\n        }\r\n\r\n    }\r\n    handleSlide = (e) => {\r\n        if (this.sliderSelected) {\r\n            this.throttleStage++\r\n            if (this.throttleStage < 4) return\r\n            this.throttleStage = 0\r\n            let totalWidth = this.state.column.width * this.props.data.columns.length\r\n            let x = e.data.global.x\r\n            let relativePos = Math.floor(x / this.state.width * totalWidth / this.state.column.width)\r\n            this.props.functions.selectColumn(relativePos, true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let s = this.state\r\n        let pixiOptions = {\r\n            backgroundColor: 0x495466,\r\n        }\r\n        const { data, functions } = this.props\r\n        let sizes = this.state.column\r\n        let xPos = (data.selected - NumOfColumnsPerCanvas / 2 + 1) * - sizes.width\r\n        let timelineHeight = this.state.timelineHeight\r\n        let counter = 0\r\n        let switcher = false\r\n        let cache = this.cache\r\n        let beatMarks = Number(data.settings.beatMarks.value)\r\n        let counterLimit = beatMarks === 0 ? 11 : 4 * beatMarks - 1\r\n        let relativeColumnWidth = this.state.width / data.columns.length\r\n        let stageSize = Math.floor(relativeColumnWidth * (NumOfColumnsPerCanvas + 1))\r\n        if (stageSize > this.state.width) stageSize = this.state.width\r\n        let stagePos = relativeColumnWidth * data.selected - (NumOfColumnsPerCanvas / 2 - 1) * relativeColumnWidth\r\n        return <div className=\"canvas-wrapper\" style={{ width: s.width + 6 }}>\r\n            <Stage\r\n                width={s.width}\r\n                height={s.height}\r\n                options={pixiOptions}\r\n                key={this.state.width}\r\n                ref={this.canvasRef}\r\n            >\r\n                <Container\r\n                    anchor={[0.5, 0.5]}\r\n                    x={xPos}\r\n                    interactive={true}\r\n                    pointerdown={(e) => this.handleClick(e, \"downStage\")}\r\n                    pointermove={(e) => this.handleStageSlide(e)}\r\n                >\r\n                    {data.columns.map((column, i) => {\r\n                        if (counter > counterLimit) {\r\n                            switcher = !switcher\r\n                            counter = 0\r\n                        }\r\n                        counter++\r\n                        if (!isVisible(i, data.selected)) return null\r\n                        let tempoChangersCache = (i + 1) % 4 === 0 ? cache.columnsLarger : cache.columns\r\n                        let standardCache = (i + 1) % 4 === 0 ? cache.standardLarger : cache.standard\r\n                        let standardBg = standardCache[Number(switcher)] // boolean is 1 or 0\r\n                        let background = column.tempoChanger === 0 ? standardBg : tempoChangersCache[column.tempoChanger]\r\n                        return <Column\r\n                            cache={cache}\r\n                            key={i}\r\n                            data={column}\r\n                            index={i}\r\n                            sizes={sizes}\r\n                            backgroundCache={background}\r\n                            isToolsSelected={data.toolsColumns.includes(i)}\r\n                            click={functions.selectColumn}\r\n                            isSelected={i === data.selected}\r\n                            isBreakpoint={data.breakpoints.includes(i)}\r\n                        />\r\n\r\n                    })}\r\n\r\n                </Container>\r\n            </Stage>\r\n            <div className=\"timeline-wrapper\" style={{ height: this.state.timelineHeight }}>\r\n                <div className=\"timeline-button\" onClick={() => this.handleBreakpoints(-1)}>\r\n                    <FontAwesomeIcon icon={faStepBackward} />\r\n                </div>\r\n                <div className=\"timeline-button\" onClick={() => this.handleBreakpoints(1)}>\r\n                    <FontAwesomeIcon icon={faStepForward} />\r\n                </div>\r\n\r\n\r\n                <Stage\r\n                    width={s.width}\r\n                    height={timelineHeight}\r\n                    options={{ antialias: true, autoDensity: true }}\r\n                >\r\n                    <Container\r\n                        width={this.state.width}\r\n                        height={this.state.timelineHeight}\r\n                        interactive={true}\r\n                        pointertap={(e) => this.handleClick(e, \"click\")}\r\n                        pointerdown={(e) => this.handleClick(e, \"down\")}\r\n                        pointerup={(e) => this.handleClick(e, \"up\")}\r\n                        pointermove={this.handleSlide}\r\n                    >\r\n                        <Graphics draw={(e) => { fillX(e, this.state.width, this.state.timelineHeight) }} />\r\n                        {data.breakpoints.map(breakpoint => {\r\n                            return <Sprite\r\n                                image={cache.breakpoints[0]}\r\n                                key={breakpoint}\r\n                                x={relativeColumnWidth * breakpoint}\r\n\r\n                            >\r\n\r\n                            </Sprite>\r\n                        })}\r\n                    </Container>\r\n\r\n                    <Graphics draw={(e) => drawStage(e, stageSize, this.state.timelineHeight)} x={stagePos} y={2} />\r\n\r\n\r\n                </Stage>\r\n                <div className=\"timeline-button\" onClick={functions.toggleBreakpoint}>\r\n                    <FontAwesomeIcon icon={data.breakpoints.includes(data.selected) ? faMinusCircle : faPlusCircle} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction fillX(g, width, height) {\r\n    g.clear()\r\n    g.beginFill(0x515c6f, 1)\r\n    g.drawRect(0, 0, width, height)\r\n}\r\nfunction drawStage(g, width, height) {\r\n    g.clear()\r\n    g.lineStyle(3, 0x1a968b, 0.8)\r\n    g.drawRoundedRect(0, 0, width - 2, height - 4, 6)\r\n}\r\n\r\nfunction Column(props) {\r\n    let { data, index, sizes, click, cache, backgroundCache, isBreakpoint, isSelected, isToolsSelected } = props\r\n    return <Container\r\n        pointertap={() => click(index)}\r\n        interactive={true}\r\n        x={sizes.width * index}\r\n\r\n    >\r\n        <Sprite\r\n            image={backgroundCache}\r\n            interactiveChildren={false}\r\n        >\r\n            {isSelected || isToolsSelected ? <Sprite\r\n                image={isToolsSelected && !isSelected? cache.standard[3] : cache.standard[2]}\r\n                alpha={isToolsSelected ?0.4 : 0.6}\r\n                zIndex={1}\r\n            >\r\n            </Sprite> : null}\r\n            {isBreakpoint ? <Sprite\r\n                image={cache.breakpoints[1]}\r\n            >\r\n            </Sprite> : null}\r\n        </Sprite>\r\n        {data.notes.map((note) => {\r\n            return <Sprite\r\n                key={note.index}\r\n                image={cache.notes[note.layer]}\r\n                y={positions[note.index] * sizes.height / notesPerColumn}\r\n            >\r\n\r\n            </Sprite>\r\n        })}\r\n\r\n    </Container>\r\n}\r\nfunction calcMinColumnWidth(parentWidth) {\r\n    return nearestEven(parentWidth / NumOfColumnsPerCanvas)\r\n}\r\nfunction nearestEven(num) {\r\n    return 2 * Math.round(num / 2);\r\n}\r\nfunction isVisible(pos, currentPos) {\r\n    let threshold = NumOfColumnsPerCanvas / 2 + 2\r\n    let boundaries = [currentPos - threshold, currentPos + threshold]\r\n    return boundaries[0] < pos && pos < boundaries[1]\r\n}\r\nconst positions = composerNotePositions\r\nexport default ComposerCanvas","export default __webpack_public_path__ + \"static/media/addCell.73b6c8e9.svg\";","export default __webpack_public_path__ + \"static/media/removeCell.e266ba1a.svg\";","import React, { Component } from 'react'\r\n\r\nclass ComposerTools extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n    render(){\r\n        const {data, functions} = this.props\r\n        let className = data.visible ? \"floating-tools tools-visible\" : \"floating-tools\"\r\n        return <div className={className}>\r\n            <div className=\"tools-row\">\r\n                <div>\r\n                    Scroll to the left / right to select the columns\r\n                </div>\r\n                <button onClick={functions.toggleTools}>\r\n                    Close\r\n                </button>\r\n            </div>\r\n            <div className=\"tools-buttons-wrapper\">\r\n                <div className='tools-half'>\r\n                    <button \r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={() => functions.copyColumns('all')}\r\n                        className={data.copiedColumns.length !== 0 ? \"tools-button-highlighted\" : \"\"}    \r\n                    >\r\n                        Copy\r\n                    </button>\r\n                    <button \r\n                    disabled={data.copiedColumns.length !== 0}\r\n                        onClick={() => functions.copyColumns(data.layer)}\r\n                        className={data.copiedColumns.length !== 0 ? \"tools-button-highlighted\" : \"\"}    \r\n                    >\r\n                        Copy layer {data.layer}\r\n                    </button>\r\n                </div>\r\n                <div className='tools-half'>\r\n                <button \r\n                    disabled={data.copiedColumns.length === 0}\r\n                    onClick={() => functions.pasteColumns(false)}\r\n                >\r\n                    Paste\r\n                </button>\r\n                <button \r\n                    disabled={data.copiedColumns.length === 0}\r\n                    onClick={() => functions.pasteColumns(true)}\r\n                >\r\n                    Insert\r\n                </button>\r\n                </div>\r\n\r\n                <button \r\n                    disabled={data.copiedColumns.length !== 0}\r\n                    onClick={functions.eraseColumns}\r\n                >\r\n                    Erase\r\n                </button>\r\n                <button \r\n                    disabled={data.copiedColumns.length !== 0}\r\n                    onClick={functions.deleteColumns}\r\n                >\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerTools","import React, { Component } from 'react'\r\nimport ZangoDb from \"zangodb\"\r\nimport Menu from \"./Components/Composer/menu/Menu\"\r\nimport {\r\n    ComposedSong, LoggerEvent, ColumnNote, Column, TempoChangers,\r\n    ComposerSongSerialization, ComposerSongDeSerialization, getPitchChanger, RecordingToComposed\r\n} from \"./Components/SongUtils\"\r\nimport { faPlay, faPlus, faPause, faBars, faChevronLeft, faChevronRight, faTools } from \"@fortawesome/free-solid-svg-icons\"\r\nimport * as workerTimers from 'worker-timers';\r\nimport rotateImg from \"./assets/icons/rotate.svg\"\r\nimport ComposerKeyboard from \"./Components/Composer/ComposerKeyboard\"\r\nimport ComposerCanvas from \"./Components/Composer/ComposerCanvas\"\r\nimport Instrument from \"./Components/audio/Instrument\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { ComposerSettings } from \"./Components/Composer/SettingsObj\"\r\nimport addCell from \"./assets/icons/addCell.svg\"\r\nimport { asyncConfirm, asyncPrompt } from \"./Components/AsyncPrompts\"\r\nimport removeCell from \"./assets/icons/removeCell.svg\"\r\nimport ComposerTools from \"./Components/Composer/ComposerTools\"\r\nimport { appName } from \"./appConfig\"\r\nclass Composer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.db = new ZangoDb.Db(appName, { songs: [] })\r\n        this.dbCol = {\r\n            songs: this.db.collection(\"songs\")\r\n\r\n        }\r\n        let settings = this.getSettings()\r\n        this.playbackInterval = undefined\r\n        this.state = {\r\n            instrument: new Instrument(),\r\n            layers: [new Instrument(), new Instrument()],\r\n            audioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            reverbAudioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            songs: [],\r\n            isPlaying: false,\r\n            song: new ComposedSong(\"Untitled\"),\r\n            settings: settings,\r\n            menuOpen: false,\r\n            layer: 1,\r\n            toolsColumns: [],\r\n            toolsVisible: false\r\n        }\r\n        this.copiedColums = []\r\n        this.changes = 0\r\n        this.syncSongs()\r\n        this.loadInstrument(settings.instrument.value, 1)\r\n        this.loadInstrument(settings.layer2.value, 2)\r\n        this.loadInstrument(settings.layer3.value, 3)\r\n        try {\r\n            this.loadReverb()\r\n        } catch {\r\n            console.log(\"Error with reverb\")\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"keydown\", this.handleKeyboard)\r\n        if (window.location.hostname !== \"localhost\") {\r\n            window.addEventListener(\"beforeunload\", (event) => {\r\n                event.preventDefault()\r\n                event.returnValue = ''\r\n            })\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyboard)\r\n        let state = this.state\r\n        state.isPlaying = false\r\n    }\r\n    componentDidCatch() {\r\n        this.setState({\r\n            song: new ComposedSong(\"Untitled\")\r\n        })\r\n        new LoggerEvent(\"Warning\", \"There was an error with the song! Restoring default...\").trigger()\r\n    }\r\n    handleAutoSave = () => {\r\n        this.changes++\r\n        if (this.changes > 5 && this.state.settings.autosave.value) {\r\n            if (this.state.song.name !== \"Untitled\") {\r\n                this.updateSong(this.state.song)\r\n            }\r\n\r\n        }\r\n    }\r\n    loadReverb() {\r\n        let audioCtx = this.state.audioContext\r\n        fetch(\"./assets/audio/reverb4.wav\")\r\n            .then(r => r.arrayBuffer().catch(function () { console.log(\"Error with reverb \") }))\r\n            .then(b => audioCtx.decodeAudioData(b, (impulse_response) => {\r\n                let convolver = audioCtx.createConvolver()\r\n                let gainNode = audioCtx.createGain()\r\n                gainNode.gain.value = 2.5\r\n                convolver.buffer = impulse_response\r\n                convolver.connect(gainNode)\r\n                gainNode.connect(audioCtx.destination)\r\n                this.setState({\r\n                    reverbAudioContext: convolver\r\n                })\r\n            })).catch(function () {\r\n                console.log(\"Error with reverb\")\r\n            })\r\n    }\r\n    getSettings = () => {\r\n        let storedSettings = localStorage.getItem(appName + \"_Composer_Settings\")\r\n        try {\r\n            storedSettings = JSON.parse(storedSettings)\r\n        } catch (e) {\r\n            storedSettings = null\r\n        }\r\n        if (storedSettings !== null) {\r\n            if (storedSettings.settingVesion !== ComposerSettings.settingVesion) {\r\n                this.updateSettings(ComposerSettings)\r\n                return ComposerSettings\r\n            }\r\n            return storedSettings\r\n        }\r\n        return ComposerSettings\r\n    }\r\n    updateSettings = (override) => {\r\n        let state\r\n        if (override !== undefined) {\r\n            state = override\r\n        } else {\r\n            state = this.state.settings\r\n        }\r\n        localStorage.setItem(appName + \"_Composer_Settings\", JSON.stringify(state))\r\n    }\r\n    handleSettingChange = (setting) => {\r\n        let settings = this.state.settings\r\n        let data = setting.data\r\n        settings[setting.key].value = data.value\r\n        if (data.songSetting) {\r\n            this.state.song[setting.key] = data.value\r\n        }\r\n        if (setting.key === \"instrument\") this.loadInstrument(data.value, 1)\r\n        if (setting.key === \"layer2\") this.loadInstrument(data.value, 2)\r\n        if (setting.key === \"layer3\") this.loadInstrument(data.value, 3)\r\n        this.setState({\r\n            settings: settings,\r\n            song: this.state.song\r\n        }, () => {\r\n            this.updateSettings()\r\n        })\r\n    }\r\n    loadInstrument = async (name, layer) => {\r\n        if (layer === 1) {\r\n            let newInstrument = new Instrument(name)\r\n            await newInstrument.load(this.state.audioContext)\r\n            this.setState({\r\n                instrument: newInstrument\r\n            })\r\n        } else {\r\n            let newInstrument = new Instrument(name)\r\n            let layers = this.state.layers\r\n            layers[layer - 2] = newInstrument\r\n            await newInstrument.load(this.state.audioContext)\r\n            this.setState({\r\n                layers: layers\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n    changeVolume = (obj) => {\r\n        let settings = this.state.settings\r\n        if (obj.key === \"instrument\") {\r\n            settings.instrument.volume = obj.value\r\n            this.state.instrument.changeVolume(obj.value)\r\n        }\r\n        if (obj.key === \"layer2\") {\r\n            settings.layer2.volume = obj.value\r\n            this.state.layers[0].changeVolume(obj.value)\r\n        }\r\n        if (obj.key === \"layer3\") {\r\n            settings.layer3.volume = obj.value\r\n            this.state.layers[1].changeVolume(obj.value)\r\n        }\r\n        this.setState({\r\n            settings: settings\r\n        }, () => this.updateSettings())\r\n    }\r\n    handleKeyboard = (event) => {\r\n        let key = event.keyCode\r\n        /*\r\n            let note = this.state.instrument.layout.find(e => e.noteNames.keyboard === letter)\r\n            if (note !== undefined) {\r\n                this.handleClick(note)\r\n            }\r\n        */\r\n        if (document.activeElement.tagName === \"INPUT\") return\r\n        switch (key) {\r\n            case 68: this.selectColumn(this.state.song.selected + 1)\r\n                break;\r\n            case 65: this.selectColumn(this.state.song.selected - 1)\r\n                break;\r\n            case 49: this.handleTempoChanger(TempoChangers[0])\r\n                break;\r\n            case 50: this.handleTempoChanger(TempoChangers[1])\r\n                break;\r\n            case 51: this.handleTempoChanger(TempoChangers[2])\r\n                break;\r\n            case 52: this.handleTempoChanger(TempoChangers[3])\r\n                break;\r\n            case 32: this.togglePlay()\r\n                break;\r\n            case 81: this.removeColumns(1, this.state.song.selected)\r\n                break;\r\n            case 69: this.addColumns(1, this.state.song.selected)\r\n                break;\r\n\r\n            case \"\":\r\n                break;\r\n        }\r\n    }\r\n    playSound = (instrument, index) => {\r\n        const source = this.state.audioContext.createBufferSource()\r\n        let note = instrument.layout[index]\r\n        if(note === undefined) return\r\n        source.buffer = note.buffer\r\n        source.playbackRate.value = getPitchChanger(this.state.settings.pitch.value)\r\n        source.connect(instrument.gain)\r\n        if (this.state.settings.caveMode.value) {\r\n            instrument.gain.connect(this.state.reverbAudioContext)\r\n        } else {\r\n            instrument.gain.connect(this.state.audioContext.destination)\r\n        }\r\n        source.start(0)\r\n\r\n    }\r\n    handleClick = (note) => {\r\n        let column = this.state.song.columns[this.state.song.selected]\r\n        let index = column.notes.findIndex((n) => {\r\n            return note.index === n.index\r\n        })\r\n        let layerIndex = this.state.layer - 1\r\n        if (index < 0) { //if it doesn't exist, create a new one\r\n            let columnNote = new ColumnNote(note.index)\r\n            columnNote.layer = replaceAt(columnNote.layer, layerIndex, \"1\")\r\n            column.notes.push(columnNote)\r\n        } else { //if it exists, toggle the current layer and if it's 000 delete it\r\n            let currentNote = column.notes[index]\r\n            currentNote.layer = replaceAt(currentNote.layer, layerIndex, currentNote.layer[layerIndex] === \"0\" ? \"1\" : \"0\")\r\n            if (currentNote.layer === \"000\") column.notes.splice(index, 1)\r\n        }\r\n        this.setState({\r\n            song: this.state.song\r\n        })\r\n        this.handleAutoSave()\r\n        let instrument = this.state.instrument\r\n        if (this.state.layer > 1) {\r\n            instrument = this.state.layers[this.state.layer - 2]\r\n        }\r\n        this.playSound(instrument, note.index)\r\n    }\r\n    syncSongs = async () => {\r\n        let songs = await this.dbCol.songs.find().toArray()\r\n        songs = songs.map(song => {\r\n            if (song.data.isComposedVersion) {\r\n                return ComposerSongDeSerialization(song)\r\n            }\r\n            return song\r\n        })\r\n        this.setState({\r\n            composedSongs: songs,\r\n            songs: songs\r\n        })\r\n    }\r\n    addSong = async (song) => {\r\n        if (await this.songExists(song.name)) {\r\n            return new LoggerEvent(\"Warning\", \"A song with this name already exists! \\n\" + song.name).trigger()\r\n        }\r\n        await this.dbCol.songs.insert(ComposerSongSerialization(song))\r\n        this.syncSongs()\r\n    }\r\n    updateSong = async (song) => {\r\n        if (song.name === \"Untitled\") {\r\n            let name = await this.askForSongName()\r\n            if (name === null) return\r\n            song.name = name\r\n            return this.addSong(song)\r\n\r\n        }\r\n        return new Promise(async resolve => {\r\n            let settings = this.state.settings\r\n            if (await this.songExists(song.name)) {\r\n                song.instruments[0] = settings.instrument.value\r\n                song.instruments[1] = settings.layer2.value\r\n                song.instruments[2] = settings.layer3.value\r\n                await this.dbCol.songs.update({ name: song.name }, ComposerSongSerialization(song))\r\n                console.log(\"song saved:\", song.name)\r\n                this.changes = 0\r\n                this.syncSongs()\r\n            } else {\r\n                console.log(\"song doesn't exist\")\r\n                song.name = \"Untitled\"\r\n                this.updateSong(song)\r\n            }\r\n            resolve()\r\n        })\r\n    }\r\n    askForSongName = () => {\r\n        return new Promise(async resolve => {\r\n            let promptString = \"Write song name, press cancel to ignore\"\r\n            while (true) {\r\n                let songName = await asyncPrompt(promptString)\r\n                if (songName === null) return resolve(null)\r\n                if (songName !== \"\") {\r\n                    if (await this.songExists(songName)) {\r\n                        promptString = \"This song already exists: \" + songName\r\n                    } else {\r\n                        return resolve(songName)\r\n                    }\r\n                } else {\r\n                    promptString = \"Write song name, press cancel to ignore\"\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n    askForSongUpdate = () => {\r\n        return new Promise(async resolve => {\r\n            let result = await asyncConfirm(`You have unsaved changes to the song: \"${this.state.song.name}\" do you want to save now?`)\r\n            resolve(result)\r\n        })\r\n    }\r\n    songExists = async (name) => {\r\n        return await this.dbCol.songs.findOne({ name: name }) !== undefined\r\n    }\r\n    createNewSong = async () => {\r\n        if (this.state.song.name !== \"Untitled\" && this.changes > 0) {\r\n            let wantsToSave = await this.askForSongUpdate()\r\n            if (wantsToSave) {\r\n                await this.updateSong(this.state.song)\r\n            }\r\n        }\r\n        let name = await this.askForSongName()\r\n        if (name === null) return\r\n        let song = new ComposedSong(name)\r\n        this.changes = 0\r\n        this.setState({\r\n            song: song\r\n        }, () => this.addSong(song))\r\n    }\r\n    removeSong = async (name) => {\r\n        let confirm = await asyncConfirm(\"Are you sure you want to delete the song: \" + name)\r\n        if (confirm) this.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n    }\r\n\r\n    loadSong = async (song) => {\r\n        const state = this.state\r\n        if (!song.data.isComposedVersion) {\r\n            song = RecordingToComposed(song)\r\n            song.name += \" - Composed\"\r\n        }\r\n        if (this.changes !== 0) {\r\n            let confirm = state.settings.autosave.value && state.song.name !== \"Untitled\"\r\n            if (!confirm && state.song.columns.length > 0) {\r\n                confirm = await asyncConfirm(`You have unsaved changes to the song: \"${state.song.name}\" do you want to save now?`)\r\n            }\r\n            if (confirm) await this.updateSong(state.song)\r\n        }\r\n\r\n        let settings = this.state.settings\r\n        settings.bpm.value = song.bpm\r\n        settings.pitch.value = song.pitch\r\n        if (settings.instrument.value !== song.instruments[0]) {\r\n            this.loadInstrument(song.instruments[0], 1)\r\n            settings.instrument.value = song.instruments[0]\r\n        }\r\n        if (settings.layer2.value !== song.instruments[1]) {\r\n            this.loadInstrument(song.instruments[1], 2)\r\n            settings.layer2.value = song.instruments[1]\r\n        }\r\n        if (settings.layer3.value !== song.instruments[2]) {\r\n            this.loadInstrument(song.instruments[2], 3)\r\n            settings.layer3.value = song.instruments[2]\r\n        }\r\n        this.changes = 0\r\n        this.setState({\r\n            song: song,\r\n            settings: settings,\r\n            toolsColumns: []\r\n        })\r\n    }\r\n\r\n    addColumns = (amount = 1, position = \"end\") => {\r\n        return new Promise(resolve => {\r\n            let columns = new Array(amount).fill().map(() => new Column())\r\n            let songColumns = this.state.song.columns\r\n            if (position === \"end\") {\r\n                songColumns.push(...columns)\r\n            } else {\r\n                songColumns.splice(position + 1, 0, ...columns)\r\n            }\r\n            if (amount === 1) this.selectColumn(this.state.song.selected + 1)\r\n            this.handleAutoSave()\r\n            this.setState({\r\n                song: this.state.song\r\n            }, resolve)\r\n        })\r\n\r\n    }\r\n    removeColumns = (amount, position) => {\r\n        let song = this.state.song\r\n        if (song.columns.length < 16) return\r\n        let indexes = new Array(amount).fill().map((e, i) => position + i)\r\n        indexes.forEach(index => {\r\n            if (song.breakpoints.includes(index)) this.toggleBreakpoint(index)\r\n        })\r\n        song.columns.splice(position, amount)\r\n        if (song.columns.length <= song.selected) this.selectColumn(song.selected - 1)\r\n        this.handleAutoSave()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    //----------------------------------------------//\r\n\r\n    togglePlay = async (override) => {\r\n        let newState = typeof override === \"boolean\" ? override : !this.state.isPlaying\r\n        this.setState({\r\n            isPlaying: newState\r\n        }, async () => {\r\n            if (this.state.isPlaying) this.selectColumn(this.state.song.selected)\r\n            let pastError = 0\r\n            let previousTime = new Date().getTime()\r\n            while (this.state.isPlaying) {\r\n                const { song, settings } = this.state\r\n                let tempoChanger = TempoChangers[song.columns[song.selected].tempoChanger]\r\n                let msPerBPM = Math.floor(60000 / settings.bpm.value * tempoChanger.changer) + pastError\r\n                previousTime = new Date().getTime()\r\n                await delayMs(msPerBPM)\r\n                if (!this.state.isPlaying) break\r\n                this.handleTick()\r\n                pastError = previousTime + msPerBPM - new Date().getTime()\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    handleTick = () => {\r\n        let newIndex = this.state.song.selected + 1\r\n        if (this.state.isPlaying && newIndex > this.state.song.columns.length - 1) {\r\n            return this.togglePlay(false)\r\n        }\r\n        this.selectColumn(this.state.song.selected + 1)\r\n\r\n    }\r\n    toggleMenuVisible = () => {\r\n        this.setState({\r\n            menuOpen: !this.state.menuOpen\r\n        })\r\n    }\r\n    toggleBreakpoint = (override) => {\r\n        let song = this.state.song\r\n        let index = typeof override === \"number\" ? override : song.selected\r\n        let indexOfBreakpoint = song.breakpoints.indexOf(index)\r\n        if (indexOfBreakpoint >= 0 && song.columns.length > index) {\r\n            song.breakpoints.splice(indexOfBreakpoint, 1)\r\n        } else if (song.columns.length > index) {\r\n            song.breakpoints.push(index)\r\n        }\r\n        this.validateBreakpoints()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    handleTempoChanger = (changer) => {\r\n        let song = this.state.song\r\n        song.columns[this.state.song.selected].tempoChanger = changer.id\r\n        this.handleAutoSave()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    changePage = async (page) => {\r\n        if (this.changes !== 0) {\r\n            let confirm = await asyncConfirm(`You have unsaved changes to the song: \"${this.state.song.name}\" do you want to save now?`)\r\n            if (confirm) {\r\n                await this.updateSong(this.state.song)\r\n            }\r\n        }\r\n\r\n        this.props.changePage(page)\r\n    }\r\n    selectColumn = (index, ignoreAudio) => {\r\n        const state = this.state\r\n        let song = state.song\r\n        if (index < 0 || index > song.columns.length - 1) return\r\n        let currentColumn = state.song.columns[index]\r\n        song.selected = index\r\n        let toolsColumns = state.toolsColumns\r\n        if (state.toolsVisible && this.copiedColums.length === 0) {\r\n            toolsColumns.push(index)\r\n            let min = Math.min(...toolsColumns)\r\n            let max = Math.max(...toolsColumns)\r\n            toolsColumns = new Array(max - min + 1).fill().map((e, i) => min + i)\r\n        }\r\n        this.setState({\r\n            song: song,\r\n            toolsColumns: toolsColumns\r\n        })\r\n\r\n        if (ignoreAudio) return\r\n        currentColumn.notes.forEach(note => {\r\n            if (note.layer[0] === \"1\") this.playSound(state.instrument, note.index)\r\n            if (note.layer[1] === \"1\") this.playSound(state.layers[0], note.index)\r\n            if (note.layer[2] === \"1\") this.playSound(state.layers[1], note.index)\r\n        })\r\n    }\r\n    changeLayer = (layer) => {\r\n        this.setState({\r\n            layer: layer\r\n        })\r\n    }\r\n    //-----------------------TOOLS---------------------//\r\n    toggleTools = () => {\r\n        this.setState({\r\n            toolsVisible: !this.state.toolsVisible,\r\n            toolsColumns: this.state.toolsVisible ? [] : [this.state.song.selected]\r\n        })\r\n        this.copiedColums = []\r\n    }\r\n    copyColumns = (layer) => {\r\n        this.copiedColums = []\r\n        this.state.toolsColumns.forEach((index) => {\r\n            let column = this.state.song.columns[index]\r\n            if (column !== undefined) this.copiedColums.push(column)\r\n        })\r\n        this.copiedColums = JSON.parse(JSON.stringify(this.copiedColums)) // removing reference\r\n        if (layer !== 'all') {\r\n            this.copiedColums = this.copiedColums.map(column => {\r\n                column.notes = column.notes.filter(e => e.layer[layer - 1] === '1')\r\n                column.notes = column.notes.map(e => {\r\n                    e.layer = '000'\r\n                    e.layer = replaceAt(e.layer, layer - 1, '1')\r\n                    return e\r\n                })\r\n                return column\r\n            })\r\n        }\r\n        this.setState({\r\n            toolsColumns: []\r\n        })\r\n    }\r\n    pasteColumns = async (insert) => {\r\n        let song = this.state.song\r\n        let copiedColumns = JSON.parse(JSON.stringify(this.copiedColums))\r\n        if (!insert) {\r\n            song.columns.splice(song.selected, 0, ...copiedColumns)\r\n        } else {\r\n            copiedColumns.forEach((copiedColumn, i) => {\r\n                let column = song.columns[song.selected + i]\r\n                if (column !== undefined) {\r\n                    copiedColumn.notes.forEach(copiedNote => {\r\n                        let index = column.notes.findIndex(note => copiedNote.index === note.index)\r\n                        if (index < 0) {\r\n                            column.notes.push(copiedNote)\r\n                        } else {\r\n                            for (let j = 0; j < 3; j++) {\r\n                                if (copiedNote.layer[j] === '1') {\r\n                                    column.notes[index].layer = replaceAt(column.notes[index].layer, j, 1)\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    eraseColumns = () => {\r\n        let song = this.state.song\r\n        this.state.toolsColumns.forEach(columnIndex => {\r\n            let column = song.columns[columnIndex]\r\n            if (column !== undefined) song.columns[columnIndex].notes = []\r\n        })\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    validateBreakpoints = () => {\r\n        let breakpoints = this.state.song.breakpoints.filter(breakpoint => breakpoint < this.state.song.columns.length)\r\n        let song = this.state.song\r\n        song.breakpoints = breakpoints\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    deleteColumns = async () => {\r\n        let song = this.state.song\r\n        song.columns = song.columns.filter((e, i) => !this.state.toolsColumns.includes(i))\r\n        if (song.selected > song.columns.length - 1) song.selected = song.columns.length - 1\r\n        if (song.selected <= 0) song.selected = 0\r\n        if (song.columns.length === 0) await this.addColumns(12, 0)\r\n        this.setState({\r\n            song: song,\r\n            toolsColumns: []\r\n        }, this.validateBreakpoints)\r\n    }\r\n    render() {\r\n\r\n        const { state, props } = this\r\n        let song = state.song\r\n        let menuData = {\r\n            songs: state.songs,\r\n            currentSong: state.song,\r\n            settings: state.settings,\r\n            hasChanges: this.changes,\r\n            menuOpen: state.menuOpen\r\n        }\r\n        let menuFunctions = {\r\n            loadSong: this.loadSong,\r\n            removeSong: this.removeSong,\r\n            createNewSong: this.createNewSong,\r\n            changePage: this.changePage,\r\n            updateSong: this.updateSong,\r\n            handleSettingChange: this.handleSettingChange,\r\n            toggleMenuVisible: this.toggleMenuVisible,\r\n            changeVolume: this.changeVolume\r\n        }\r\n        let keyboardFunctions = {\r\n            handleClick: this.handleClick,\r\n            handleTempoChanger: this.handleTempoChanger,\r\n            changeLayer: this.changeLayer\r\n        }\r\n        let keyboardData = {\r\n            keyboard: state.instrument,\r\n            currentColumn: state.song.columns[state.song.selected],\r\n            TempoChangers: TempoChangers,\r\n            layer: state.layer,\r\n            pitch: state.settings.pitch.value,\r\n            isPlaying: state.isPlaying\r\n        }\r\n        let canvasFunctions = {\r\n            selectColumn: this.selectColumn,\r\n            toggleBreakpoint: this.toggleBreakpoint\r\n        }\r\n        let canvasData = {\r\n            columns: song.columns,\r\n            selected: song.selected,\r\n            settings: state.settings,\r\n            breakpoints: state.song.breakpoints,\r\n            toolsColumns: state.toolsColumns\r\n        }\r\n        let toolsData = {\r\n            visible: this.state.toolsVisible,\r\n            copiedColumns: this.copiedColums,\r\n            layer: this.state.layer\r\n        }\r\n        let toolsFunctions = {\r\n            toggleTools: this.toggleTools,\r\n            eraseColumns: this.eraseColumns,\r\n            deleteColumns: this.deleteColumns,\r\n            copyColumns: this.copyColumns,\r\n            pasteColumns: this.pasteColumns\r\n        }\r\n        return <div className=\"app\">\r\n            <div className=\"hamburger\" onClick={this.toggleMenuVisible}>\r\n                <FontAwesomeIcon icon={faBars} />\r\n\r\n            </div>\r\n            <div className=\"rotate-screen\">\r\n                <img src={rotateImg}>\r\n                </img>\r\n                    For a better experience, add the website to the home screen, and rotate your device\r\n            </div>\r\n\r\n            <div className=\"right-panel-composer\">\r\n\r\n                <div className=\"column fill-x\">\r\n\r\n                    <div className=\"top-panel-composer\">\r\n                        <div className=\"buttons-composer-wrapper\">\r\n                            <div className=\"tool\" onClick={() => this.selectColumn(song.selected + 1)}>\r\n                                <FontAwesomeIcon icon={faChevronRight} />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.selectColumn(song.selected - 1)}>\r\n                                <FontAwesomeIcon icon={faChevronLeft} />\r\n                            </div>\r\n\r\n                            <div className=\"tool\" onClick={this.togglePlay}>\r\n                                <FontAwesomeIcon icon={this.state.isPlaying ? faPause : faPlay} />\r\n                            </div>\r\n                        </div>\r\n                        <ComposerCanvas\r\n                            key={this.state.settings.columnsPerCanvas.value}\r\n                            functions={canvasFunctions}\r\n                            data={canvasData}\r\n                        />\r\n                        <div className=\"buttons-composer-wrapper-right\">\r\n\r\n                            <div className=\"tool\" onClick={() => this.addColumns(1, song.selected)}>\r\n                                <img src={addCell} className=\"tool-icon\" />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.removeColumns(1, song.selected)}>\r\n                                <img src={removeCell} className=\"tool-icon\" />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.addColumns(this.state.settings.beatMarks.value * 4, \"end\")}>\r\n                                <FontAwesomeIcon icon={faPlus} />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={this.toggleTools}>\r\n                                <FontAwesomeIcon icon={faTools} />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <ComposerKeyboard\r\n                    functions={keyboardFunctions}\r\n                    data={keyboardData}\r\n                />\r\n            </div>\r\n            <Menu\r\n                data={menuData}\r\n                functions={menuFunctions}\r\n            />\r\n            <ComposerTools\r\n                data={toolsData}\r\n                functions={toolsFunctions}\r\n            />\r\n            <div className=\"song-info\">\r\n                <div>\r\n                    {song.name}\r\n                </div>\r\n                <div>\r\n                    {formatMillis(calculateLength(this.state.song, this.state.song.selected))}\r\n                     /\r\n                    {formatMillis(calculateLength(this.state.song, this.state.song.columns.length))}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\nfunction formatMillis(millis) {\r\n    var minutes = Math.floor(millis / 60000);\r\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n}\r\nfunction calculateLength(song, end) {\r\n    let columns = song.columns\r\n    let bpmPerMs = Math.floor(60000 / song.bpm)\r\n    let totalLength = 0\r\n    columns.forEach((column, i) => {\r\n        if (i > end) return\r\n        totalLength += bpmPerMs * TempoChangers[column.tempoChanger].changer\r\n    })\r\n    return totalLength\r\n}\r\nfunction delayMs(ms) {\r\n    return new Promise(resolve => {\r\n        workerTimers.setTimeout(resolve, ms)\r\n    })\r\n}\r\nfunction replaceAt(string, index, replacement) {\r\n    if (index >= string.length) {\r\n        return string.valueOf();\r\n    }\r\n\r\n    return string.substring(0, index) + replacement + string.substring(index + 1);\r\n}\r\nexport default Composer\r\n\r\n","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport ZangoDb from \"zangodb\"\r\nimport { FileDownloader, LoggerEvent } from \"./SongUtils\"\r\nimport { asyncConfirm } from \"./AsyncPrompts\"\r\nimport { appName} from \"../appConfig\"\r\nclass ErrorPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.db = new ZangoDb.Db(appName, { songs: [] })\r\n        this.dbCol = {\r\n            songs: this.db.collection(\"songs\")\r\n\r\n        }\r\n        this.state = {\r\n            songs: []\r\n        }\r\n        this.syncSongs()\r\n    }\r\n    syncSongs = async () => {\r\n        let songs = await this.dbCol.songs.find().toArray()\r\n        this.setState({\r\n            songs: songs\r\n        })\r\n    }\r\n    deleteSong = async (name) => {\r\n        if (await asyncConfirm(\"Are you sure you want to delete the song: \" + name)) {\r\n            this.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n        }\r\n\r\n    }\r\n    resetSettings = () => {\r\n        localStorage.removeItem(appName+\"_Composer_Settings\")\r\n        localStorage.removeItem(appName+\"_Main_Settings\")\r\n        new LoggerEvent(\"Success\", \"Settings have been reset\").trigger()\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json, song.name + \".gensheet\")\r\n    }\r\n    render() {\r\n        return <div className=\"error-page app\">\r\n            <div className=\"error-text-wrapper\">\r\n                There seems to be an error. <br />\r\n                Here you can download or delete your songs,\r\n                try to find what song caused the error and remove it.\r\n            </div>\r\n            <div className=\"error-buttons-wrapper\">\r\n                <button className=\"genshin-button\" onClick={this.resetSettings}>\r\n                    Reset settings\r\n                </button>\r\n            </div>\r\n            <div className=\"error-songs-wrapper\">\r\n                {this.state.songs.map(song => {\r\n                    return <SongRow\r\n                        data={song}\r\n                        functions={\r\n                            {\r\n                                deleteSong: this.deleteSong,\r\n                                downloadSong: this.downloadSong\r\n                            }\r\n                        }\r\n                    >\r\n\r\n                    </SongRow>\r\n                })}\r\n            </div>\r\n            <button\r\n                className=\"error-go-back genshin-button\"\r\n                onClick={() => this.props.changePage(\"\")}\r\n            >\r\n                Go back to main page\r\n            </button>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction SongRow(props) {\r\n    let data = props.data\r\n    let deleteSong = props.functions.deleteSong\r\n    let downloadSong = props.functions.downloadSong\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\">\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => deleteSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ErrorPage","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport Composer from \"./Composer\"\r\nimport ErrorPage from \"./Components/ErrorPage\"\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport \"./App.css\"\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\r\nimport { LoggerEvent } from \"./Components/SongUtils\"\r\nimport {appName} from \"./appConfig\"\r\nconst getBasename = path => path.substr(0, path.lastIndexOf('/'));\r\nlet pages = [\"\", \"Composer\", \"ErrorPage\"]\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    let path = window.location.pathname.split(\"/\")\r\n    if (path.length !== 0) {\r\n      path = path[path.length - 1]\r\n    } else {\r\n      path = \"\"\r\n    }\r\n    if (!pages.includes(path)) path = \"\"\r\n    this.state = {\r\n      floatingMessage: {\r\n        timestamp: 0,\r\n        visible: false,\r\n        text: \"Text\",\r\n        title: \"Title\"\r\n      },\r\n      hasVisited: localStorage.getItem(appName+\"_Visited\"),\r\n      hasPersistentStorage: navigator.storage && navigator.storage.persist,\r\n      selectedPage: path\r\n    }\r\n    this.checkUpdate()\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('logEvent', this.logEvent);\r\n  }\r\n  changePage = (page) => {\r\n    this.setState({\r\n      selectedPage: page\r\n    })\r\n  }\r\n  componentDidCatch() {\r\n    this.setState({\r\n      selectedPage: \"ErrorPage\"\r\n    })\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('logEvent', this.logEvent);\r\n  }\r\n  askForStorage = async () => {\r\n    try {\r\n      if (navigator.storage && navigator.storage.persist) {\r\n        let result = await navigator.storage.persist()\r\n        if (result) {\r\n          new LoggerEvent(\"Success\", \"Storage permission allowed\").trigger()\r\n        } else {\r\n          new LoggerEvent(\"Denied\", \"Storage permission refused, reload if you want to try again\").trigger()\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      new LoggerEvent(\"Error\", \"There was an error with setting up persistent storage\").trigger()\r\n    }\r\n    this.closeWelcomeScreen()\r\n  }\r\n  closeWelcomeScreen = () => {\r\n    localStorage.setItem(appName+\"_Visited\", true)\r\n    this.setState({\r\n      hasVisited: true\r\n    })\r\n  }\r\n  hideMessage = () => {\r\n    let state = this.state\r\n    state.floatingMessage.visible = false\r\n    this.setState({\r\n      floatingMessage: state.floatingMessage\r\n    })\r\n  }\r\n  checkUpdate = () => {\r\n    setTimeout(() => {\r\n      let currentVersion = 0\r\n      let updateMessage =\r\n        `\r\n          Release\r\n        `\r\n      let storedVersion = localStorage.getItem(appName+\"_Version\")\r\n      if (currentVersion != storedVersion) {\r\n        console.log(\"update\")\r\n        new LoggerEvent(\"Update V\" + currentVersion, updateMessage, 8000).trigger()\r\n        localStorage.setItem(appName+\"_Version\", currentVersion)\r\n      }\r\n    }, 1000)\r\n  }\r\n  logEvent = (error) => {\r\n    error = error.detail\r\n    error.timestamp = new Date().getTime()\r\n    if (typeof error !== \"object\") return\r\n    this.setState({\r\n      floatingMessage: {\r\n        timestamp: error.timestamp,\r\n        visible: true,\r\n        text: error.text,\r\n        title: error.title\r\n      }\r\n    })\r\n    setTimeout(() => {\r\n      if (this.state.floatingMessage.timestamp !== error.timestamp) return\r\n      this.setState({\r\n        floatingMessage: {\r\n          timestamp: 0,\r\n          visible: false,\r\n          text: \"\",\r\n          title: \"\"\r\n        }\r\n      })\r\n    }, error.timeout)\r\n  }\r\n  render() {\r\n    let floatingMessage = this.state.floatingMessage\r\n    let floatingMessageClass = floatingMessage.visible ? \"floating-message floating-message-visible\" : \"floating-message\"\r\n    let baseName = getBasename(window.location.pathname).replace(\"//\", \"/\")\r\n    return <div className=\"index\">\r\n      <div className={floatingMessageClass} onClick={this.hideMessage}>\r\n        <div className=\"floating-message-title\">\r\n          {floatingMessage.title}\r\n        </div>\r\n        <div className=\"floating-message-text\">\r\n          {floatingMessage.text}\r\n        </div>\r\n      </div>\r\n      {[null, false, \"false\"].includes(this.state.hasVisited) ?\r\n        <div className=\"welcome-message\">\r\n          <div className={\"welcome-message-title\"}>Welcome to {appName} music {appName===\"Sky\" ? \"nightly\" : \"\"}</div>\r\n          <div>\r\n            This is a webapp which is run in your browser, if you currently are on one, please add\r\n            the website to the homescreen to have a fullscreen view and a more \"app\" feel.\r\n            <br /><br />\r\n            <div className=\"red-text\">WARNING</div>: Clearing your browser cache / storage might also delete your songs, make sure to\r\n            make a backup sometimes.\r\n            <br /><br />\r\n            {this.state.hasPersistentStorage ?\r\n              <div>\r\n                To prevent your browser from automatically clearing the app storage, click the \"confirm\" button below, if asked,\r\n                allow permission to keep the website data (Persistent storage).\r\n              </div>\r\n\r\n              : null}\r\n\r\n\r\n\r\n          </div>\r\n          <div className=\"welcome-message-button-wrapper\">\r\n            <button className=\"welcome-message-button\" onClick={this.askForStorage}>\r\n              Confirm\r\n                </button>\r\n          </div>\r\n        </div> : null\r\n      }\r\n      <BrowserRouter basename={baseName}>\r\n        <Redirect to={\"/\" + this.state.selectedPage}></Redirect>\r\n        {this.state.selectedPage === \"ErrorPage\"\r\n          ? <Route exact path={\"/ErrorPage\"}>\r\n            <ErrorPage changePage={this.changePage} />\r\n          </Route>\r\n          : <>\r\n            <Route exact path=\"/\">\r\n              <App changePage={this.changePage} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/Composer\">\r\n              <Composer changePage={this.changePage} />\r\n            </Route>\r\n\r\n          </>\r\n        }\r\n\r\n      </BrowserRouter>\r\n    </div>\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Index />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n"],"sourceRoot":""}