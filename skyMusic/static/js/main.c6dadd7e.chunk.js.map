{"version":3,"sources":["appConfig.js","Components/SongUtils.js","Components/mainPage/Note.js","Components/mainPage/SongStore.js","Components/mainPage/Keyboard.js","assets/images/mainpage.png","assets/images/composer.png","assets/images/songs.png","Components/mainPage/HelpTab.js","Components/mainPage/Menu.js","Components/SettingsObj.js","Components/AsyncPrompts.js","assets/icons/rotate.svg","Components/Instrument.js","Components/AudioRecorder.js","Components/mainPage/App.js","assets/icons/addCell.svg","assets/icons/removeCell.svg","Components/Composer/useDebounce.js","Components/Composer/MidiParser.js","Components/Composer/ComposerTools.js","Components/Composer/ComposerNote.js","Components/Composer/MultiSwitch.js","Components/Composer/ComposerKeyboard.js","Components/Composer/ComposerCache.js","Components/Composer/ComposerCanvas.js","Components/Composer/Menu.js","Components/Composer/Composer.js","Components/ErrorPage.js","Components/ChangelogPage.js","serviceWorkerRegistration.js","index.js"],"names":["appName","process","console","log","cssClasses","noteComposer","note","noteAnimation","approachCircle","noteName","audioContext","window","AudioContext","webkitAudioContext","instruments","notesPerColumn","instrumentsData","Lyre","notes","Zither","effects","filter","DunDun","Bells","Trumpet","Contrabass","Drum","Flute","Guitar","HandPan","ToyUkulele","Harp","Horn","Piano","Pipa","Kalimba","WinterPiano","Xylophone","Ocarina","layoutData","keyboardLayout","split","mobileLayout","keyboardCodes","keyNames","Sky","Genshin","speedChangers","map","e","name","value","pitchArr","composerNotePositions","reverse","importNotePositions","layoutImages","Recording","init","start","Date","getTime","addNote","index","length","push","this","Song","data","version","bpm","pitch","isComposed","isComposedVersion","Object","entries","forEach","entry","LoggerEvent","title","text","timeout","trigger","dispatchEvent","event","undefined","CustomEvent","detail","FileDownloader","type","download","file","dataType","encodeURIComponent","el","document","createElement","style","body","appendChild","setAttribute","click","remove","TempoChangers","id","changer","color","ComposedSong","breakpoints","columns","selected","Array","fill","column","Column","tempoChanger","NotesTable","ComposerSongDeSerialization","song","obj","columnObj","ColumnNote","ComposerToRecording","recordedSong","bpmPerMs","Math","floor","totalTime","ComposerSongSerialization","columnArr","layer","prepareSongDownload","finalSong","JSON","parse","stringify","oldFormatNotes","convertedNotes","noteObj","key","time","l","composedToOldFormat","recordedToOldFormat","pitchLevel","indexOf","songNotes","bitsPerPage","isEncrypted","prepareSongImport","isArray","includes","getSongType","Error","result","self","findIndex","n","genshinLayout","Number","RecordingToComposed","oldSkyToNewFormat","instrument","newSkyFormatToGenshin","bpmToMs","composed","converted","grouped","threshold","row","shift","amount","i","splice","groupByNotes","combinations","columnNote","difference","paddingColumns","finalPadding","col","getPitchChanger","pow","toFixed","delayMs","ms","Promise","resolve","workerTimers","getApproachCircleColor","numOfNotes","ApproachCircle","props","className","animation","approachRate","borderColor","Note","state","approachingNotes","outgoingAnimation","status","transition","fadeTime","parseClass","onPointerDown","preventDefault","handleClick","draggable","alt","src","noteImage","noteText","Component","songStore","observable","eventType","Keyboard","approachingSong","a","startDelay","speedChanger","setState","approachingScore","correct","wrong","score","combo","changeSliderState","approachingNotesList","tick","hasSong","sliderState","stateNotes","tickTime","hasChanges","removed","clicked","random","apNote","position","playSong","songTimestamp","timestamp","keyboard","applySpeedChange","previous","pastError","previousTime","delay","size","practiceSong","songLength","chunks","chunk","startTime","j","firstChunk","nextChunkDelay","secondChunk","keyboardNote","functions","setHasSong","songToPractice","handleSpeedChanger","find","restartSong","lostReference","stopSong","setTimeout","res","handleSliderEvent","target","handleKeyboard","repeat","activeElement","tagName","code","replace","getNoteFromCode","handleApproachClick","approachingNote","handlePracticeClick","indexClicked","nextChunk","nextNextChunk","onlySound","hasAnimation","approachStatus","playSound","propKeyboard","layout","playTimestamp","disposeStore","tickInterval","addEventListener","setInterval","observe","object","removeEventListener","clearInterval","keyboardSize","keyboardClass","Score","onClick","icon","faStop","min","onChange","max","faSyncAlt","disabled","transform","marginBottom","isLoading","noteData","instrumentName","isAnimated","getNoteText","noteNameType","layoutLength","HelpTab","mainPageImg","songsImg","faCrosshairs","faDownload","composerImg","marginTop","Key","children","Menu","checkPersistentStorage","navigator","storage","persist","persisted","isPersisted","isPersistentStorage","handleSearchInput","searchInput","clearSearch","searchedSongs","searchStatus","searchSongs","trim","fetch","encodeURI","then","json","fetchedSongs","error","toggleMenu","override","newState","open","selectSideMenu","selection","selectedMenu","changeSelectedSongType","selectedSongType","importSong","reader","FileReader","songsInput","addSong","fileName","readAsText","downloadSong","_id","songName","song1","toLowerCase","downloadAllSongs","toDownload","songs","fileDownloader","date","toISOString","sideClass","handleSettingChange","changePage","composedSongs","searchedSongFunctions","CloseMenu","action","faInfo","faMusic","faCog","faCompactDisc","MenuPanel","visible","SongRow","paddingTop","width","display","justifyContent","marginLeft","settings","SettingsRow","objKey","update","checkIfTWA","href","rel","placeholder","onKeyDown","onInput","faTimes","faSearch","SearchedSong","useState","valueHook","setter","options","checked","onBlur","deleteSong","removeSong","faTrash","MenuItem","play","sessionStorage","getItem","ComposerSettings","settingVesion","songSetting","volume","layer2","layer3","beatMarks","isMobile","columnsPerCanvas","caveMode","autosave","backgroundImage","syncTabs","MainPageSettings","approachSpeed","asyncPrompt","question","container","innerText","input","cancel","ok","append","classList","add","asyncConfirm","background","NoteData","noteNames","url","buffer","ArrayBuffer","Instrument","String","changeVolume","newVolume","volumeNode","gain","deleted","player","createBufferSource","buffers","connect","playbackRate","onended","stop","disconnect","load","emptyBuffer","createBuffer","sampleRate","requests","arrayBuffer","decodeAudioData","catch","all","loaded","node","delete","createGain","instrumentData","mobile","AudioRecorder","createMediaStreamDestination","recorder","MediaRecorder","stream","toUrl","URL","createObjectURL","once","urlBlob","anchor","toWav","blobToAudio","wav","blob","Blob","DataView","fileReader","onloadend","audioBuffer","readAsArrayBuffer","App","loadInstrument","loadReverb","toggleReverbNodes","resetDrag","isDragging","handleDragOver","handleDrag","thereIsSong","handleDrop","from","dataTransfer","files","hasReverb","reverbNode","destination","getSettings","storedSettings","localStorage","updateSettings","newInstrument","isLoadingInstrument","isRecording","handleRecording","setItem","setting","syncSongs","dbCol","toArray","songExists","findOne","insert","recording","askForSongName","promptString","toggleRecord","toggleRecordAudio","isRecordingAudio","reverbVolumeNode","db","ZangoDb","Db","collection","r","b","impulse_response","convolver","createConvolver","gainNode","keyboardFunctions","keyboardData","menuFunctions","menuData","AppButton","active","rotateImg","isTwa","referrer","setIfInTWA","useDebounce","debouncedValue","setDebouncedValue","useEffect","handler","clearTimeout","Track","editTrack","dataShown","setDataShown","textAlign","family","cursor","numberOfAccidentals","numberOfOutOfRange","MidiImport","handleFile","midi","Midi","header","tempos","keySignatures","tracks","track","offset","convertMidi","includeAccidentals","outOfRange","totalNotes","midiNote","convertedNote","isAccidental","convertMidiNote","sort","groupedNotes","elapsedTime","emptyColumns","noteColumn","number","numberToLayer","groupByIndex","group","final","join","mergeLayers","lastColumn","selectedColumn","loadSong","accidentals","command","changeOffset","parseInt","isInteger","changePitch","toggleAccidentals","changeBpm","changeMidiVisibility","margin","maxWidth","textOverflow","overflow","marginRight","alignItems","NumberInput","changeValue","step","backgroundColor","elementValue","setElementValue","debounced","ComposerTools","toggleTools","copiedColumns","currentTarget","blur","copyColumns","pasteColumns","eraseColumns","deleteColumns","ComposerNote","next","prev","canRender","layers","clickAction","MultiSwitch","selectedColor","buttonsClass","onSelect","ComposerKeyboard","notesIndexes","currentColumn","hiddenSideMenu","isPlaying","changeLayer","handleTempoChanger","toString","horizontalLineBreak","standards","ComposerCache","height","timelineHeight","generate","canvas","drawColumn","cache","toDataURL","standardColumn","standard","standardLarger","roundNess","noteWidth","noteHeight","ctx","getContext","fillStyle","roundRect","strokeStyle","lineWidth","beginPath","ballHeight","arc","PI","columnsLarger","breakpoint","moveTo","lineTo","notesFigures","app","PIXI","borderWidth","fillRect","stroke","y","x","radius","tl","tr","br","bl","defaultRadius","side","quadraticCurveTo","closePath","NumOfColumnsPerCanvas","ComposerCanvas","resetPointerDown","stageSelected","sliderSelected","stagePreviousPositon","handleBreakpoints","handleWheel","deltaY","selectColumn","global","totalWidth","relativePos","handleStageSlide","throttleStage","isMovingLeft","ceil","abs","toAdd","finalPos","direction","v","handleSlide","sizes","getBoundingClientRect","parentWidth","nearestEven","screen","currentBreakpoint","canvasRef","React","createRef","current","_canvas","s","xPos","counter","switcher","counterLimit","relativeColumnWidth","stageSize","stagePos","raf","renderOnComponentChange","ref","interactive","pointerdown","pointermove","pos","currentPos","boundaries","isVisible","tempoChangersCache","standardBg","backgroundCache","isToolsSelected","toolsColumns","isSelected","isBreakpoint","faStepBackward","faStepForward","antialias","autoDensity","pointertap","pointerup","draw","g","clear","beginFill","drawRect","image","lineStyle","drawRoundedRect","toggleBreakpoint","faMinusCircle","faPlusCircle","interactiveChildren","alpha","zIndex","num","round","toggleMenuVisible","updateSong","createNewSong","songFunctions","hasUnsaved","menuClass","menuOpen","currentSong","faSave","startRecordingAudio","volumeHook","setterVolume","sendChangeSelect","onPointerUp","Composer","promises","setupAudioDestination","handleAutoSave","changes","ins","togglePlay","shiftKey","letter","broadcastChannel","postMessage","nextLayer","removeColumns","addColumns","layerIndex","replaceAt","currentNote","askForSongUpdate","confirm","songColumns","msPerBPM","handleTick","newIndex","indexOfBreakpoint","validateBreakpoints","page","ignoreAudio","toolsVisible","copiedColums","copiedColumn","copiedNote","columnIndex","visibility","midiVisible","playbackInterval","BroadcastChannel","onmessage","location","hostname","returnValue","close","canvasFunctions","canvasData","toolsData","toolsFunctions","midiParserFunctions","midiParserData","faBars","faChevronRight","faChevronLeft","faPause","faPlay","addCell","removeCell","faPlus","faTools","formatMillis","calculateLength","millis","minutes","seconds","end","totalLength","string","replacement","valueOf","substring","ErrorPage","deleteAllSongs","resetSettings","removeItem","Changelogpage","changelogs","ChangelogRow","item","arr","isLocalhost","Boolean","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","pages","updateChecked","Index","selectedPage","askForStorage","closeWelcomeScreen","hasVisited","hideMessage","floatingMessage","checkUpdate","currentVersion","updateMessage","storedVersion","logEvent","path","hasPersistentStorage","floatingMessageClass","to","exact","ReactDOM","render","StrictMode","getElementById","origin","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"gUAAMA,EAAUC,MAEhBC,QAAQC,IAAR,UAAeH,EAAf,aADmB,QAInB,IAAMI,EAAa,CACfC,aAA0B,YAAZL,EAAwB,gBAAkB,oBACxDM,KAAkB,YAAZN,EAAwB,OAAS,WACvCO,cAA2B,YAAZP,EAAwB,iBAAmB,qBAC1DQ,eAA4B,YAAZR,EAAwB,kBAAoB,sBAC5DS,SAAsB,YAAZT,EAAwB,YAAc,iBAE9CU,EAAe,IAAKC,OAAOC,cAAgBD,OAAOE,oBAClDC,EAA0B,YAAZd,EAAwB,CACxC,OACA,SACA,UACE,CACE,QACA,aACA,SACA,OACA,OACA,UACA,OACA,cACA,YACA,QACA,UACA,UACA,aACA,OACA,QACA,SACA,WAEFe,EAA6B,YAAZf,EAAwB,GAAK,GAC9CgB,EAAkB,CACpBC,KAAM,CACFC,MAAO,IAEXC,OAAO,CACHD,MAAO,GACPE,QAAS,CACLC,OAAQ,gBAGhBC,OAAQ,CACJJ,MAAO,GAEXK,MAAO,CACHL,MAAO,GAEXM,QAAQ,CACJN,MAAO,IAEXO,WAAY,CACRP,MAAO,IAEXQ,KAAM,CACFR,MAAO,GAEXS,MAAO,CACHT,MAAO,IAEXU,OAAQ,CACJV,MAAO,IAEXW,QAAS,CACLX,MAAO,GAEXY,WAAW,CACPZ,MAAM,IAEVa,KAAM,CACFb,MAAO,IAEXc,KAAM,CACFd,MAAO,IAEXe,MAAO,CACHf,MAAO,IAEXgB,KAAM,CACFhB,MAAO,IAEXiB,QAAS,CACLjB,MAAO,IAEXkB,YAAa,CACTlB,MAAO,IAEXmB,UAAW,CACPnB,MAAO,IAEXoB,QAAQ,CACJpB,MAAM,KAKRqB,EAAa,CACf,GAAI,CACAC,eAAgB,4CAEKC,MAAM,KAE3BC,aAAc,iEAEcD,MAAM,KAElCE,cAAe,iEAEaF,MAAM,MAEtC,EAAG,CACCD,eAAgB,kBACDC,MAAM,KAErBC,aAAc,0BACKD,MAAM,KAEzBE,cAAe,0BACAF,MAAM,MAEzB,GAAI,CACAD,eAAgB,gCAECC,MAAM,KAEvBC,aAAc,+CAEQD,MAAM,KAE5BE,cAAe,+CAEOF,MAAM,OAI9BG,EAAW,CACbC,IAAK,CACD,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1E,EAAG,CAAC,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,MACpF,EAAG,CAAC,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KAC9E,EAAG,CAAC,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,MAChF,EAAG,CAAC,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAClF,EAAG,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAC5E,EAAG,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,MACtF,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAC5E,EAAG,CAAC,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,MAClF,EAAG,CAAC,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAChF,GAAI,CAAC,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,MAC/E,GAAI,CAAC,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,MAEzFC,QAAQ,CACJ,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxG,EAAG,CAAC,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,KAAO,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,MAC7H,EAAG,CAAC,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,KACnH,EAAG,CAAC,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,MACtH,EAAG,CAAC,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KACzH,EAAG,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAChH,EAAG,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,MAC/H,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAChH,EAAG,CAAC,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,MACzH,EAAG,CAAC,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KACtH,GAAI,CAAC,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,MACpH,GAAI,CAAC,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,OAG/HC,EAAgB,CAAC,IAAK,GAAI,IAAK,EAAE,KAAK,IAAI,GAAGC,KAAI,SAAAC,GACnD,MAAO,CACHC,KAAK,IAAD,OAAMD,GACVE,MAAOF,MAITG,EAAW,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAExEC,EAAqC,YAAZrD,EAAwB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGsD,UAAY,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAIA,UAE/LC,EAAkC,YAAZvD,EAAwB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAE3IwD,EAAe,CACjB,GAAI,qDAAqDf,MAAM,KAC/D,EAAe,QAAZzC,EAAmB,0BAA0ByC,MAAM,KAAO,0BAA0BA,MAAM,KAC7F,GAAI,iEAAiEA,MAAM,M,QCxLzEgB,EACL,aAAe,IAAD,gCAIdC,KAAO,WACN,EAAKC,OAAQ,IAAIC,MAAOC,UAAY,IACpC3D,QAAQC,IAAI,0BANC,KAQd2D,QAAU,SAACC,GACgB,IAAtB,EAAK7C,MAAM8C,QAAc,EAAKN,OAClC,IACIpD,EAAO,CAACyD,GADM,IAAIH,MAAOC,UACI,EAAKF,OACtC,EAAKzC,MAAM+C,KAAK3D,IAXhB4D,KAAKP,OAAQ,IAAIC,MAAOC,UACxBK,KAAKhD,MAAQ,IAaTiD,EACL,WAAYjB,GAA8B,IAAD,OAAvBhC,EAAuB,uDAAf,GAAIkD,EAAW,uDAAJ,GAAI,oBACxCF,KAAKhB,KAAOA,EACZgB,KAAKG,QAAU,EACfH,KAAKhD,MAAQA,EACbgD,KAAKI,IAAM,IACXJ,KAAKK,MAAQ,IACbL,KAAKE,KAAO,CACXI,YAAY,EACZC,mBAAmB,EACnBzE,QAASA,GAEV0E,OAAOC,QAAQP,GAAMQ,SAAQ,SAACC,GAC7B,EAAKT,KAAKS,EAAM,IAAMA,EAAM,OAIzBC,EACL,WAAYC,EAAOC,EAAMC,GAAU,IAAD,gCAalCC,QAAU,WACTvE,OAAOwE,cAAc,EAAKC,QAb1BlB,KAAKa,MAAQA,EACbb,KAAKe,QAAUA,EACff,KAAKc,KAAOA,OACIK,IAAZJ,IAAuBf,KAAKe,QAAU,KAC1Cf,KAAKkB,MAAQ,IAAIE,YAAY,WAAY,CACxCC,OAAQ,CACPR,MAAOb,KAAKa,MACZC,KAAMd,KAAKc,KACXC,QAASf,KAAKe,YAuBZO,EACL,WAAYC,GAAO,IAAD,gCAIlBC,SAAW,SAACC,EAAMzC,GACjB,IAAIkB,EAAO,EAAKwB,SAAWC,mBAAmBF,GAC1CG,EAAKC,SAASC,cAAc,KAChCF,EAAGG,MAAQ,eACXF,SAASG,KAAKC,YAAYL,GAC1BA,EAAGM,aAAa,OAAQhC,GACxB0B,EAAGM,aAAa,WAAYlD,GAC5B4C,EAAGO,QACHP,EAAGQ,eAXUjB,IAATI,IAAoBA,EAAO,aAC/BvB,KAAK0B,SAAW,QAAUH,EAAO,mBAc/Bc,EAAgB,CACnB,CACCC,GAAI,EACJxB,KAAM,IACNyB,QAAS,EACTC,MAAO,SACL,CACFF,GAAI,EACJxB,KAAM,MACNyB,QAAS,GACTC,MAAO,SACL,CACFF,GAAI,EACJxB,KAAM,MACNyB,QAAS,EAAI,EACbC,MAAO,SACL,CACFF,GAAI,EACJxB,KAAM,MACNyB,QAAS,EAAI,EACbC,MAAO,UAGHC,EACL,WAAYzD,GAA8B,IAAD,OAAvBhC,EAAuB,uDAAf,GAAIkD,EAAW,uDAAJ,GAAI,oBACxCA,EAAKI,YAAa,EAClBJ,EAAKK,mBAAoB,EACzBP,KAAKG,QAAU,EACfH,KAAKE,KAAOA,EACZF,KAAKhB,KAAOA,EACZgB,KAAKI,IAAM,IACXJ,KAAKK,MAAQ,IACbL,KAAKhD,MAAQA,EACbgD,KAAKpD,YAAc,CAACA,EAAY,GAAIA,EAAY,GAAIA,EAAY,IAChEoD,KAAK0C,YAAc,CAAC,GACpB1C,KAAK2C,QAAU,GACf3C,KAAK4C,SAAW,EAChB,IAAIC,MAAM,KAAKC,OAAOpC,SAAQ,SAAC3B,GAC9B,IAAIgE,EAAS,IAAIC,EACjBD,EAAOE,aAAe,EACtB,EAAKN,QAAQ5C,KAAKgD,OAKrB,SAASG,EAAWpD,GACnB,OAAO,IAAI+C,MAAM/C,GAAQgD,OAAOhE,KAAI,WAAO,MAAO,MAEnD,SAASqE,EAA4BC,GAAO,IAAD,MACtCC,EAAM,CACTnD,KAAMkD,EAAKlD,KACXlB,KAAMoE,EAAKpE,KACXoB,IAAG,UAAEgD,EAAKhD,WAAP,QAAc,IACjBC,MAAK,UAAE+C,EAAK/C,aAAP,QAAgB,IACrBzD,YAAawG,EAAKxG,aAAe,CAACA,EAAY,GAAIA,EAAY,GAAIA,EAAY,IAC9E8F,YAAW,UAAEU,EAAKV,mBAAP,QAAsB,GACjC1F,MAAO,GACP4F,SAAU,EACVD,QAAS,IAUV,OARAS,EAAKT,QAAQjC,SAAQ,SAAAqC,GACpB,IAAIO,EAAY,IAAIN,EACpBM,EAAUL,aAAeF,EAAO,GAChCA,EAAO,GAAGrC,SAAQ,SAAAtE,GACjBkH,EAAUtG,MAAM+C,KAAK,IAAIwD,EAAWnH,EAAK,GAAIA,EAAK,QAEnDiH,EAAIV,QAAQ5C,KAAKuD,MAEXD,EAER,SAASG,EAAoBJ,GAC5B,IAAIK,EAAe,IAAIxD,EAAKmD,EAAKpE,MAC7B0E,EAAWC,KAAKC,MAAM,IAAQR,EAAKhD,KACnCyD,EAAY,IAOhB,OANAT,EAAKT,QAAQjC,SAAQ,SAAAqC,GACpBA,EAAO,GAAGrC,SAAQ,SAAAtE,GACjBqH,EAAazG,MAAM+C,KAAK,CAAC3D,EAAK,GAAIyH,OAEnCA,GAAaF,KAAKC,MAAMF,EAAWrB,EAAcU,EAAO,IAAIR,YAEtDkB,EAER,SAASK,EAA0BV,GAClC,IAAIC,EAAM,CACTnD,KAAMkD,EAAKlD,KACXlB,KAAMoE,EAAKpE,KACXoB,IAAKgD,EAAKhD,IACVC,MAAO+C,EAAK/C,MACZqC,YAAaU,EAAKV,YAClB9F,YAAawG,EAAKxG,YAClB+F,QAAS,IAeV,OAbAU,EAAInD,KAAKpE,QAAUA,EAKnBsH,EAAKT,QAAQjC,SAAQ,SAAAqC,GACpB,IAAIgB,EAAY,CAAChB,EAAOE,cACpBjG,EAAQ+F,EAAO/F,MAAM8B,KAAI,SAAA1C,GAC5B,MAAO,CAACA,EAAKyD,MAAOzD,EAAK4H,UAE1BD,EAAU,GAAK/G,EACfqG,EAAIV,QAAQ5C,KAAKgE,MAEXV,EAER,SAASY,EAAoBb,GAAO,IAAD,EAC9Bc,EAAYC,KAAKC,MAAMD,KAAKE,UAAUjB,IACtCkB,EAAiB,GAWrB,OATCA,GADD,UAAIJ,EAAUhE,YAAd,aAAI,EAAgBK,mBAmCrB,SAA6B6C,GAC5B,IAAImB,EAAiB,GACjBb,EAAWC,KAAKC,MAAM,IAAQR,EAAKhD,KACnCyD,EAAY,IAoBhB,OAnBAT,EAAKT,QAAQjC,SAAQ,SAAAqC,GACpBA,EAAO,GAAGrC,SAAQ,SAAAtE,GACjB,IAAI4H,EAAQ,EACI,QAAZ5H,EAAK,KAAc4H,EAAQ,GACf,QAAZ5H,EAAK,KAAc4H,EAAQ,GACf,QAAZ5H,EAAK,KAAc4H,EAAQ,GACf,QAAZ5H,EAAK,KAAc4H,EAAQ,GACf,QAAZ5H,EAAK,KAAc4H,EAAQ,GACf,QAAZ5H,EAAK,KAAc4H,EAAQ,GACf,QAAZ5H,EAAK,KAAc4H,EAAQ,GAC/B,IAAIQ,EAAU,CACbC,KAAMT,EAAQ,EAAI,EAAIA,GAAS,MAAQ5H,EAAK,GAC5CsI,KAAMb,GAEHG,EAAQ,IAAGQ,EAAQG,EAAI,GAC3BJ,EAAexE,KAAKyE,MAErBX,GAAaF,KAAKC,MAAMF,EAAWrB,EAAcU,EAAO,IAAIR,YAEtDgC,EAzDWK,CAAoBV,GA4DvC,SAA6Bd,GAC5B,IAAImB,EAAiB,GAOrB,OANAnB,EAAKpG,MAAM0D,SAAQ,SAAAtE,GAClBmI,EAAexE,KAAK,CACnB2E,KAAMtI,EAAK,GACXqI,IAAK,OAASrI,EAAK,QAGdmI,EAlEWM,CAAoBX,GAEtCA,EAAU5D,WAAa4D,EAAUhE,KAAKK,kBACtC2D,EAAUY,WAAa5F,EAAS6F,QAAQb,EAAU7D,OAClD6D,EAAUc,UAAYV,EACtBJ,EAAUe,YAAc,GACxBf,EAAUgB,aAAc,EACjB,CAAChB,GAIT,SAASiB,EAAkB/B,GAAO,IAAD,IAE5BP,MAAMuC,QAAQhC,IAASA,EAAKtD,OAAS,IAAGsD,EAAOA,EAAK,IACxD,IAAI7B,EAsDL,SAAqB6B,GACpB,IACC,QAAkBjC,IAAdiC,EAAKlD,KAQR,OAAIkD,EAAKlD,KAAKK,kBACY,kBAAd6C,EAAKpE,MACQ,kBAAboE,EAAKhD,IAD0B,OAErClB,EAASmG,SAASjC,EAAK/C,QACxBwC,MAAMuC,QAAQhC,EAAKV,aAClBU,EAAKV,YAAY5C,OAAS,GACM,kBAAxBsD,EAAKV,YAAY,GAAwB,OAKlDG,MAAMuC,QAAQhC,EAAKT,SAClBS,EAAKT,QAAQ7C,OAAS,GAEA,kBADZsD,EAAKT,QAAQ,GACR,GAAwB,OAKrC,cAFC,OAdmC,OAkBlB,kBAAdS,EAAKpE,MACQ,kBAAboE,EAAKhD,IAD0B,OAErClB,EAASmG,SAASjC,EAAK/C,OACrB,cADoC,OA5B5C,GADA+C,EAAK0B,WAAa1B,EAAK0B,YAAc,OACd3D,IAAnBiC,EAAK4B,UACR,MAAO,SAgCR,MAAOjG,GAER,OADA/C,QAAQC,IAAI8C,GACL,OAER,MAAO,OAhGIuG,CAAYlC,GACvB,GAAa,SAAT7B,EAEH,MADA,IAAIX,EAAY,QAAS,gBAAgBI,UACnC,IAAIuE,MAAM,sBAKjB,GAHa,WAAThE,IACH6B,EAiHF,SAA2BA,GAC1B,IAAIoC,EAAS,IAAIvF,EAAK,SACtB,KACCuF,EAAS,IAAIvF,EAAKmD,EAAKpE,OAChBoB,IAAMgD,EAAKhD,KAAO,IACzBoF,EAAOnF,MAASnB,EAASkE,EAAK0B,YAAc,IAAO,IAEnD1B,EAAK4B,UAAY5B,EAAK4B,UAAU7H,QAAO,SAACf,EAAMyD,EAAO4F,GAAd,OACtC5F,IAAU4F,EAAKC,WAAU,SAACC,GACzB,OAAOA,EAAElB,IAAIlG,MAAM,OAAO,KAAOnC,EAAKqI,IAAIlG,MAAM,OAAO,IAAMoH,EAAEjB,OAAStI,EAAKsI,WAG/DtB,EAAK4B,UACXtE,SAAQ,SAAAtE,GAAS,IAAD,EACrB8D,EAAO9D,EAAKqI,IAAIlG,MAAM,OAC1BiH,EAAOxI,MAAM+C,KAAK,CAAC6F,EAAc1F,EAAK,IAAK9D,EAAKsI,KAA9B,UAAoCtI,EAAKuI,SAAzC,QAA8CkB,OAAO3F,EAAK,SAGzE,EAAC,EAAM,QAAQmF,SAASjC,EAAK9C,YAChCkF,EAAS1B,EAA0BgC,EAAoBN,IAEvDA,EAAOxI,MAAQwI,EAAOxI,MAAM8B,KAAI,SAAAC,GAAC,MAAI,CAACA,EAAE,GAAIA,EAAE,OAI9C,MAAOA,GAER,OADA/C,QAAQC,IAAI8C,GACL,IAAIkB,EAAK,mBAEjB,OAAOuF,EA9ICO,CAAkB3C,IAEV,QAAZtH,GAA4C,SAAvB,UAAAsH,EAAKlD,YAAL,eAAWpE,SAEnC,MADA,IAAI8E,EAAY,QAAS,gBAAgBI,UACnC,IAAIuE,MAAM,sBAKjB,MAHgB,YAAZzJ,GAAgD,SAAvB,UAAAsH,EAAKlD,YAAL,eAAWpE,WACvCsH,EAuFF,SAA+BA,GAC1BA,EAAKlD,KAAKK,oBACb6C,EAAKxG,YAAcwG,EAAKxG,YAAYkC,KAAI,SAAAkH,GAAU,MAAI,UACtD5C,EAAKT,QAAQjC,SAAQ,SAAAqC,GACpBA,EAAO,GAAKA,EAAO,GAAGjE,KAAI,SAAA1C,GACzB,MAAO,CAACwJ,EAAcxJ,EAAK,IAAKA,EAAK,WAKnCgH,EAAKlD,KAAKK,oBACd6C,EAAKpG,MAAQoG,EAAKpG,MAAM8B,KAAI,SAAA1C,GAE3B,OADAA,EAAK,GAAKwJ,EAAcxJ,EAAK,IACtBA,MAGT,OAAOgH,EAvGC6C,CAAsB7C,IAEvBA,EAmFR,IAAIwC,EAAgBvG,EAoDpB,SAASyG,EAAoB1C,GAC5B,IAAI8C,EAAUvC,KAAKC,MAAM,IAAQR,EAAKhD,KAClC+F,EAAW,IAAI1D,EAAaW,EAAKpE,KAAM,IAC3CmH,EAAS/F,IAAMgD,EAAKhD,IACpB+F,EAAS9F,MAAQ+C,EAAK/C,MAOtB,IANA,IAAIrD,EAAQoG,EAAKpG,MAGboJ,EAAY,GACZC,EAkDL,SAAsBrJ,EAAOsJ,GAC5B,IAAId,EAAS,GACb,KAAOxI,EAAM8C,OAAS,GAAG,CAGxB,IAFA,IAAIyG,EAAM,CAACvJ,EAAMwJ,SACbC,EAAS,EACJC,EAAI,EAAGA,EAAI1J,EAAM8C,OAAQ4G,IAC7BH,EAAI,GAAG,GAAKvJ,EAAM0J,GAAG,GAAKJ,GAAWG,IAE1CjB,EAAOzF,KAAP,UAAgBwG,EAAhB,YAAwBvJ,EAAM2J,OAAO,EAAGF,MAEzC,OAAOjB,EA5DOoB,CAAa5J,EAAOkJ,EAAU,GACxCW,EAAe,CAACX,EAASvC,KAAKC,MAAMsC,EAAU,GAAIvC,KAAKC,MAAMsC,EAAU,GAAIvC,KAAKC,MAAMsC,EAAU,IAVlE,WAWzBQ,GACR,IAAI3D,EAAS,IAAIC,EACjBD,EAAO/F,MAAQqJ,EAAQK,GAAG5H,KAAI,SAAA1C,GAC7B,IAAI0K,EAAa,IAAIvD,EAAWnH,EAAK,IAMrC,OALgB,IAAZA,EAAK,KAAU0K,EAAW9C,MAAQ,OACtB,IAAZ5H,EAAK,KAAU0K,EAAW9C,MAAQ,OACtB,IAAZ5H,EAAK,KAAU0K,EAAW9C,MAAQ,OACtB,IAAZ5H,EAAK,KAAU0K,EAAW9C,MAAQ,YACtB7C,IAAZ/E,EAAK,KAAkB0K,EAAW9C,MAAQ,OACvC8C,KAKR,IAHA,IACIC,GADOV,EAAQK,EAAI,IAAM,CAAC,CAAC,EAAG,EAAG,KACf,GAAG,GAAKL,EAAQK,GAAG,GAAG,GACxCM,EAAiB,GACdD,GAAcF,EAAa,IAC7BE,EAAaF,EAAa,IAAM,GACnCE,GAAcF,EAAa,GAC3BG,EAAejH,KAAK,IACVgH,EAAaF,EAAa,IAAM,GAC1CE,GAAcF,EAAa,GAC3BG,EAAejH,KAAK,IACVgH,EAAaF,EAAa,IAAM,GAC1CE,GAAcF,EAAa,GAC3BG,EAAejH,KAAK,IACVgH,EAAaF,EAAa,IAAM,IAC1CE,GAAcF,EAAa,GAC3BG,EAAejH,KAAK,IAGtB,IAAIkH,EAAe,GACnBlE,EAAOE,aAAe+D,EAAeR,SAAW,EAChDQ,EAAiBA,EAAetG,SAAQ,SAACwG,EAAKR,GAC7C,IAAI3D,EAAS,IAAIC,EACjBD,EAAOE,aAAeiE,EACtBD,EAAalH,KAAKgD,MAEnBqD,EAAUrG,KAAV,MAAAqG,EAAS,CAAMrD,GAAN,OAAiBkE,KApClBP,EAAI,EAAGA,EAAIL,EAAQvG,OAAQ4G,IAAM,EAAjCA,GAuCT,OADAP,EAASxD,QAAUyD,EACZD,E,IAEFnD,EACL,aAAe,oBACdhD,KAAKhD,MAAQ,GACbgD,KAAKiD,aAAe,G,IAgBhBM,EACL,WAAY1D,GAAuB,IAAhBmE,EAAe,uDAAP,MAAO,oBACjChE,KAAKH,MAAQA,EACbG,KAAKgE,MAAQA,GAGX9E,EAAW,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAC5E,SAASiI,EAAgB9G,GACxB,IAAIR,EAAQX,EAAS6F,QAAQ1E,GAE7B,OADIR,EAAQ,IAAGA,EAAQ,GAChBgG,OAAOlC,KAAKyD,IAAI,EAAGvH,EAAQ,IAAIwH,QAAQ,IA8B/C,SAASC,EAAQC,GACb,OAAO,IAAIC,SAAQ,SAAAC,GACfC,IAAwBD,EAASF,M,WCzazC,SAASI,EAAuB9H,GAC5B,IAAI+H,EAAyB,QAAZ9L,EAAoB,EAAI,EAGzC,MADa,CAAC,UAAU,UAAU,WADxB6H,KAAKC,MAAM/D,EAAQ+H,IAIjC,SAASC,EAAeC,GACpB,OAAO,qBACHC,UAAW7L,EAAWI,eACtByF,MAAO,CACHiG,UAAU,YAAD,OAAcF,EAAMG,aAApB,aACTC,YAAYP,EAAuBG,EAAMjI,UAgBtCsI,M,kDAzEX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,GAFE,E,0CAKnB,WAAU,IAAD,EACGN,EAAU9H,KAAV8H,MACA5H,EAA4C4H,EAA5C5H,KAAMmI,EAAsCP,EAAtCO,iBAAiBC,EAAqBR,EAArBQ,kBACvBC,EAAqCrI,EAArCqI,OAASN,EAA4B/H,EAA5B+H,aAAcjC,EAAc9F,EAAd8F,WAC3BgC,EAAY,CAAEQ,WAAW,oBAAD,QAAuBV,EAAMW,SAAS,KAAMpB,QAAQ,GAApD,uBACxBU,EAoDZ,SAAoBQ,GAChB,IAAIR,EAAY7L,EAAWE,KACZ,YAAXmM,IAAsBR,GAAa,gBACxB,YAAXQ,IAAsBR,GAAa,aACxB,gBAAXQ,IAA0BR,GAAa,sBAC5B,mBAAXQ,IAA6BR,GAAa,+BAC/B,mBAAXQ,IAA6BR,GAAa,+BAC/B,qBAAXQ,IAA+BR,GAAa,iCAChD,OAAOA,EA5DaW,CAAWH,GACvBrL,GAAU,UAAAJ,EAAgBkJ,UAAhB,eAA6B9I,UAAW,GACtD,OAAO,yBACHyL,cAAe,SAAC5J,GACZA,EAAE6J,iBACFd,EAAMe,YAAY3I,IAEtB6H,UAAU,uBALP,UAOFM,EAAiBvJ,KAAI,SAAC1C,GACnB,OAAO,cAACyL,EAAD,CAEHhI,MAAOK,EAAKL,MACZoI,aAAcA,GAFT7L,EAAKkG,OAKjBgG,EAAkBxJ,KAAI,SAAAC,GACnB,OAAO,qBAEHgJ,UAAW7L,EAAWG,eADjB0C,EAAE0F,QAIf,sBAAKsD,UAAWA,EAAWhG,MAAOiG,EAAlC,UACI,qBACIc,UAAU,QACVC,IAAI,GACJC,IAAKlB,EAAMmB,UACXlH,MAAO7E,IAEX,qBAAK6K,UAAW7L,EAAWK,SAA3B,SACKuL,EAAMoB,qB,GAzCRC,a,SCFNC,GAAYC,aAAW,CAChCnJ,KAAM,CACFkD,KAAM,GACNkG,UAAW,GACX7J,MAAO,K,gBCIT8J,G,kDACF,WAAYzB,GAAQ,IAAD,uBACf,cAAMA,IAoEV0B,gBArEmB,uCAqED,WAAOpG,GAAP,iBAAAqG,EAAA,sDACVzM,EAAQ,GACZ,EAAKiL,aAAe,EAAKH,MAAM5H,KAAK+H,cAAgB,KAChDyB,EAAa,EAAKzB,aACtB7E,EAAKpG,MAAM0D,SAAQ,SAAAtE,GACf,IAAIiH,EAAM,CACNqB,KAAMf,KAAKC,MAAMxH,EAAK,GAAK,EAAKgM,MAAMuB,aAAa1K,MAAQyK,GAC3D7J,MAAOzD,EAAK,IAEhBY,EAAM+C,KAAKsD,MAEf,EAAKuG,SAAS,CACVvB,iBAAkBnF,EAAuB,QAAZpH,EAAoB,GAAK,IACtD+N,iBAAkB,CACdC,QAAS,EACTC,MAAO,EACPC,MAAO,EACPC,MAAO,KAGf,EAAKC,kBAAkB,EAAGlN,EAAM8C,QAChC,EAAKqK,qBAAuBnN,EArBd,2CArEC,wDA6FnBoN,KAAO,WACH,GAAK,EAAKtC,MAAM5H,KAAKmK,QAArB,CACA,MAA0E,EAAKjC,MAAvEC,EAAR,EAAQA,iBAAkBiC,EAA1B,EAA0BA,YAAaT,EAAvC,EAAuCA,iBAAmBF,EAA1D,EAA0DA,aACtDY,EAAalC,EACbrL,EAAQ,EAAKmN,qBACjBnN,EAAM0D,SAAQ,SAAAtE,GACVA,EAAKsI,MAAQ,EAAK8F,YAItB,IAFA,IAAIC,GAAa,EACbC,EAAU,EACLhE,EAAI,EAAGA,EAAI1J,EAAM8C,QAClB9C,EAAM0J,GAAGhC,KAAO,EAAKuD,aADKvB,IAE1B6D,EAAWvN,EAAM0J,GAAG7G,OAAOE,KAAK,CAC5B4K,SAAS,EACTjG,KAAM,EAAKuD,aACX3F,GAAIqB,KAAKC,MAAsB,IAAhBD,KAAKiH,YAExB5N,EAAM2J,OAAOD,EAAG,GAChBA,IACA+D,GAAa,EAKrBF,EAAW7J,SAAQ,SAAAtE,GACf,IAAK,IAAIsK,EAAI,EAAGA,EAAItK,EAAK0D,OAAQ4G,IAAK,CAClC,IAAImE,EAASzO,EAAKsK,GAClBmE,EAAOnG,MAAQ,EAAK8F,SAChBK,EAAOF,UACHE,EAAOnG,KAAO,EAAKuD,aAAe,GAClC4B,EAAiBC,UACjBD,EAAiBI,QACjBJ,EAAiBG,OAASH,EAAiBI,MAAQN,EAAa1K,QAEhE4K,EAAiBE,QACjBF,EAAiBI,MAAQ,GAE7BY,EAAOnG,MAAQ,GAEfmG,EAAOnG,KAAO,IACTmG,EAAOF,UACRd,EAAiBE,QACjBF,EAAiBI,MAAQ,GAE7B7N,EAAKuK,OAAOD,EAAG,GACfA,IACA+D,GAAa,EACbC,SAIPD,IACL,EAAKP,kBAAkBI,EAAYQ,SAAWJ,GAC9C,EAAKd,SAAS,CACVvB,iBAAkBkC,EAClBV,iBAAkBA,OApJP,EAwJnBkB,SAxJmB,uCAwJR,WAAO3H,GAAP,2CAAAqG,EAAA,yDAAahK,EAAb,+BAAqB,EAC5B,EAAKuL,cAAgB5H,EAAK6H,UAClBC,EAAa,EAAK9C,MAAlB8C,SAEa,KADjBlO,EAAQ,EAAKmO,iBAAiB/H,EAAKpG,QAC7B8C,OAJH,iDAKHsL,EAAWpO,EAAM,GAAG,GACpBqO,EAAY,EACZC,GAAe,IAAI5L,MAAOC,UACrB+G,EAAIjH,EARN,aAQaiH,EAAI1J,EAAM8C,QARvB,oBASCyL,EAAQvO,EAAM0J,GAAG,GAAK0E,EAC1BA,EAAWpO,EAAM0J,GAAG,GAChBtK,EAAOY,EAAM0J,GAAG,GACpB4E,GAAe,IAAI5L,MAAOC,YACtB4L,EAAQ,IAbT,kCAamBjE,EAAQiE,EAAQF,GAbnC,WAcC,EAAKL,gBAAkB5H,EAAK6H,UAd7B,mDAeHC,EAAS9O,GAAMmM,OAAS,UACxB,EAAKM,YAAYqC,EAAS9O,IAC1B,EAAKwN,SAAS,CACVsB,WACAZ,YAAa,CACTQ,SAAUpE,EAAE,EACZ8E,KAAMxO,EAAM8C,UAGpBuL,GAAY,IAAI3L,MAAOC,UAAY2L,EAAeC,EAxB/C,QAQ+B7E,IAR/B,4DAxJQ,wDAoLnByE,iBAAmB,SAACnO,GAChB,OAAOA,EAAM8B,KAAI,SAAA1C,GAEb,OADAA,EAAK,GAAKA,EAAK,GAAK,EAAKgM,MAAMuB,aAAa1K,MACrC7C,MAvLI,EA0LnBqP,aAAe,SAACrI,GAAqB,IAAf3D,EAAc,uDAAN,EAClByL,EAAa,EAAK9C,MAAlB8C,SACJlO,EAAQ,EAAKmO,iBAAiB/H,EAAKpG,OACnC0O,EAAa1O,EAAM8C,OACvB9C,EAAM2J,OAAO,EAAGlH,GAEhB,IADA,IAAIkM,EAAS,GACJjF,EAAI,EAAG1J,EAAM8C,OAAS,EAAG4G,IAAK,CAMnC,IALA,IAAIkF,EAAQ,CACR5O,MAAO,CAACA,EAAMwJ,SACd+E,MAAO,GAEPM,EAAYD,EAAM5O,MAAM8C,OAAS,EAAI8L,EAAM5O,MAAM,GAAG,GAAK,EACpD8O,EAAI,EAAGA,EAAI9O,EAAM8C,QAAUgM,EAAI,GAAIA,IAAK,CAC7C,IAAI/E,EAAa/J,EAAM8O,GAAG,GAAKF,EAAM5O,MAAM,GAAG,GAAK,GAC/C+J,EAAa,IACb6E,EAAM5O,MAAM+C,KAAK/C,EAAMwJ,SACvBsF,KAGRF,EAAML,MAAQvO,EAAM8C,OAAS,EAAI9C,EAAM,GAAG,GAAK6O,EAAY,EAC3DF,EAAO5L,KAAK6L,GAEhB,GAAsB,IAAlBD,EAAO7L,OAAX,CACA,IAAIiM,EAAaJ,EAAO,GACxB,EAAKK,eAAiBD,EAAWR,MACjC,IAAIU,EAAcN,EAAO,GACzBI,EAAW/O,MAAM0D,SAAQ,SAAAtE,GAAU8O,EAAS9O,EAAK,IAAImM,OAAS,aACnD,OAAX0D,QAAW,IAAXA,KAAajP,MAAM0D,SAAQ,SAAAtE,GACvB,IAAI8P,EAAehB,EAAS9O,EAAK,IACjC,GAA4B,YAAxB8P,EAAa3D,OAAsB,OAAO2D,EAAa3D,OAAS,iBACpE2D,EAAa3D,OAAS,iBAE1B,EAAKT,MAAMqE,UAAUC,YAAW,GAChC,EAAKxC,SAAS,CACVyC,eAAgBV,EAChBT,WACAZ,YAAa,CACTQ,SAAUrL,EACV+L,KAAME,OAhOC,EAoOnBY,mBAAqB,SAACrN,GAClB,IAAIsD,EAAU1D,EAAc0N,MAAK,SAAAxN,GAAC,OAAIA,EAAEC,OAASC,KACjD,EAAK2K,SAAS,CACVD,aAAcpH,GAChB,EAAKiK,cAxOQ,EA0OnBA,YA1OmB,sBA0ON,4BAAA/C,EAAA,6DACLgD,EAAgBtI,KAAKC,MAAMD,KAAKE,UAAU+E,GAAUlJ,OAD/C,SAEH,EAAKwM,WAFF,OAGTC,YAAW,WACP,IAAIlN,EAAQ2J,GAAUlJ,KAAKT,MACM,aAA7B2J,GAAUlJ,KAAKoJ,YACf7J,EAAQ,EAAK2I,MAAMkC,YAAYQ,UAEnC1B,GAAUlJ,KAAV,2BACOuM,GADP,IAEIhN,YAEL,KAZM,2CA1OM,EAwPnBiN,SAAW,WACP,OAAO,IAAIlF,SAAQ,SAAAoF,GACf,EAAK5B,cAAgB,EACrB,IAAQE,EAAa,EAAK9C,MAAlB8C,SACRA,EAASxK,SAAQ,SAAAtE,GACbA,EAAKmM,OAAS,GACdnM,EAAKmP,MAAQ,OAEjB,EAAKpB,qBAAuB,GAC5B,EAAKP,SAAS,CACVsB,WACAmB,eAAgB,GAChBhE,iBAAkBnF,EAAuB,QAAZpH,EAAoB,GAAK,KACvD8Q,GAEH,EAAK9E,MAAMqE,UAAUC,YAAW,OAvQrB,EA2QnBS,kBAAoB,SAAC3L,GACjB,EAAKgJ,kBAAkBrE,OAAO3E,EAAM4L,OAAO7N,SA5Q5B,EA8QnBiL,kBA9QmB,uCA8QC,WAAOY,GAAP,2BAAArB,EAAA,sDAAiB+B,EAAjB,+BAAwB,EAAKpD,MAAMkC,YAAYkB,KAC/D,EAAK5B,SAAS,CACVU,YAAa,CACTQ,WACAU,UAJQ,2CA9QD,wDAsRnBuB,eAAiB,SAAC7L,GAAW,IAAD,EAChBgK,EAAa,EAAK9C,MAAlB8C,SACR,IAAIhK,EAAM8L,QAC6B,UAAnCnL,SAASoL,cAAcC,QAA3B,CACA,IAAIC,EAAI,UAAGjM,EAAMiM,YAAT,aAAG,EAAYC,QAAQ,MAAO,IAElChR,EAAO8O,EADC,EAAKpD,MAAM5H,KAAKgL,SAASmC,gBAAgBF,IAEjD/Q,GAAM,EAAKyM,YAAYzM,KA7RZ,EAgSnBkR,oBAAsB,SAAClR,GACnB,IACImR,EADyB,EAAKnF,MAA1BC,iBAC+BjM,EAAKyD,OAAO,GACnD,OAAI0N,IACAA,EAAgB5C,SAAU,EACvB4C,EAAgB7I,KAAO,EAAKuD,aAAe,GAAU,mBAErD,kBAvSQ,EAySnBuF,oBAAsB,SAACpR,GACnB,MAAkD,EAAKgM,MAA/C8C,EAAR,EAAQA,SAAUmB,EAAlB,EAAkBA,eAAgB/B,EAAlC,EAAkCA,YAClC,GAAI+B,EAAevM,OAAS,EAAG,CAAC,IAAD,EACvB2N,EAAY,UAAGpB,EAAe,UAAlB,aAAG,EAAmBrP,MAAM0I,WAAU,SAAA3G,GAAC,OAAIA,EAAE,KAAO3C,EAAKyD,SACzE,IAAsB,IAAlB4N,EAAqB,CAGrB,GAFApB,EAAe,GAAGrP,MAAM2J,OAAO8G,EAAc,GACN,IAAnCpB,EAAe,GAAGrP,MAAM8C,QAAcuM,EAAe7F,QAC3B,IAA1B6F,EAAevM,OACf,EAAK4M,WACLtD,GAAUlJ,KA2KnB,CACHkD,KAAM,GACNkG,UAAW,OACX7J,MAAO,OA7KQ,CACH,IAAIiO,EAAYrB,EAAe,GAC3BsB,EAAgBtB,EAAe,GACnCqB,EAAU1Q,MAAM0D,SAAQ,SAAAtE,GACpB8O,EAAS9O,EAAK,IAAImM,OAAS,aAE/B,EAAKyD,eAAiB0B,EAAUnC,MACnB,OAAboC,QAAa,IAAbA,KAAe3Q,MAAM0D,SAAQ,SAAAtE,GACzB,IAAI8P,EAAehB,EAAS9O,EAAK,IAEjC,GADA8O,EAAS9O,EAAK,IAAImP,MAAQmC,EAAUnC,MACR,YAAxBW,EAAa3D,OAAsB,OAAO2D,EAAa3D,OAAS,iBACpE2D,EAAa3D,OAAS,iBAG9B,EAAKqB,SAAS,CACVyC,eAAgBA,EAChB/B,YAAa,CACTkB,KAAMlB,EAAYkB,KAClBV,SAAUR,EAAYQ,SAAW,QArUlC,EA2UnBjC,YAAc,SAACzM,EAAMwR,GACjB,MAAuC,EAAKxF,MAApC8C,EAAR,EAAQA,SAAU5C,EAAlB,EAAkBA,kBACZuF,EAAe,EAAK/F,MAAM5H,KAAK2N,aACrC3C,EAAS9O,EAAKyD,OAAO0I,OAAS,UAC9B2C,EAAS9O,EAAKyD,OAAO0L,MAAQ,IAC7B,EAAKiC,oBAAoBpR,GACzB,IAAI0R,EAAiB,EAAKR,oBAAoBlR,GAI9C,GAHgC,gBAA7BgN,GAAUlJ,KAAKoJ,YACd4B,EAAS9O,EAAKyD,OAAO0I,OAASuF,GAE/BD,GAA4C,gBAA5BzE,GAAUlJ,KAAKoJ,UAA2B,CACzD,IAAI7E,EAAMd,KAAKC,MAAsB,IAAhBD,KAAKiH,WAAoB,IAAIlL,MAAOC,UACzD2I,EAAkBlM,EAAKyD,OAAOE,KAAK,CAAC0E,QAExC,EAAKmF,SAAL,aAAgBsB,YACR2C,EAAcvF,EAAoB,KACxC,WACEqE,YAAW,WACP,GAAIkB,GAA6C,gBAA7BzE,GAAUlJ,KAAKoJ,UAAnC,CACA,IAAOhB,EAAqB,EAAKF,MAA1BE,kBACPA,EAAkBlM,EAAKyD,OAAO2G,QAC9B,EAAKoD,SAAS,CAACtB,yBACjB,QAENqE,YAAW,WACF,CAAC,UAAU,iBAAiB,oBAAoBtH,SAAS6F,EAAS9O,EAAKyD,OAAO0I,UACnF2C,EAAS9O,EAAKyD,OAAO0I,OAAS,GAC9B,EAAKqB,SAAS,CAAEsB,gBACN,QAAZpP,EAAoB,IAAM,KAC5B,EAAKgM,MAAMqE,UAAU4B,UAAU3R,IAtW/B,IAAI4R,EAAe,EAAKlG,MAAM5H,KAAKgL,SAFpB,OAGf8C,EAAaC,OAAOvN,SAAQ,SAAAtE,GAAUA,EAAKmM,OAAS,MACpD,EAAKH,MAAQ,CACT8F,eAAe,IAAIxO,MAAOC,UAC1B0M,eAAgB,GAChBhE,iBAAkBnF,EAAuB,QAAZpH,EAAoB,GAAK,IACtDwM,kBAAmBpF,EAAuB,QAAZpH,EAAoB,GAAK,IACvDoP,SAAU8C,EAAaC,OACvB3D,YAAa,CACTQ,SAAU,EACVU,KAAM,GAEV3B,iBAAkB,CACdC,QAAS,EACTC,MAAO,EACPC,MAAO,EACPC,MAAO,GAEpBN,aAAc9K,EAAc0N,MAAK,SAAAxN,GAAC,MAAe,OAAXA,EAAEC,SAEnC,EAAKiJ,aAAe,KACpB,EAAKkC,qBAAuB,GAC5B,EAAKa,cAAgB,EACrB,EAAKgB,eAAiB,EACtB,EAAKmC,aAAe,aACpB,EAAK3D,SAAW,GAChB,EAAK4D,aAAe,EA5BL,E,qDA+BnB,WAAqB,IAAD,OAChB3R,OAAO4R,iBAAiB,UAAWrO,KAAK+M,gBACxC/M,KAAKoO,aAAeE,YAAYtO,KAAKoK,KAAMpK,KAAKwK,UAChDxK,KAAKmO,aAAeI,aAAQnF,GAAD,uCAAY,WAAOlJ,GAAP,uBAAAuJ,EAAA,yDAC/BxK,EAAQiB,EAAKsO,OAAOtO,KACpBqB,EAAOtC,EAAMqK,UACbmD,EAAgBtI,KAAKC,MAAMD,KAAKE,UAAUpF,EAAMmE,QACpD,UAAIqJ,EAAcvM,YAAlB,aAAI,EAAoBK,qBACpBkM,EAAgBjJ,EAAoBiJ,IAExCA,EAAcxB,WAAY,IAAIvL,MAAOC,UACjC0K,GAAU,EACD,SAAT9I,EAT+B,iCAUzB,EAAKmL,WAVoB,OAW/B,EAAK3B,SAAS0B,EAAexN,EAAMQ,OACnC4K,GAAU,EAZqB,WActB,aAAT9I,EAd+B,kCAezB,EAAKmL,WAfoB,QAgB/B,EAAKjB,aAAagB,EAAexN,EAAMQ,OACvC4K,GAAU,EAjBqB,WAmBtB,gBAAT9I,EAnB+B,kCAoBzB,EAAKmL,WApBoB,QAqB/B,EAAKlD,gBAAgBiD,EAAexN,EAAMQ,OAC1C4K,GAAU,EAtBqB,WAwBtB,SAAT9I,EAxB+B,kCAwBR,EAAKmL,WAxBG,QAyBnC,EAAK5E,MAAMqE,UAAUC,WAAW/B,GAzBG,4CAAZ,yD,kCA4B/B,WACI5N,OAAOgS,oBAAoB,UAAWzO,KAAK+M,gBAC3C/M,KAAKmO,eACLnO,KAAKgL,cAAgB,EACrB0D,cAAc1O,KAAKoO,gB,oBAwSvB,WAAU,IAAD,OACGhG,EAAiBpI,KAAjBoI,MACAlI,EADiBF,KAAV8H,MACP5H,KACAgL,EAA+B9C,EAA/B8C,SAAUrB,EAAqBzB,EAArByB,iBACd2B,EAAOtL,EAAKyO,aAAe,IAC3BnD,EAAO,KAAKA,EAAO,IACnBA,EAAO,MAAKA,EAAO,KACvB,IAAIoD,EAAgB,WAGpB,OAFwB,KAApB1D,EAASpL,SAAe8O,GAAiB,eACrB,IAApB1D,EAASpL,SAAc8O,GAAiB,eACrC,qCACF1O,EAAKmK,SACF,sBAAKtC,UAAU,cAAf,UACkC,gBAA7BqB,GAAUlJ,KAAKoJ,WACZ,cAACuF,GAAD,CAAO3O,KAAM2J,IAGjB,sBAAK9B,UAAU,iBAAf,UACI,wBAAQA,UAAU,cAAc+G,QAAS,WACrC,EAAKpC,WACLtD,GAAUlJ,KA+F3B,CACHkD,KAAM,GACNkG,UAAW,OACX7J,MAAO,IApGS,SAKI,cAAC,KAAD,CAAiBsP,KAAMC,SAE3B,uBACIzN,KAAK,QACLwG,UAAU,SACVkH,IAAK,EACLC,SAAUlP,KAAK6M,kBACfsC,IAAK/G,EAAMkC,YAAYkB,KACvBvM,MAAOmJ,EAAMkC,YAAYQ,WAE7B,wBAAQ/C,UAAU,cAAc+G,QAAS,WACrC,EAAKtC,eADT,SAGI,cAAC,KAAD,CAAiBuC,KAAMK,SAE3B,yBACIrH,UAAU,gBACVmH,SAAU,SAACnQ,GAAD,OAAO,EAAKuN,mBAAmBvN,EAAE+N,OAAO7N,QAClDA,MAAOmJ,EAAMuB,aAAa3K,KAH9B,UAKI,wBAAQqQ,UAAQ,EAAhB,mBACCxQ,EAAcC,KAAI,SAAAC,GACf,OAAO,wBAAQE,MAAOF,EAAEC,KAAjB,SACFD,EAAEC,MAD4BD,EAAEC,kBAQzD,qBACI+I,UAAW6G,EACX7M,MAAO,CACHuN,UAAU,SAAD,OAAW9D,EAAX,KACT+D,aAAqB,GAAP/D,EAAY,IAJlC,SAOKtL,EAAKsP,UACA,qBAAKzH,UAAU,UAAf,wBAEAmD,EAASpM,KAAI,SAAA1C,GACX,IAAI6M,EAAY3J,EAAa4L,EAASpL,QAAQ1D,EAAKyD,OAC/C4P,EAAQ,2BACLrT,GADK,IAER6L,aAAa,EAAKA,aAClBjC,WAAY,EAAK8B,MAAM5H,KAAKgL,SAASwE,eACrCC,WAAyC,gBAA7BvG,GAAUlJ,KAAKoJ,WAAsC,EAAKxB,MAAM5H,KAAK2N,eAErF,OAAO,cAAC,EAAD,CAEH3N,KAAMuP,EACNpH,iBAAkBD,EAAMC,iBAAiBjM,EAAKyD,OAC9CyI,kBAAmBF,EAAME,kBAAkBlM,EAAKyD,OAChDgJ,YAAa,EAAKA,YAClBK,SAAU0G,GAAY1P,EAAK2P,aAAczT,EAAKyD,MAAOK,EAAKG,MAAO6K,EAASpL,QAC1EmJ,UAAS,8BAAyBA,EAAzB,SANJ7M,EAAKyD,mB,GAnbfsJ,aAqcvB,SAAS0F,GAAM/G,GACX,MAAwCA,EAAM5H,KAAtC+J,EAAR,EAAQA,MAAOD,EAAf,EAAeA,MAAOF,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,MAC/B,OAAO,qBAAKhC,UAAU,uBAAf,SACH,gCACI,kCACI,+BACI,oBAAIA,UAAU,OAAd,sBACA,qBAAIA,UAAU,OAAd,WAAuB+B,GAAWA,EAAUC,EAAQ,GAAK,KAAM1C,QAAQ,GAAvE,UAEJ,+BACI,oBAAIU,UAAU,OAAd,mBACA,oBAAIA,UAAU,OAAd,SAAsBiC,OAE1B,+BACI,oBAAIjC,UAAU,OAAd,mBACA,oBAAIA,UAAU,OAAd,SAAsBkC,cAiB1C,SAAS2F,GAAYC,EAAchQ,EAAOQ,EAAOyP,GAC7C,IACI,GAAqB,cAAjBD,EAA8B,OAAOnR,EAAS5C,GAASoD,EAAS6F,QAAQ1E,IAAQR,GACpF,GAAqB,oBAAjBgQ,EAAoC,OAAOxR,EAAWyR,GAAcxR,eAAeuB,GACvF,GAAqB,aAAjBgQ,EAA6B,OAAOxR,EAAWyR,GAActR,aAAaqB,GAChF,MAAOd,IACT,MAAO,GAEIwK,U,8DCtfA,OAA0B,qCCA1B,OAA0B,qCCA1B,OAA0B,kCCOlC,SAASwG,KACZ,OAAO,qCACH,qBAAKhI,UAAU,aAAf,uBAGA,gCACI,qBAAKiB,IAAKgH,GAAajI,UAAU,WAAWgB,IAAI,+BAChD,+BACI,sEACA,oFACA,gDACA,2DACA,6FAGR,qBAAKhB,UAAU,aAAf,wBAGA,gCACI,qBAAKiB,IAAKiH,GAAUlI,UAAU,WAAWgB,IAAI,4BAC7C,+BACI,gEACA,uDACA,4DACA,mDACA,wEACA,gEAEJ,sBAAKhB,UAAU,SAAf,UACI,gCACI,cAAC,KAAD,CAAiBgH,KAAMmB,OAD3B,0BAGA,gCACI,cAAC,KAAD,IADJ,iCAGA,gCACI,cAAC,KAAD,CAAiBnB,KAAMoB,OAD3B,gCAMR,qBAAKpI,UAAU,aAAf,sBAGA,gCACI,qBAAKiB,IAAKoH,GAAarI,UAAU,WAAWgB,IAAI,0BAChD,+BACI,sEACA,6DACA,gDACA,2DACA,oEACA,kEACA,2DACA,6DAEJ,qBAAKhB,UAAU,aAAf,gCAGA,qBAAKhG,MAAO,CAACsO,UAAU,UAAvB,sDAGA,uBAAOtI,UAAU,aAAjB,SACI,kCACI,+BACI,6BAAI,cAACuI,GAAD,sBAAqB,yDAE7B,+BACI,6BAAI,cAACA,GAAD,8BAA6B,oDAErC,+BACI,6BAAI,cAACA,GAAD,0BAAyB,yDAEjC,+BACI,6BAAI,cAACA,GAAD,2BAA0B,iEAElC,+BACI,6BAAI,cAACA,GAAD,4BAA2B,6DAEnC,+BACI,6BAAI,cAACA,GAAD,yBAAwB,6DAEhC,+BACI,6BAAI,cAACA,GAAD,2BAA0B,0DAElC,+BACI,6BAAI,cAACA,GAAD,6BAA4B,yEAEpC,+BACI,6BAAI,cAACA,GAAD,kBAAiB,6DAEzB,+BACI,6BAAI,cAACA,GAAD,kBAAiB,wDAhDrC,2EA0DR,SAASA,GAAIxI,GACT,OAAO,qBAAKC,UAAU,eAAf,SACFD,EAAMyI,W,IClGTC,G,kDACF,WAAY1I,GAAQ,IAAD,8BACf,cAAMA,IAeV2I,uBAhBmB,sBAgBM,4BAAAhH,EAAA,0DACjBiH,UAAUC,UAAWD,UAAUC,QAAQC,QADtB,gCAEOF,UAAUC,QAAQE,YAFzB,UAEbC,EAFa,uCAGoBJ,UAAUC,QAAQC,UAHtC,OAGAE,EAHA,cAIjB,EAAKlH,SAAS,CAACmH,oBAAqBD,IAJnB,2CAhBN,EAuBnBE,kBAAoB,SAAClQ,GACjB,EAAK8I,SAAS,CACVqH,YAAanQ,KAzBF,EA4BnBoQ,YAAc,WACV,EAAKtH,SAAS,CACVqH,YAAa,GACbE,cAAc,GACdC,aAAc,oCAhCH,EAmCnBC,YAnCmB,sBAmCL,gCAAA5H,EAAA,2DAC4B,EAAKrB,MAAnC6I,EADE,EACFA,YACY,iBAFV,EACWG,aADX,oDAGuB,IAA9BH,EAAYK,OAAOxR,OAHZ,yCAIC,EAAK8J,SAAS,CACjBwH,aAAc,mCALZ,cAQV,EAAKxH,SAAS,CACVwH,aAAc,iBATR,SAWeG,MAAM,oDAAoDC,UAAUP,IAAcQ,MAAK,SAAAvR,GAAI,OAAIA,EAAKwR,UAXnH,YAWNC,EAXM,QAYMC,MAZN,wBAaN,EAAKhI,SAAS,CACVwH,aAAc,kCAdZ,kBAgBC,IAAIxQ,EAAY,QAAS+Q,EAAaC,OAAO5Q,WAhB9C,QAkBV,EAAK4I,SAAS,CACVuH,cAAeQ,EACfP,aAAc,YApBR,4CAnCK,EA0DnBS,WAAa,SAACC,GACc,mBAAbA,IAAwBA,OAAW3Q,GAC9C,IAAI4Q,OAAwB5Q,IAAb2Q,EAAyBA,GAAY,EAAK1J,MAAM4J,KAC/D,EAAKpI,SAAS,CACVoI,KAAMD,KA9DK,EAiEnBE,eAAiB,SAACC,GACd,GAAIA,IAAc,EAAK9J,MAAM+J,cAAgB,EAAK/J,MAAM4J,KACpD,OAAO,EAAKpI,SAAS,CACjBoI,MAAM,IAGd,EAAKd,cACL,EAAKtH,SAAS,CACVuI,aAAcD,EACdF,MAAM,KA1EK,EA6EnBI,uBAAyB,SAACpT,GACtB,EAAK4K,SAAS,CACVyI,iBAAkBrT,KA/EP,EAkFnBsT,WAAa,SAAC7Q,GACV,IAAM8Q,EAAS,IAAIC,WACnBD,EAAOlE,iBAAiB,OAAxB,uCAA+B,WAAOnN,GAAP,yBAAAuI,EAAA,+DAEnBgJ,EAAatO,KAAKC,MAAMlD,EAAM4L,OAAOtH,QAErC3C,MAAMuC,QAAQqN,KAAaA,EAAa,CAACA,IAJtB,eAKPA,GALO,gEAMnBrP,EAAO+B,EADH/B,EALe,mBAOb,EAAK0E,MAAMqE,UAAUuG,QAAQtP,GAPhB,oMAUnBuP,EAAWlR,EAAKzC,KACpBhD,QAAQ4V,MAAR,QAXuB,OAYpBe,QAZoB,IAYpBA,GAZoB,UAYpBA,EAAUtN,gBAZU,aAYpB,OAAAsN,EAAqB,SAZD,0CAaZ,IAAI/R,EAAY,QAAS,iDAAiDI,WAb9D,QAevB,IAAIJ,EAAY,QAAS,wBAAwBI,UAf1B,uEAA/B,uDAmBAuR,EAAOK,WAAWnR,IAvGH,EAyGnBoR,aAAe,SAACzP,GACRA,EAAK0P,YAAY1P,EAAK0P,IAC1B,IAAIC,EAAW3P,EAAKpE,KACL,QAAZlD,IAECsH,EAAOa,EAAoBb,IAE3BP,MAAMuC,QAAQhC,KAAOA,EAAO,CAACA,IACjCA,EAAK1C,SAAQ,SAAAsS,GACTA,EAAM9S,KAAKpE,QAAUA,KAEzB,IAAI4V,EAAOvN,KAAKE,UAAUjB,IACL,IAAI9B,GACVE,SAASkQ,EAAxB,UAAgCqB,EAAhC,YAA4CjX,EAAQmX,cAApD,eACA,IAAIrS,EAAY,UAAW,mBAAmBI,WAvH/B,EA0HnBkS,iBAAmB,WACf,IAAIC,EAAa,GACjB,EAAKrL,MAAM5H,KAAKkT,MAAM1S,SAAQ,SAAA0C,GACtBA,EAAK0P,YAAY1P,EAAK0P,IACX,QAAZhX,IACCsH,EAAOa,EAAoBb,IAE/BP,MAAMuC,QAAQhC,GAAQ+P,EAAWpT,KAAX,MAAAoT,EAAU,YAAS/P,IAAQ+P,EAAWpT,KAAKqD,MAErE,IAAIiQ,EAAiB,IAAI/R,EACrBoQ,EAAOvN,KAAKE,UAAU8O,GACtBG,GAAO,IAAI5T,MAAO6T,cAAchV,MAAM,KAAK,GAC/C8U,EAAe7R,SAASkQ,EAAxB,UAAgC5V,EAAhC,mBAAkDwX,EAAlD,UACA,IAAI1S,EAAY,UAAW,0BAA0BI,WArIrD,EAAKoH,MAAQ,CACT4J,MAAM,EACNG,aAAc,QACdE,iBAAkB,WAClBpB,YAAY,GACZE,cAAc,GACdC,aAAc,iCACdL,qBAAqB,GATV,E,qDAYnB,WACI/Q,KAAKyQ,2B,oBA6HT,WAAU,IAAD,OACD+C,EAAYxT,KAAKoI,MAAM4J,KAAO,sBAAwB,YAC1D,EAA4BhS,KAAK8H,MAAzB5H,EAAR,EAAQA,KAAMiM,EAAd,EAAcA,UACNsH,EAAwBtH,EAAxBsH,oBACRtH,EAAU0F,WAAa7R,KAAK6R,WAC5B1F,EAAU0G,aAAe7S,KAAK6S,aAC9B,IAAIa,EAAa1T,KAAK8H,MAAMqE,UAAUuH,WAClCN,EAAQlT,EAAKkT,MAAMjW,QAAO,SAAAiG,GAAI,OAAKA,EAAKlD,KAAKK,qBAC7CoT,EAAgBzT,EAAKkT,MAAMjW,QAAO,SAAAiG,GAAI,OAAIA,EAAKlD,KAAKK,qBACxD,EAAuDP,KAAKoI,MAApDgJ,EAAR,EAAQA,aAAeD,EAAvB,EAAuBA,cAAegB,EAAtC,EAAsCA,aAClCyB,EAAwB,CACxBtB,WAAYnG,EAAUuG,SAE1B,OAAO,sBAAK3K,UAAU,eAAf,UACH,sBAAKA,UAAU,oBAAf,UACK/H,KAAKoI,MAAM4J,MAAQ,cAAC6B,GAAD,CAAWC,OAAQ9T,KAAK6R,aAC5C,cAAC,GAAD,CAAUtQ,KAAK,OAAOuS,OAAQ9T,KAAKiS,eAAgBlK,UAAU,kBAA7D,SACI,cAAC,KAAD,CAAiBgH,KAAMgF,KAAQhM,UAAU,WAE7C,cAAC,GAAD,CAAUxG,KAAK,UAAUuS,OAAQ9T,KAAKiS,eAAtC,SACI,cAAC,KAAD,CAAgBlK,UAAU,WAE9B,cAAC,GAAD,CAAUxG,KAAK,QAAQuS,OAAQ9T,KAAKiS,eAApC,SACI,cAAC,KAAD,CAAiBlD,KAAMiF,KAASjM,UAAU,WAE9C,cAAC,GAAD,CAAUxG,KAAK,WAAWuS,OAAQ9T,KAAKiS,eAAvC,SACI,cAAC,KAAD,CAAiBlD,KAAMkF,KAAOlM,UAAU,WAG5C,cAAC,GAAD,CAAUxG,KAAK,WAAWuS,OAAQ,kBAAMJ,EAAW,aAAnD,SACI,cAAC,KAAD,CAAiB3E,KAAMmF,KAAenM,UAAU,cAGxD,sBAAKA,UAAWyL,EAAhB,UACI,cAACW,GAAD,CAAWtT,MAAM,eAAeuT,QAASjC,IAEzC,eAACgC,GAAD,CAAWtT,MAAM,QAAQuT,QAASjC,EAAlC,UACI,sBAAKpK,UAAU,wBAAf,UACI,wBAAQA,UAAU,iBACd+G,QAAS,kBAAM4E,EAAW,aAD9B,0BAKA,cAAC,cAAD,CACIxE,SAAU,SAACzN,GAAD,OAAU,EAAK6Q,WAAW7Q,IADxC,SAGI,wBAAQsG,UAAU,iBAAlB,8BAMR,sBAAKA,UAAU,uBAAf,UACI,wBACIA,UAA2C,aAAhC/H,KAAKoI,MAAMiK,iBAAkC,4BAA8B,eACtFvD,QAAS,kBAAM,EAAKsD,uBAAuB,aAF/C,sBAMA,wBACIrK,UAA2C,aAAhC/H,KAAKoI,MAAMiK,iBAAkC,4BAA8B,eACtFvD,QAAS,kBAAM,EAAKsD,uBAAuB,aAF/C,yBAOJ,qBAAKrK,UAAU,gBAAf,SACqC,aAAhC/H,KAAKoI,MAAMiK,iBACNe,EAAMtU,KAAI,SAAAsE,GACR,OAAO,cAACiR,GAAD,CACHnU,KAAMkD,EAEN+I,UAAWA,GADN/I,EAAKpE,SAKhB2U,EAAc7U,KAAI,SAAAsE,GAChB,OAAO,cAACiR,GAAD,CACHnU,KAAMkD,EAEN+I,UAAWA,GADN/I,EAAKpE,WAO1B,qBAAK+C,MAAO,CAACsO,UAAU,OAAQiE,WAAW,SAAUC,MAAM,OAAOC,QAAQ,OAAOC,eAAe,YAA/F,SACI,wBACI1M,UAAU,iBACVhG,MAAO,CAAC2S,WAAW,QACnB5F,QAAS9O,KAAKkT,iBAHlB,8CAUR,eAACiB,GAAD,CAAWtT,MAAM,WAAWuT,QAASjC,EAArC,UACK3R,OAAOC,QAAQP,EAAKyU,UAAU7V,KAAI,YAAkB,IAAD,oBAAf2F,EAAe,KAAVvE,EAAU,KAChD,OAAO,cAAC0U,GAAD,CAEHC,OAAQpQ,EACRvE,KAAMA,EACN4U,OAAQrB,GAHHhP,EAAMvE,EAAKjB,UAQxB,qBAAK8C,MAAO,CAACsO,UAAU,QAAvB,SACKrQ,KAAKoI,MAAM2I,oBAAqB,uBAAyB,8BAE5DgE,MAAgB,mBAAGhN,UAAU,gBAAgBiN,KAAK,qCAAqClI,OAAO,SAASmI,IAAI,aAA3F,2BAKtB,eAACd,GAAD,CAAWtT,MAAM,UAAUuT,QAASjC,EAApC,UACI,gHAGA,sBAAKpK,UAAU,qBAAf,UACI,uBACIA,UAAU,uBACVmN,YAAY,YACZC,UAAW,SAACpW,GACM,UAAXA,EAAEoO,MAAkB,EAAKkE,eAEhC+D,QAAS,SAACrW,GAAD,OAAO,EAAKiS,kBAAkBjS,EAAE+N,OAAO7N,QAChDA,MAAOe,KAAKoI,MAAM6I,cAEtB,wBAAQlJ,UAAU,qBAAqB+G,QAAS9O,KAAKkR,YAArD,SACI,cAAC,KAAD,CAAiBnC,KAAMsG,SAE3B,wBAAQtN,UAAU,qBAAqB+G,QAAS9O,KAAKqR,YAArD,SACI,cAAC,KAAD,CAAiBtC,KAAMuG,YAG/B,qBAAKvN,UAAU,+BAAf,SACsB,YAAjBqJ,EACGD,EAAcrR,OAAS,EACfqR,EAAcrS,KAAI,SAAAsE,GAAI,OAClB,cAACmS,GAAD,CAEIrV,KAAMkD,EACN+I,UAAWyH,EAHf,SAKKxQ,EAAKpE,MAJDoE,EAAK3B,SAMlB,qBAAKsG,UAAU,6BAAf,wBAGJ,qBAAKA,UAAU,6BAAf,SACKqJ,SAKrB,eAAC+C,GAAD,CAAWtT,MAAM,OAAOuT,QAASjC,EAAjC,UACI,sBAAKpK,UAAU,oBAAf,UACI,mBAAGiN,KAAK,gCAAR,SACI,cAAC,KAAD,CAAWjN,UAAU,gBAEzB,mBAAGiN,KAAK,yCAAR,SACI,cAAC,KAAD,CAAUjN,UAAU,mBAI5B,qBACIA,UAAU,iCACV+G,QAAS,kBAAM4E,EAAW,cAF9B,6BAMA,cAAC3D,GAAD,KACEgF,MAAgB,mBAAGhN,UAAU,gBAAgBiN,KAAK,qCAAqClI,OAAO,SAASmI,IAAI,aAA3F,qC,GAzTnB9L,aAmUnB,SAASgL,GAAUrM,GACf,IAAIC,EAAYD,EAAMsM,UAAYtM,EAAMjH,MAAQ,gCAAkC,aAClF,OAAO,sBAAKkH,UAAWA,EAAhB,UACH,qBAAKA,UAAU,aAAf,SACKD,EAAMjH,QAEX,qBAAKkH,UAAU,wBAAf,SACKD,EAAMyI,cAInB,SAASsD,GAAU/L,GACf,OAAO,qBAAKgH,QAAS,kBAAMhH,EAAMgM,QAAO,IAAQ/L,UAAU,uBAAnD,SACH,cAAC,KAAD,CAAiBgH,KAAMsG,KAAStN,UAAU,WAGlD,SAAS6M,GAAY9M,GACjB,IAAQ5H,EAAyB4H,EAAzB5H,KAAM4U,EAAmBhN,EAAnBgN,OAAQD,EAAW/M,EAAX+M,OACtB,EAA4BW,mBAAStV,EAAKjB,OAA1C,oBAAOwW,EAAP,KAAkBC,EAAlB,KAwCA,MAAe,kBAAXb,EAAmC,KAChC,sBAAK9M,UAAU,eAAf,UACH,8BACK7H,EAAKlB,OAEK,WAAdkB,EAAKqB,KACA,wBAAQtC,MAAOiB,EAAKjB,MAClBiQ,SAhBZ,SAA0BnQ,GACtB,IAAIE,EAAQF,EAAE+N,OAAO7N,MACrBiB,EAAKjB,MAAQA,EAKb6V,EAJU,CACNrQ,IAAKoQ,EACL3U,KAAMA,KAUJ,SAGGA,EAAKyV,QAAQ7W,KAAI,SAAAC,GACd,OAAO,wBAAQE,MAAOF,EAAf,SAA2BA,GAAJA,QAGpC,uBACEwC,KAAMrB,EAAKqB,KACX2T,YAAahV,EAAKgV,aAAe,GACjCjW,MAAOwW,EACPG,QAASH,EACTvG,SAzDZ,SAAsBnQ,GAClB,IAAI6C,EAAK7C,EAAE+N,OACP7N,EAAsB,aAAdiB,EAAKqB,KAAsBK,EAAGgU,QAAUhU,EAAG3C,MACvD,KAAkB,WAAdiB,EAAKqB,OACLtC,EAAQ4G,OAAO5G,GACfF,EAAE+N,OAAO7N,MAAQ,GACbA,EAAQiB,EAAKoG,UAAU,IAAMrH,EAAQiB,EAAKoG,UAAU,KAH5D,CAQA,GAAe,aAAZ1E,EAAGL,KACFrB,EAAKjB,MAAQA,EAKb6V,EAJU,CACNrQ,IAAKoQ,EACL3U,SAIRwV,EAAOzW,KAuCC4W,OArCZ,WACQ3V,EAAKjB,QAAUwW,IACnBvV,EAAKjB,MAAQwW,EAKbX,EAJU,CACNrQ,IAAKoQ,EACL3U,KAAMA,WAoClB,SAASmU,GAAQvM,GACb,IAAI5H,EAAO4H,EAAM5H,KACb4V,EAAahO,EAAMqE,UAAU4J,WAC7BlE,EAAa/J,EAAMqE,UAAU0F,WAC7BgB,EAAe/K,EAAMqE,UAAU0G,aAEnC,OAAO,sBAAK9K,UAAU,WAAf,UACH,qBAAKA,UAAU,YAAY+G,QAAS,WAChC1F,GAAUlJ,KAAO,CACboJ,UAAW,OACXlG,KAAMlD,EACNT,MAAO,GAEXoS,GAAW,IANf,SAQK3R,EAAKlB,OAEV,sBAAK+I,UAAU,uBAAf,UACI,wBAAQA,UAAU,cAAc+G,QAAS,WACjC1F,GAAUlJ,KAAO,CACboJ,UAAW,WACXlG,KAAMlD,EACNT,MAAO,GAEXoS,GAAW,IANnB,SASI,cAAC,KAAD,CAAiB9C,KAAMmB,SAG3B,wBAAQnI,UAAU,cAAc+G,QAAS,WACjC1F,GAAUlJ,KAAO,CACboJ,UAAW,cACXlG,KAAMlD,EACNT,MAAO,GAEXoS,GAAW,IANnB,SASI,cAAC,KAAD,MAEJ,wBAAQ9J,UAAU,cAAc+G,QAAS,kBAAM+D,EAAa3S,IAA5D,SACI,cAAC,KAAD,CAAiB6O,KAAMoB,SAG3B,wBAAQpI,UAAU,cAAc+G,QAAS,kBAAMgH,EAAW5V,EAAKlB,OAA/D,SACI,cAAC,KAAD,CAAiB+P,KAAMiH,KAASxT,MAAM,oB,IAKhDyT,G,4JACF,WAAU,IAAD,OACDlO,EAAY/H,KAAK8H,MAAMC,UAAX,oBAAoC/H,KAAK8H,MAAMC,WAAc,YAC7E,OAAO,qBACHA,UAAWA,EACX+G,QAAS,kBAAM,EAAKhH,MAAMgM,OAAO,EAAKhM,MAAMvG,OAFzC,SAIFvB,KAAK8H,MAAMyI,e,GAPDpH,aAYvB,SAASoM,GAAazN,GAClB,IAAQqE,EAAmBrE,EAAnBqE,UAAWjM,EAAQ4H,EAAR5H,KACXoS,EAAenG,EAAfmG,WACF9Q,EAAQ,uCAAG,4BAAAiI,EAAA,+EAEQ8H,MAAM,iDAAiDC,UAAUtR,EAAKuB,OAAOgQ,MAAK,SAAAvR,GAAI,OAAIA,EAAKwR,UAFvG,OAGTtO,EAAO+B,EADH/B,EAFK,QAITkP,EAAWlP,GAJF,gDAMTpH,QAAQ4V,MAAR,MACA,IAAIhR,EAAY,QAAS,0BAA0BI,UAP1C,yDAAH,qDAURkV,EAAI,uCAAG,4BAAAzM,EAAA,+EAEY8H,MAAM,iDAAiDC,UAAUtR,EAAKuB,OAAOgQ,MAAK,SAAAvR,GAAI,OAAIA,EAAKwR,UAF3G,OAGLtO,EAAO+B,EADH/B,EAFC,QAILgG,GAAUlJ,KAAO,CACboJ,UAAW,OACXlG,KAAMA,EACN3D,MAAO,GAPN,gDAULzD,QAAQ4V,MAAR,MACA,IAAIhR,EAAY,QAAS,0BAA0BI,UAX9C,yDAAH,qDAcV,OAAO,sBAAK+G,UAAU,WAAf,UACP,qBAAKA,UAAU,YAAY+G,QAAS,WAChCoH,EAAKhW,IADT,SAGKA,EAAKlB,OAEV,qBAAK+I,UAAU,uBAAf,SACI,wBAAQA,UAAU,cAAc+G,QAAStN,EAAzC,SACI,cAAC,KAAD,CAAiBuN,KAAMoB,cAKnC,SAAS4E,KAEL,OADY5Q,KAAKC,MAAM+R,eAAeC,QAAQ,UAInC5F,U,wCC3gBX6F,GAAmB,CACnBC,cAAexa,EAAU,GACzBkK,WAAY,CACRhH,KAAM,uBACNuC,KAAM,aACNgV,aAAa,EACbtX,MAAOrC,EAAY,GACnB4Z,OAAQ,IACRb,QAAS/Y,GAEb6Z,OAAQ,CACJzX,KAAM,uBACNuC,KAAM,aACNgV,aAAa,EACbtX,MAAOrC,EAAY,GACnB4Z,OAAQ,IACRb,QAAS/Y,GAEb8Z,OAAQ,CACJ1X,KAAM,uBACNuC,KAAM,aACNgV,aAAa,EACbtX,MAAOrC,EAAY,GACnB4Z,OAAQ,IACRb,QAAS/Y,GAEbwD,IAAK,CACDpB,KAAM,MACNuC,KAAM,SACNgV,aAAa,EACbjQ,UAAW,CAAC,EAAG,MACfrH,MAAO,KAEX0X,UAAW,CACP3X,KAAM,aACNuC,KAAM,SACNgV,aAAa,EACbtX,MAAO,EACP0W,QAAS,CACL,EACA,IAGR9F,aAAa,CACT7Q,KAAM,iBACNuC,KAAM,SACNgV,aAAa,EACbtX,MAAmB,YAAZnD,EACmB8a,sBACI,WACA,kBACJ,YAC1BjB,QAAqB,YAAZ7Z,EACP,CACE,YACA,kBACA,YAEF,CACE,YACA,oBAGRuE,MAAO,CACHrB,KAAM,QACNuC,KAAM,SACNgV,aAAa,EACbtX,MAAO,IACP0W,QAAS,CACL,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,MAGRkB,iBAAkB,CACd7X,KAAM,4BACNuC,KAAM,SACNgV,aAAa,EACbtX,MAAO,GACP0W,QAAS,CACL,GACA,GACA,GACA,GACA,GACA,GACA,KAGRmB,SAAU,CACN9X,KAAM,qBACNuC,KAAM,WACNgV,aAAa,EACbtX,OAAO,GAEX8X,SAAU,CACN/X,KAAM,mBACNuC,KAAM,WACNgV,aAAa,EACbtX,OAAO,GAEX+X,gBAAgB,CACZhY,KAAM,yBACNuC,KAAM,OACNgV,aAAa,EACbtX,MAAO,GACPiW,YAAa,cAEjB+B,SAAS,CACLjY,KAAM,iCACNuC,KAAM,WACNgV,aAAY,EACZtX,OAAO,IAGXiY,GAAmB,CACnBZ,cAAcxa,EAAU,GACxB6S,aAAc,CACV3P,KAAM,gBACNuC,KAAM,SACNgV,aAAa,EACbtX,MAAO,IACPqH,UAAW,CAAC,EAAG,MAEnBN,WAAY,CACRhH,KAAM,aACNuC,KAAM,SACNgV,aAAa,EACbtX,MAAOrC,EAAY,GACnB+Y,QAAS/Y,GAEbiT,aAAa,CACT7Q,KAAM,iBACNuC,KAAM,SACNgV,aAAa,EACbtX,MAAmB,YAAZnD,EACmB8a,sBACI,WACA,kBACJ,YAE1BjB,QAAqB,YAAZ7Z,EACP,CACE,YACA,kBACA,YAEF,CACE,YACA,oBAGRqb,cAAe,CACXnY,KAAM,qBACNuC,KAAM,SACNgV,aAAa,EACbtX,MAAO,KACPqH,UAAW,CAAC,EAAG,MAEnBjG,MAAO,CACHrB,KAAM,QACNuC,KAAM,SACNgV,aAAa,EACbtX,MAAO,IACP0W,QAAS,CACL,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,MAGRmB,SAAU,CACN9X,KAAM,qBACNuC,KAAM,WACNgV,aAAa,EACbtX,OAAO,GAEX+X,gBAAgB,CACZhY,KAAM,yBACNuC,KAAM,OACNgV,aAAa,EACbtX,MAAO,GACPiW,YAAa,cAEjB7Y,cAAc,CACV2C,KAAM,iBACNuC,KAAM,WACNgV,aAAa,EACbtX,OAAO,I,SC7MAmY,G,iFAAf,WAA2BC,GAA3B,SAAA5N,EAAA,+EACW,IAAIjC,SAAQ,SAAAC,GACf,IAAI6P,EAAYzV,SAASC,cAAc,OACvCwV,EAAUvP,UAAY,kBACtB,IAAIjH,EAAOe,SAASC,cAAc,OAClChB,EAAKyW,UAAYF,EACjB,IAAIG,EAAQ3V,SAASC,cAAc,SACnC0V,EAAMjW,KAAO,OACbiW,EAAMtC,YAAc,aACpBsC,EAAMzP,UAAY,eAClB,IAAIxB,EAAM1E,SAASC,cAAc,OAC7B2V,EAAS5V,SAASC,cAAc,UAChC4V,EAAK7V,SAASC,cAAc,UAChC2V,EAAO1P,UAAY,gBACnB2P,EAAG3P,UAAY,yBACfxB,EAAIwB,UAAY,aAChB2P,EAAGH,UAAY,KACfE,EAAOF,UAAY,SACnBhR,EAAIoR,OAAOF,EAAQC,GACnBJ,EAAUK,OAAO7W,EAAM0W,EAAOjR,GAC9B1E,SAASG,KAAKC,YAAYqV,GAC1BE,EAAMnJ,iBAAiB,SAAS,WACD,KAAvBmJ,EAAMvY,MAAMqS,OACZoG,EAAGE,UAAUC,IAAI,YAEjBH,EAAGE,UAAUxV,OAAO,eAI5BqV,EAAOpJ,iBAAiB,SAAS,WAC7BiJ,EAAUM,UAAUC,IAAI,0BACxBpQ,EAAQ,MACRkF,YAAW,kBAAM2K,EAAUlV,WAAU,QAEzCsV,EAAGrJ,iBAAiB,SAAS,WACzB,GAA2B,aAAvBmJ,EAAMvY,MAAMqS,OAEZ,OADAkG,EAAMvY,MAAQ,GACP,IAAI2B,EAAY,UAAW,8CAA8CI,UAEpFsW,EAAUM,UAAUC,IAAI,0BACxBpQ,EAAQ+P,EAAMvY,MAAMqS,QAEpB3E,YAAW,kBAAM2K,EAAUlV,WAAU,YA1CjD,4C,+BA+Ce0V,G,iFAAf,WAA4BT,GAA5B,SAAA5N,EAAA,+EACW,IAAIjC,SAAQ,SAAAC,GACf,IAAI6P,EAAYzV,SAASC,cAAc,OACvCwV,EAAUvP,UAAY,kBACtB,IAAIjH,EAAOe,SAASC,cAAc,OAClChB,EAAKyW,UAAYF,EACjB,IAAI9Q,EAAM1E,SAASC,cAAc,OAC7B2V,EAAS5V,SAASC,cAAc,UAChC4V,EAAK7V,SAASC,cAAc,UAEhC2V,EAAO1P,UAAY,gBACnB2P,EAAG3P,UAAY,gBACfxB,EAAIwB,UAAY,aAChB2P,EAAGH,UAAY,MACfG,EAAG3V,MAAMgW,WAAa,UACtBN,EAAO1V,MAAMgW,WAAa,UAC1BN,EAAOF,UAAY,KACnBhR,EAAIoR,OAAOF,EAAQC,GACnBJ,EAAUK,OAAO7W,EAAMyF,GACvB1E,SAASG,KAAKC,YAAYqV,GAC1BG,EAAOpJ,iBAAiB,SAAS,WAC7BiJ,EAAUM,UAAUC,IAAI,0BACxBpQ,GAAQ,GACRkF,YAAW,kBAAM2K,EAAUlV,WAAU,QAEzCsV,EAAGrJ,iBAAiB,SAAS,WACzBiJ,EAAUM,UAAUC,IAAI,0BACxBpQ,GAAQ,GACRkF,YAAW,kBAAM2K,EAAUlV,WAAU,YA5BjD,4C,sBCjDe,WAA0B,mCCkFnC4V,GACF,WAAYnY,EAAOoY,EAAWC,GAAM,oBAChClY,KAAKH,MAAQA,EACbG,KAAKiY,UAAYA,EACjBjY,KAAKkY,IAAMA,EACXlY,KAAKmY,OAAS,IAAIC,YAAY,IAGvBC,GAxFX,WAAY3I,GAAiB,IAAD,gCAwB5BrC,gBAAkB,SAACF,GACf,IAAItN,EAAQ,EAAKvB,eAAeoH,WAAU,SAAA3G,GAAC,OAAIA,IAAMuZ,OAAOnL,MAC5D,OAAkB,IAAXtN,EAAeA,EAAQ,MA1BN,KA6B5B0Y,aAAe,SAAC9R,GACZ,IAAI+R,EAAY3S,QAAQY,EAAS,KAAKY,QAAQ,IAC3CZ,EAAS,IAAG+R,EAAY,GAC3B,EAAKC,WAAWC,KAAKzZ,MAAQuZ,GAhCL,KAmC5BtC,KAAO,SAAC9Z,EAAMiE,GACV,IAAG,EAAKsY,QAAR,CACA,IAAIC,EAASpc,EAAaqc,qBAC1BD,EAAOT,OAAS,EAAKW,QAAQ1c,GAC7Bwc,EAAOG,QAAQ,EAAKN,YACpBG,EAAOI,aAAa/Z,MAAQoB,EAC5BuY,EAAOnZ,MAAM,GACbmZ,EAAOK,QAAU,WACbL,EAAOM,OACPN,EAAOO,gBA5Ca,KA+C5BC,KA/C4B,sBA+CrB,8BAAA3P,EAAA,6DACC4P,EAAc7c,EAAa8c,aAAa,EAAG9c,EAAa+c,WAAY/c,EAAa+c,YAC/EC,EAAW,EAAKvL,OAAOnP,KAAI,SAAA1C,GAC7B,OAAO,IAAIoL,SAAQ,SAAAC,GACf8J,MAAMnV,EAAK8b,KACNzG,MAAK,SAAAjM,GAAM,OAAIA,EAAOiU,iBACtBhI,MAAK,SAAA0G,GACF3b,EAAakd,gBAAgBvB,EAAQ1Q,GAAS,WAC1CA,EAAQ4R,MAEXM,OAAM,SAAA5a,GAAM0I,EAAQ4R,SACtBM,OAAM,SAAA5a,GAAM0I,EAAQ4R,YAXhC,SAckB7R,QAAQoS,IAAIJ,GAd9B,cAcH,EAAKV,QAdF,OAeH,EAAKe,QAAS,EAfX,mBAgBI,GAhBJ,2CA/CqB,KAiE5BV,WAAa,WACT,EAAKV,WAAWU,cAlEQ,KAoE5BJ,QAAU,SAACe,GACP,EAAKrB,WAAWM,QAAQe,IArEA,KAuE5BC,OAAS,WACL,EAAKZ,aACL,EAAKR,SAAU,EACf,EAAKG,QAAU,MAzEf9Y,KAAK0P,oBAAoCvO,IAAnBuO,EAA+B9S,EAAY,GAAK8S,EACtE1P,KAAKiO,OAAS,GACdjO,KAAK8Y,QAAU,GACf9Y,KAAK6Z,QAAS,EACd7Z,KAAK2Y,SAAU,EACf3Y,KAAKyY,WAAajc,EAAawd,aAC/B,IAAIC,EAAiBnd,EAAgBkD,KAAK0P,gBAE1C1P,KAAK1B,eAAiBD,EAAW4b,EAAejd,OAAOsB,eACvD0B,KAAKxB,aAAeH,EAAW4b,EAAejd,OAAOwB,aACrDwB,KAAKvB,cAAgBJ,EAAW4b,EAAejd,OAAOyB,cAEtDuB,KAAK1B,eAAeoC,SAAQ,SAACnE,EAAUmK,GACnC,IAAIuR,EAAY,CACZ/M,SAAU3O,EACV2d,OAAQ,EAAK1b,aAAakI,IAE1BwR,EAAG,yBAAqBxI,EAArB,YAAuChJ,EAAvC,QACP,EAAKuH,OAAOlO,KAAK,IAAIiY,GAAStR,EAAGuR,EAAWC,OAGhDlY,KAAKyY,WAAWC,KAAKzZ,MAAQ,I,oBCtBhBkb,G,WACjB,aAAe,oBACXna,KAAK8Z,KAAOtd,EAAa4d,+BACzBpa,KAAKqa,SAAW,IAAIC,cAActa,KAAK8Z,KAAKS,Q,yCAEhD,WACIva,KAAKqa,SAAS5a,U,kBAElB,WAAQ,IAAD,OACH,OAAO,IAAI+H,SAAQ,SAAAC,GACf,EAAK4S,SAAShM,iBAAiB,iBAAiB,SAAUtP,GACtD0I,EAAQ,CACJvH,KAAMnB,EAAEmB,KACRsa,MAAO,WACH,OAAOC,IAAIC,gBAAgB3b,EAAEmB,WAGtC,CAAEya,MAAM,IACX,EAAKN,SAASnB,Y,6DAItB,WAAe0B,EAASjI,GAAxB,mBAAAlJ,EAAA,6DACUoR,EAAShZ,SAASC,cAAc,KAD1C,KAEgBgZ,KAFhB,SAE4BC,GAAYH,GAFxC,mBAEUI,GAFV,cAGQC,EAAO,IAAIC,KAAK,CAAC,IAAIC,SAASH,IAAO,CACrCzZ,KAAM,cAEVsZ,EAAOrZ,SAAWmR,EAClBkI,EAAO7F,KAAOyF,IAAIC,gBAAgBO,GAClCJ,EAAO1Y,QARX,4C,gEAYJ,SAAS4Y,GAAYE,GACjB,OAAO,IAAIzT,SAAQ,SAAAC,GACf,IAAMjL,EAAe,IAAIE,aACnB0e,EAAa,IAAI5I,WACvB4I,EAAWC,UAAY,WACnB7e,EAAakd,gBAAgB0B,EAAW5V,QAAQ,SAAC8V,GAC7C7T,EAAQ6T,OAGhBF,EAAWG,kBAAkBN,M,IChC/BO,G,kDACL,WAAY1T,GAAQ,IAAD,uBAClB,cAAMA,IAuBPtI,KAxBmB,sBAwBZ,4BAAAiK,EAAA,6DACEkL,EAAa,EAAKvM,MAAlBuM,SADF,SAEA,EAAK8G,eAAe9G,EAAS3O,WAAW/G,OAFxC,uBAGA,EAAKyc,aAHL,OAIN,EAAKC,kBAAkBhH,EAASmC,SAAS7X,OAJnC,2CAxBY,EAsDnB2c,UAAY,SAAC7c,GACZ,EAAK6K,SAAS,CACbiS,YAAY,KAxDK,EA2DnBC,eAAiB,SAAC/c,GACjBA,EAAE6J,iBACF,EAAKgB,SAAS,CACbiS,YAAY,KA9DK,EAiEnBE,WAAa,SAAChd,GACbA,EAAE6J,iBACF,EAAKgB,SAAS,CACbiS,YAAY,KApEK,EAuEnBzP,WAAa,SAAClM,GACb,EAAK0J,SAAS,CACboS,YAAa9b,KAzEI,EA4EnB+b,WA5EmB,uCA4EN,WAAOld,GAAP,mBAAA0K,EAAA,6DACZ,EAAKmS,YACL7c,EAAE6J,iBAFU,SAGMpB,QAAQoS,IAAI/W,MAAMqZ,KAAKnd,EAAEod,aAAaC,OAAOtd,KAAI,SAAA2C,GAAI,OAAIA,EAAKX,WAHpE,OAGRsS,EAHQ,OAIH1M,EAAI,EAJD,YAIIA,EAAI0M,EAAMtT,QAJd,iCAMNsD,EAAO+B,EAAkBhB,KAAKC,MAAMgP,EAAM1M,KANpC,UAOJ,EAAKgM,QAAQtP,GAPT,0DASVpH,QAAQ4V,MAAR,MATU,QAIsBlL,IAJtB,yEA5EM,wDA0FnBiV,kBAAoB,SAACU,GACpB,IAAQrW,EAAe,EAAKoC,MAApBpC,WACR,GAAIqW,EAAW,CACd,IAAK,EAAKC,WAAY,OAAOtgB,QAAQC,IAAI,8BACzC+J,EAAWmT,aACXnT,EAAW+S,QAAQ,EAAKuD,iBAExBtW,EAAWmT,aACXnT,EAAW+S,QAAQ,EAAKvc,aAAa+f,cAlGpB,EAqGnBC,YAAc,WACb,IAAIC,EAAiBC,aAAatG,QAAQta,EAAU,kBACpD,IACC2gB,EAAiBtY,KAAKC,MAAMqY,GAC3B,MAAO1d,GACR0d,EAAiB,KAElB,OAAuB,OAAnBA,EACCA,EAAenG,gBAAkBY,GAAiBZ,eACrD,EAAKqG,eAAezF,IACbA,IAEDuF,EAEDvF,IAnHW,EAqHnBuE,eArHmB,uCAqHF,WAAOzc,GAAP,mBAAAyK,EAAA,6DAChB,YAAKrB,MAAMpC,kBAAX,mBAAuB+T,cAAvB,iBACI6C,EAAgB,IAAIvE,GAAWrZ,GACnC,EAAK4K,SAAS,CAAEiT,qBAAqB,IAHrB,SAIVD,EAAcxD,OAJJ,OAKhBwD,EAAc7D,QAAQ,EAAKvc,aAAa+f,aACxC,EAAK3S,SAAS,CACb5D,WAAY4W,EACZC,qBAAqB,IACnB,kBAAM,EAAKlB,kBAAkB,EAAKvT,MAAMuM,SAASmC,SAAS7X,UAT7C,2CArHE,wDAsJnB8O,UAAY,SAAC3R,GACZ,IAAQgM,EAAR,eAAQA,MACAuM,EAAavM,EAAbuM,cACKxT,IAAT/E,IACAgM,EAAM0U,aAAa,EAAKC,gBAAgB3gB,GAC5C,EAAKgM,MAAMpC,WAAWkQ,KAAK9Z,EAAKyD,MAAOsH,EAAgBwN,EAAStU,MAAMpB,UA3JpD,EA6JnB0d,eAAiB,SAAC7K,GACjB,IAAI1J,EAEHA,OADgBjH,IAAb2Q,EACKA,EAEA,EAAK1J,MAAMuM,SAEpB+H,aAAaM,QAAQlhB,EAAU,iBAAkBqI,KAAKE,UAAU+D,KApK9C,EAsKnBqL,oBAAsB,SAACwJ,GACtB,IAAItI,EAAW,EAAKvM,MAAMuM,SACtBzU,EAAO+c,EAAQ/c,KACnByU,EAASsI,EAAQxY,KAAKxF,MAAQiB,EAAKjB,MACf,eAAhBge,EAAQxY,KACX,EAAKgX,eAAevb,EAAKjB,OAEN,aAAhBge,EAAQxY,KACX,EAAKkX,kBAAkBzb,EAAKjB,OAE7B,EAAK2K,SAAS,CACb+K,SAAUA,GACR,EAAKgI,iBAlLU,EAoLnBO,UApLmB,sBAoLP,4BAAAzT,EAAA,sEACO,EAAK0T,MAAM/J,MAAM7G,OAAO6Q,UAD/B,OACPhK,EADO,OAEX,EAAKxJ,SAAS,CACbwJ,MAAOA,IAHG,2CApLO,EA2LnBiK,WA3LmB,uCA2LN,WAAOre,GAAP,SAAAyK,EAAA,sEACC,EAAK0T,MAAM/J,MAAMkK,QAAQ,CAAEte,KAAMA,IADlC,oCAC8CmC,EAD9C,0EA3LM,wDA8LnBuR,QA9LmB,uCA8LT,WAAOtP,GAAP,SAAAqG,EAAA,+EAEE,EAAK4T,WAAWja,EAAKpE,MAFvB,2DAGA,IAAI4B,EAAY,UAAW,2CAA6CwC,EAAKpE,MAAMgC,WAHnF,uBAKF,EAAKmc,MAAM/J,MAAMmK,OAAOna,GALtB,OAMR,EAAK8Z,YACL,IAAItc,EAAY,UAAhB,4BAAgDwC,EAAKlD,KAAKK,kBAAoB,WAAa,WAA3F,SAA8G,KAAMS,UAP5G,yDASRhF,QAAQ4V,MAAR,MATQ,kBAUD,IAAIhR,EAAY,QAAS,yCAAyCI,WAVjE,0DA9LS,wDAkNnB+U,WAlNmB,uCAkNN,WAAO/W,GAAP,SAAAyK,EAAA,sEACOqO,GAAa,8CAAD,OAA+C9Y,EAA/C,QADnB,eAGX,EAAKme,MAAM/J,MAAMhR,OAAO,CAAEpD,KAAMA,GAAQ,EAAKke,WAHlC,2CAlNM,wDAwNnBH,gBAAkB,SAAC3gB,GACd,EAAKgM,MAAM0U,aACd,EAAKU,UAAU5d,QAAQxD,EAAKyD,QA1NX,EA6NnB4d,eAAiB,WAChB,OAAO,IAAIjW,QAAJ,uCAAY,WAAMC,GAAN,iBAAAgC,EAAA,sDACdiU,EAAe,0CADD,uBAGItG,GAAYsG,GAHhB,UAIA,QADb3K,EAHa,iDAIatL,EAAQ,OAJrB,UAKA,KAAbsL,EALa,kCAMN,EAAKsK,WAAWtK,GANV,oCAOf2K,EAAe,6BAA+B3K,EAP/B,iDASRtL,EAAQsL,IATA,gCAYhB2K,EAAe,0CAZC,mEAAZ,wDA9NW,EAgPnBC,aAhPmB,uCAgPJ,WAAO7L,GAAP,mBAAArI,EAAA,yDACU,mBAAbqI,IAAwBA,OAAW3Q,IAC1C4Q,OAAwB5Q,IAAb2Q,EAAyBA,GAAY,EAAK1J,MAAM0U,gBAC9C,EAAKU,UAAUxgB,MAAM8C,OAAS,GAHjC,iCAIQ,EAAK2d,iBAJb,OAIT1K,EAJS,QAKT3P,EAAO,IAAInD,EAAK8S,EAAU,EAAKyK,UAAUxgB,QACxCqD,MAAQ,EAAK+H,MAAMuM,SAAStU,MAAMpB,MACtB,OAAb8T,GAAmB,EAAKL,QAAQtP,GAPvB,wBASb,EAAKoa,UAAY,IAAIje,EATR,QAWd,EAAK6I,MAAM0U,YAAc/K,EACzB,EAAKnI,SAAS,CACboI,KAAM,EAAK5J,MAAM0U,cAbJ,4CAhPI,wDAgQnBc,kBAhQmB,uCAgQC,WAAO9L,GAAP,2BAAArI,EAAA,yDACK,mBAAbqI,IAAwBA,OAAW3Q,GACtC6E,EAAe,EAAKoC,MAApBpC,WAFW,iBAGXqU,EAHW,EAGXA,SACFgC,EAAY,EAAKjU,MAAMuM,SAASmC,SAAS7X,QACzC8S,OAAwB5Q,IAAb2Q,EAAyBA,GAAY,EAAK1J,MAAMyV,kBAL9C,iBAOdxB,EACH,EAAKyB,iBAAiB/E,QAAQsB,EAASP,MAEvC9T,EAAW+S,QAAQsB,EAASP,MAE7BO,EAAS5a,QAZS,yCAcI4a,EAASnB,OAdb,eAcdsE,EAdc,iBAeGpG,GAAY,+CAff,SAedzE,EAfc,SAgBJ0H,EAAS7Y,SAASgc,EAAUtd,KAAMyS,EAAW,QAC3D,EAAKgJ,kBAAkBU,GACvB,EAAKyB,iBAAiB3E,aACtB,EAAK2E,iBAAiB/E,QAAQvc,EAAa+f,aAnBzB,QAsBnB,EAAK3S,SAAS,CACbiU,iBAAkB9L,IAvBA,4CAhQD,sDAElB,EAAKgM,GAAK,IAAIC,KAAQC,GAAGniB,EAAS,CAAEsX,MAAO,KAC3C,EAAKoK,UAAY,IAAIje,EACrB,IAAIoV,EAAW,EAAK6H,cAJF,OAKlB,EAAKW,MAAQ,CACZ/J,MAAO,EAAK2K,GAAGG,WAAW,UAE3B,EAAK9V,MAAQ,CACZpC,WAAY,IAAIqS,GAChBwE,qBAAqB,EACrBC,aAAa,EACbe,kBAAkB,EAClBzK,MAAO,GACPuB,SAAUA,EACVkH,YAAY,EACZG,aAAa,GAEd,EAAKM,gBAAanb,EAClB,EAAK2c,sBAAmB3c,EACxB,EAAK3E,aAAeA,EACpB,EAAK6d,SAAW,IAAIF,GArBF,E,qDA8BnB,WACCtY,SAASG,KAAKqM,iBAAiB,YAAarO,KAAK+b,YACjDla,SAASG,KAAKqM,iBAAiB,YAAarO,KAAK4b,WACjD/Z,SAASG,KAAKqM,iBAAiB,WAAYrO,KAAK8b,gBAChDja,SAASG,KAAKqM,iBAAiB,OAAQrO,KAAKic,YAC5Cjc,KAAKkd,YACLld,KAAKR,S,kCAEN,WACCqC,SAASG,KAAKyM,oBAAoB,YAAazO,KAAK+b,YACpDla,SAASG,KAAKyM,oBAAoB,YAAazO,KAAK4b,WACpD/Z,SAASG,KAAKyM,oBAAoB,OAAQzO,KAAKic,YAC/Cpa,SAASG,KAAKqM,iBAAiB,WAAYrO,KAAK8b,gBAChD1S,GAAUlJ,KAAO,CAChBkD,KAAM,GACNkG,UAAW,OACX7J,MAAO,GAERO,KAAKxD,kBAAe2E,EACpBnB,KAAKqa,cAAWlZ,EAChBnB,KAAKsc,gBAAanb,EAClBnB,KAAK8d,sBAAmB3c,EACxBnB,KAAKoI,MAAMpC,WAAW+T,W,wBA4EvB,WAAc,IAAD,OACZ,OAAO,IAAIvS,SAAQ,SAAAC,GAClB8J,MAAM,8BACJE,MAAK,SAAA0M,GAAC,OAAIA,EAAE1E,iBACZhI,MAAK,SAAA2M,GACL,EAAK5hB,aAAakd,gBAAgB0E,GAAG,SAACC,GACrC,IAAIC,EAAY,EAAK9hB,aAAa+hB,kBAC9BC,EAAW,EAAKhiB,aAAawd,aACjCwE,EAAS9F,KAAKzZ,MAAQ,IACtBqf,EAAUnG,OAASkG,EACnBC,EAAUvF,QAAQyF,GAClBA,EAASzF,QAAQ,EAAKvc,aAAa+f,aACnC,EAAKuB,iBAAmBU,EACxB,EAAKlC,WAAagC,EAClB7W,UAECkS,OAAM,SAAC5a,GACT/C,QAAQC,IAAI,oBAAqB8C,W,+BA2DrC,WACC,IAAI6B,EAAY,UAAW,0DAA0DI,UACrFoI,GAAUlJ,KAAO,CAChBkD,KAAM,GAAIkG,UAAW,OAAQ7J,MAAO,K,oBA2EtC,WACC,IAAQ2I,EAAUpI,KAAVoI,MACJqW,EAAoB,CACvBvU,kBAAmBlK,KAAKkK,kBACxB6D,UAAW/N,KAAK+N,UAChB3B,WAAYpM,KAAKoM,YAEdsS,EAAe,CAClBlP,UAAWpH,EAAMyU,oBACjB3R,SAAU9C,EAAMpC,WAChB3F,MAAO+H,EAAMuM,SAAStU,MAAMpB,MAC5B0P,aAAcvG,EAAMuM,SAAShG,aAAa1P,MAC1C4Q,aAAczH,EAAMuM,SAAS9E,aAAa5Q,MAC1CoL,QAASjC,EAAM4T,YACfnO,aAAczF,EAAMuM,SAAStY,cAAc4C,MAC3CgJ,aAAcG,EAAMuM,SAASwC,cAAclY,OAExC0f,EAAgB,CACnBjM,QAAS1S,KAAK0S,QACdqD,WAAY/V,KAAK+V,WACjBrC,WAAY1T,KAAK8H,MAAM4L,WACvBD,oBAAqBzT,KAAKyT,qBAGvBmL,EAAW,CACdxL,MAAOhL,EAAMgL,MACbuB,SAAUvM,EAAMuM,UAGjB,OAAO,sBAAK5M,UAAU,eAAehG,MAAO,CAAEiV,gBAAgB,OAAD,OAAS5O,EAAMuM,SAASqC,gBAAgB/X,MAAxC,MAAtD,UACwB,gBAA7BmK,GAAUlJ,KAAKoJ,WACf,qBAAKvB,UAAU,gBAAf,SACC,cAAC8W,GAAD,CACCC,OAAQ1W,EAAMyV,iBACd1b,MAAOnC,KAAK4d,kBAFb,SAIExV,EAAMyV,iBAAmB,mBAAqB,mBAKlD,sBAAK9V,UAAU,gBAAf,UACC,qBAAKiB,IAAK+V,GAAWhW,IAAI,iCAD1B,yFAKCX,EAAMyT,YAAc,qBAAK9T,UAAU,cAAf,4BAGrB,cAAC,GAAD,CAAMoE,UAAWwS,EAAeze,KAAM0e,IACtC,sBAAK7W,UAAU,cAAf,UACC,qBAAKA,UAAU,cAAf,UACG/H,KAAKoI,MAAM4T,aAEZ,cAAC6C,GAAD,CACCC,OAAQ1W,EAAM0U,YACd3a,MAAOnC,KAAK2d,aACZ5b,MAAO,CAACsO,UAAW,WAHpB,SAKEjI,EAAM0U,YAAc,OAAS,aAKjC,qBAAK/U,UAAU,mBAAf,SACC,cAAC,GAAD,CAEC7H,KAAMwe,EACNvS,UAAWsS,GAFNrW,EAAMpC,WAAW0J,4B,GA7VVvG,aAqXlB,SAAS0V,GAAU/W,GAClB,IAAIC,EAAY,mBAAqBD,EAAMgX,OAAS,WAAa,IACjE,OAAO,wBAAQ/W,UAAWA,EAAW+G,QAAShH,EAAM3F,MAAOJ,MAAK,eAAQ+F,EAAM/F,OAAS,IAAhF,SACL+F,EAAMyI,YATT,WACC,GALYpM,KAAKC,MAAM+R,eAAeC,QAAQ,UAK5B,OAAOpa,QAAQC,IAAI,SACrC,IAAI+iB,EAAQnd,SAASod,SAAS5Z,SAAS,kBACvC8Q,eAAe6G,QAAQ,QAASgC,GAEjCE,GAOe1D,UCxYA,OAA0B,oCCA1B,OAA0B,uC,SCiB1B2D,OAhBf,SAAqBlgB,EAAOsM,GAE1B,MAA4CiK,mBAASvW,GAArD,oBAAOmgB,EAAP,KAAuBC,EAAvB,KAYA,OAXAC,qBACE,WACE,IAAMC,EAAU5S,YAAW,WACzB0S,EAAkBpgB,KACjBsM,GACH,OAAO,WACLiU,aAAaD,MAGjB,CAACtgB,EAAOsM,IAEH6T,GCgST,SAASK,GAAM3X,GACX,IAAQ5H,EAA2B4H,EAA3B5H,KAAML,EAAqBiI,EAArBjI,MAAO6f,EAAc5X,EAAd4X,UACrB,EAAkClK,oBAAS,GAA3C,oBAAOmK,EAAP,KAAkBC,EAAlB,KACA,OAAO,sBAAK7X,UAAU,oBAAf,UACH,sBAAKA,UAAU,qBAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,uBAAOxG,KAAK,WAAW2N,SAAU,kBAAMwQ,EAAU,QAAS,CAAE7f,MAAOA,KAAU+V,QAAS1V,EAAK0C,WAC1F1C,EAAKlB,KAFV,KAEkBkB,EAAKlD,MAAM8C,OAF7B,OAIA,sBAAKiI,UAAU,oBAAf,UACI,qBAAKhG,MAAO,CAAE8d,UAAW,UAAzB,SACK3f,EAAK8F,WAAW8Z,SAErB,yBACI5Q,SAAU,SAAChO,GAAD,OAAWwe,EAAU,QAAS,CAAE7f,MAAOA,EAAOmE,MAAO6B,OAAO3E,EAAM4L,OAAO7N,UACnFA,MAAOiB,EAAK8D,MACZ+D,UAAU,cAHd,UAKI,wBAAQ9I,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,wBAGJ,cAAC,KAAD,CACIuM,KAAM,GACNhJ,MAAOmd,EAAY,qBAAuB,QAC1C7Q,QAAS,kBAAM8Q,GAAcD,IAC7BI,OAAO,kBAKnB,sBAAKhY,UAAU,kBAAkBhG,MAAO,CAAEyS,QAASmL,EAAY,OAAS,QAAxE,UACI,sBAAK5X,UAAU,sBAAf,UACI,8CACA,8BAAM7H,EAAK8F,WAAWhH,UAE1B,sBAAK+I,UAAU,sBAAf,UACI,mDACA,8BAAM7H,EAAKlD,MAAM8C,YAErB,sBAAKiI,UAAU,sBAAf,UACI,+CACA,8BAAM7H,EAAK8f,yBAEf,sBAAKjY,UAAU,sBAAf,UACI,gDACA,8BAAM7H,EAAK+f,8BAMZC,O,kDA5VX,WAAYpY,GAAQ,IAAD,8BACf,cAAMA,IAaVqY,WAAa,SAAC1e,GACV,IAAM8Q,EAAS,IAAIC,WACnBD,EAAOlE,iBAAiB,QAAQ,SAACnN,GAAW,IAAD,IACnCkf,EACJ,IACIA,EAAO,IAAIC,QAAKnf,EAAM4L,OAAOtH,QAC/B,MAAOzG,GACL/C,QAAQ4V,MAAM7S,GAElB,IAAKqhB,EAAM,OAAO,IAAIxf,EAAY,QAAS,yCAA0C,KAAMI,UAC3F,IAAIZ,EAAG,UAAGggB,EAAKE,OAAOC,OAAO,UAAtB,aAAG,EAAuBngB,IAC7BqE,EAAG,UAAG2b,EAAKE,OAAOE,cAAc,UAA7B,aAAG,EAA8B/b,IACxC2b,EAAKK,OAAO/f,SAAQ,SAACggB,EAAOha,GACxBga,EAAM9d,UAAW,EACjB8d,EAAM1c,MAAQ,EACd0c,EAAM1hB,KAAO0hB,EAAM1hB,MAAN,kBAAyB0H,EAAI,GAC1Cga,EAAMV,oBAAsB,EAC5BU,EAAMT,mBAAqB,KAE/B,EAAKrW,SAAS,CACVwW,KAAMA,EACNzN,SAAUlR,EAAKzC,KACfoB,IAAKuD,KAAKC,MAAY,EAANxD,IAAY,IAC5BugB,OAAQ,EACRtgB,MAAOnB,EAASmG,SAASZ,GAAOA,EAAM,MACvC,WAAgC,OAApB,EAAK2D,MAAMgY,MAAe,EAAKQ,oBAElDrO,EAAOgJ,kBAAkB9Z,IAzCV,EA4CnBmf,YAAc,WACV,MAAwD,EAAKxY,MAArDgY,EAAR,EAAQA,KAAMhgB,EAAd,EAAcA,IAAKugB,EAAnB,EAAmBA,OAAQE,EAA3B,EAA2BA,mBAAmBxgB,EAA9C,EAA8CA,MAC1CogB,EAASL,EAAKK,OAAOtjB,QAAO,SAAAujB,GAAK,OAAIA,EAAM9d,YAC3C5F,EAAQ,GACRgjB,EAAsB,EACtBc,EAAa,EACbC,EAAa,EACjBN,EAAO/f,SAAQ,SAAAggB,GACXA,EAAMV,oBAAsB,EAC5BU,EAAMT,mBAAqB,EAC3BS,EAAM1jB,MAAM0D,SAAQ,SAAAsgB,GAChBD,IACA,IAAIE,EAoUpB,SAAyBD,GACrB,IAAI5kB,EAAO,KACP8kB,GAAe,EACnB,GAAgB,QAAZplB,EACA,OAAQklB,GACJ,KAAK,GAAI5kB,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG8kB,GAAe,EAAM,MACxC,KAAK,GAAI9kB,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG8kB,GAAe,EAAM,MACxC,KAAK,GAAI9kB,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG8kB,GAAe,EAAM,MACxC,KAAK,GAAI9kB,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG8kB,GAAe,EAAM,MACxC,KAAK,GAAI9kB,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG8kB,GAAe,EAAM,MACxC,KAAK,GAAI9kB,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG8kB,GAAe,EAAM,MACxC,KAAK,GAAI9kB,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG8kB,GAAe,EAAM,MACxC,KAAK,GAAI9kB,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,GAAI8kB,GAAe,EAAM,MACzC,KAAK,GAAI9kB,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,GAAI8kB,GAAe,EAAM,MACzC,KAAK,GAAI9kB,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,GAAI8kB,GAAe,EAAM,MACzC,KAAK,GAAI9kB,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,GAAI,MACpB,QAASA,EAAO,KAGxB,GAAgB,YAAZN,EACA,OAAQklB,GACJ,KAAK,GAAI5kB,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,GAAI8kB,GAAe,EAAM,MACzC,KAAK,GAAI9kB,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,GAAI8kB,GAAe,EAAM,MACzC,KAAK,GAAI9kB,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,GAAI8kB,GAAe,EAAM,MACzC,KAAK,GAAI9kB,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,GAAI8kB,GAAe,EAAM,MACzC,KAAK,GAAI9kB,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,GAAI8kB,GAAe,EAAM,MACzC,KAAK,GAAI9kB,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG8kB,GAAe,EAAM,MACxC,KAAK,GAAI9kB,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG8kB,GAAe,EAAM,MACxC,KAAK,GAAI9kB,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,GAAI8kB,GAAe,EAAM,MACzC,KAAK,GAAI9kB,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,GAAI8kB,GAAe,EAAM,MACzC,KAAK,GAAI9kB,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,GAAI8kB,GAAe,EAAM,MACzC,KAAK,GAAI9kB,EAAO,GAAI,MACpB,KAAK,GAAIA,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG8kB,GAAe,EAAM,MACxC,KAAK,GAAI9kB,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG8kB,GAAe,EAAM,MACxC,KAAK,GAAI9kB,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG8kB,GAAe,EAAM,MACxC,KAAK,GAAI9kB,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG8kB,GAAe,EAAM,MACxC,KAAK,GAAI9kB,EAAO,EAAG,MACnB,KAAK,GAAIA,EAAO,EAAG8kB,GAAe,EAAM,MACxC,KAAK,GAAI9kB,EAAO,EAAG,MACnB,QAASA,EAAO,KAGxB,MAAO,CACHA,KAAMA,EACN8kB,aAAcA,GAhZcC,CAAgBH,EAASZ,KAAOO,GAChDvkB,EAAO,CACPsI,KAAMf,KAAKC,MAAsB,IAAhBod,EAAStc,MAC1BtI,KAAM6kB,EAAc7kB,KACpB4H,MAAO0c,EAAM1c,OAEdid,EAAcC,eACblB,IACAU,EAAMV,uBAEQ,OAAd5jB,EAAKA,MACDykB,GAAuBI,EAAcC,cACrClkB,EAAM+C,KAAK3D,IAGf0kB,IACAJ,EAAMT,4BAIlBjjB,EAAQA,EAAMokB,MAAK,SAAC3X,EAAG2U,GAAJ,OAAU3U,EAAE/E,KAAO0Z,EAAE1Z,QAGxC,IAFA,IAAIwB,EAAUvC,KAAKC,MAAM,IAAQxD,GAC7BihB,EAAe,GACZrkB,EAAM8C,OAAS,GAAG,CAGrB,IAFA,IAAIyG,EAAM,CAACvJ,EAAMwJ,SACbC,EAAS,EACJC,EAAI,EAAGA,EAAI1J,EAAM8C,OAAQ4G,IAC1BH,EAAI,GAAG7B,KAAO1H,EAAM0J,GAAGhC,KAAOwB,EAAU,GAAGO,IAEnD4a,EAAathB,KAAb,UAAsBwG,EAAtB,YAA8BvJ,EAAM2J,OAAO,EAAGF,MAElD,IAAI9D,EAAU,GACV2I,EAAe,EACnB+V,EAAa3gB,SAAQ,SAAA1D,GACjB,IAAIZ,EAAOY,EAAM,GACjB,GAAKZ,EAAL,CACA,IAAIklB,EAAcllB,EAAKsI,KAAO4G,EAC9BA,EAAelP,EAAKsI,KACpB,IAAI6c,EAAe5d,KAAKC,OAAO0d,EAAcpb,GAAWA,GACpDqb,GAAgB,GAAG,IAAI1e,MAAM0e,GAAcze,KAAK,GAAGpC,SAAQ,kBAAMiC,EAAQ5C,KAAK,IAAIiD,MACtF,IAAIwe,EAAa,IAAIxe,EACrBwe,EAAWxkB,MAAQA,EAAM8B,KAAI,SAAA1C,GACzB,OAAO,IAAImH,EAAWnH,EAAKA,KlBmV3C,SAAuBqlB,GACtB,IAAIzd,EAAQ,MAIZ,OAHe,IAAXyd,IAAczd,EAAQ,OACX,IAAXyd,IAAczd,EAAQ,OACX,IAAXyd,IAAczd,EAAQ,OACnBA,EkBxVyC0d,CAActlB,EAAK4H,WAExDrB,EAAQ5C,KAAKyhB,OAEjB7e,EAAQjC,SAAQ,SAAAqC,GACZ,IAAIse,ElB8VhB,SAAsBte,GACrB,IAAI/F,EAAQ,GAQZ,OAPA+F,EAAO/F,MAAM0D,SAAQ,SAAAtE,GAChBY,EAAMZ,EAAKyD,OACd7C,EAAMZ,EAAKyD,OAAOE,KAAK3D,GAEvBY,EAAMZ,EAAKyD,OAAS,CAACzD,MAGhBY,EAAMG,QAAO,SAAA4B,GAAC,OAAI8D,MAAMuC,QAAQrG,MkBvWT4iB,CAAa5e,GAChCA,EAAO/F,MAAQqkB,EAAaviB,KAAI,SAAA8iB,GAE5B,OADAA,EAAM,GAAG5d,MlBmVzB,SAAqBhH,GACpB,IAAI6kB,EAAQ,MAAMtjB,MAAM,IAMxB,OALAvB,EAAM0D,SAAQ,SAAA1D,GACbA,EAAMgH,MAAMzF,MAAM,IAAImC,SAAQ,SAAC3B,EAAG2H,GACvB,MAAN3H,IAAW8iB,EAAMnb,GAAK,WAGrBmb,EAAMC,KAAK,IkB1VcC,CAAYH,GACtBA,EAAM,SAGrB,IAAIxe,EAAO,IAAIX,EAAa,YAC5BW,EAAKT,QAAUA,EACfS,EAAKhD,IAAMA,EACXgD,EAAKxG,YAAc,EAAKkL,MAAM5H,KAAKtD,YACnCwG,EAAK/C,MAAQA,EACb,IAAI2hB,EAAa,EAAKla,MAAM5H,KAAK+hB,eAEjC,GADA7e,EAAKR,SAAWof,EAAa5e,EAAKT,QAAQ7C,OAASkiB,EAAa,EACpC,IAAxB5e,EAAKT,QAAQ7C,OACb,OAAO,IAAIc,EAAY,QAAS,qBAAsB,KAAMI,UAEhE,EAAK8G,MAAMqE,UAAU+V,SAAS9e,GAC9B,EAAKwG,SAAS,CACVuY,YAAanC,EACbe,WAAYA,EACZD,WAAYA,KA3HD,EA+HnBpB,UAAY,SAAC0C,EAASliB,GAClB,IAAIugB,EAAS,EAAKrY,MAAMgY,KAAKK,OACb,UAAZ2B,IAEA3B,EAAOvgB,EAAKL,OAAO+C,UAAY6d,EAAOvgB,EAAKL,OAAO+C,UAEtC,UAAZwf,IACA3B,EAAOvgB,EAAKL,OAAOmE,MAAQ9D,EAAK8D,OAGpC,EAAK4F,SAAS,CACVwW,KAAM,EAAKhY,MAAMgY,OAClB,WAAgC,OAApB,EAAKhY,MAAMgY,MAAe,EAAKQ,kBA3I/B,EA6InByB,aAAe,SAACpjB,GACZA,EAAQqjB,SAASrjB,GACZ4G,OAAO0c,UAAUtjB,KAAQA,EAAQ,GACnC,EAAKmJ,MAAMuY,SAAW1hB,GACzB,EAAK2K,SAAS,CACV+W,OAAQ1hB,IACT,WAAgC,OAApB,EAAKmJ,MAAMgY,MAAe,EAAKQ,kBAnJ/B,EAqJnB4B,YAAc,SAACvjB,GACX,EAAK6I,MAAMqE,UAAUqW,YAAYvjB,GACjC,EAAK2K,SAAS,CACVvJ,MAAOpB,KAxJI,EA2JnBwjB,kBAAoB,WAChB,EAAK7Y,SAAS,CACViX,oBAAqB,EAAKzY,MAAMyY,qBACjC,WAAgC,OAApB,EAAKzY,MAAMgY,MAAe,EAAKQ,kBA9J/B,EAgKnB8B,UAAY,SAACzjB,GACTA,EAAQqjB,SAASrjB,GACZ4G,OAAO0c,UAAUtjB,KAAQA,EAAQ,GACnC,EAAKmJ,MAAMhI,MAAQnB,GACtB,EAAK2K,SAAS,CACVxJ,IAAKnB,IACN,WAAgC,OAApB,EAAKmJ,MAAMgY,MAAe,EAAKQ,kBApK9C,EAAKxY,MAAQ,CACTuK,SAAU,GACVyN,KAAM,KACNhgB,IAAK,IACLugB,OAAQ,EACRtgB,MAAO,IACP8hB,YAAa,EACbrB,WAAY,EACZC,WAAY,EACZF,oBAAoB,GAXT,E,0CAwKnB,WACI,IAAQV,EAAuEngB,KAAvEmgB,WAAYT,EAA2D1f,KAA3D0f,UAAWtX,EAAgDpI,KAAhDoI,MAAOsa,EAAyC1iB,KAAzC0iB,UAAWL,EAA8BriB,KAA9BqiB,aAAcG,EAAgBxiB,KAAhBwiB,YACvD7P,EAAgGvK,EAAhGuK,SAAUyN,EAAsFhY,EAAtFgY,KAAMhgB,EAAgFgI,EAAhFhI,IAAKugB,EAA2EvY,EAA3EuY,OAAQtgB,EAAmE+H,EAAnE/H,MAAO8hB,EAA4D/Z,EAA5D+Z,YAAarB,EAA+C1Y,EAA/C0Y,WAAYC,EAAmC3Y,EAAnC2Y,WAAYF,EAAuBzY,EAAvByY,mBAEzE8B,EADc3iB,KAAK8H,MAAnBqE,UACAwW,qBACR,OAAO,sBAAK5a,UAAU,gBAAf,UACH,sBACIA,UAAU,4BACVhG,MAAO,CAAEwS,MAAO,QAFpB,UAII,cAAC,cAAD,CAAYrF,SAAUiR,EAAtB,SACI,wBAAQpY,UAAU,WAAlB,uCAIJ,qBAAKhG,MAAO,CAAE6gB,OAAQ,WAAYC,SAAU,OAAQC,aAAc,WAAYC,SAAU,UAAxF,SACKpQ,IAEL,wBACI5K,UAAU,WACVhG,MAAO,CAAE2S,WAAY,QACrB5F,QAAS,kBAAM6T,GAAqB,IAHxC,sBAQJ,wBAAO5a,UAAU,mBAAmBhG,MAAO,CAAEwS,MAAO,QAApD,UACI,+BACI,6BACI,qBAAKxS,MAAO,CAAEihB,YAAa,UAA3B,oBAEJ,oBAAIjhB,MAAO,CAAEyS,QAAS,OAAQC,eAAgB,WAAYwO,WAAW,UAArE,SACA,cAACC,GAAD,CACQjkB,MAAOmB,EACP+iB,YAAaT,EACbnX,MAAO,IACP6X,KAAM,SAIlB,+BACI,6BACI,qBAAKrhB,MAAO,CAAEihB,YAAa,UAA3B,gCAEJ,6BACI,cAACE,GAAD,CACIjkB,MAAO0hB,EACPwC,YAAad,EACb9W,MAAO,IACP6X,KAAM,SAIlB,+BACI,6BACI,qBAAKrhB,MAAO,CAAEihB,YAAa,UAA3B,sBAEJ,oBAAIjhB,MAAO,CAAEyS,QAAS,OAAQC,eAAgB,WAAYwO,WAAW,UAArE,SACI,yBACIlb,UAAU,cACV9I,MAAOoB,EACP6O,SAAU,SAAChO,GAAD,OAAWshB,EAAYthB,EAAM4L,OAAO7N,QAC9C8C,MAAO,CAAEshB,gBAAiB,UAAW9O,MAAO,QAJhD,UAMI,wBAAQtV,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,IAAd,uBAIZ,+BACI,6BACI,qBAAK8C,MAAO,CAAEihB,YAAa,UAA3B,oCAEJ,oBAAIjhB,MAAO,CAAEyS,QAAS,OAAQC,eAAgB,YAA9C,SACI,uBAAOlT,KAAK,WACRqU,QAASiL,EACT3R,SAAUlP,KAAKyiB,4BAKrB,OAATrC,GAAiB,qBAAKrY,UAAU,+BAA+BhG,MAAO,CAAEwS,MAAO,QAA9D,SACd,sBAAKxM,UAAU,cAAchG,MAAO,CAAEwS,MAAO,QAA7C,UACI,qDADJ,OAEK6L,QAFL,IAEKA,OAFL,EAEKA,EAAMK,OAAO3hB,KAAI,SAAC4hB,EAAOha,GAAR,OACd,cAAC+Y,GAAD,CACIvf,KAAMwgB,EAEN7gB,MAAO6G,EACPgZ,UAAWA,GAFNhZ,WAQX,OAAT0Z,GAAiB,kCACd,+BACI,+CACA,uBACA,6BAAKW,OAET,+BACI,+CACA,uBACA,6BAAKoB,OAET,+BACI,gDACA,uBACA,6BAAKrB,iB,GAhSA3X,aA+VzB,SAAS+Z,GAAYpb,GACjB,IAAQqb,EAA8Crb,EAA9Cqb,YAAalkB,EAAiC6I,EAAjC7I,MAArB,EAAsD6I,EAA1ByD,aAA5B,MAAoC,IAApC,IAAsDzD,EAAbsb,YAAzC,MAAgD,EAAhD,EACA,EAAwC5N,mBAASvW,GAAjD,oBAAOqkB,EAAP,KAAqBC,EAArB,KACMC,EAAYrE,GAAYmE,EAAc/X,GAQ5C,OAPA+T,qBAAU,WACN6D,EAAYK,KAEb,CAACA,IACJlE,qBAAU,WACNiE,EAAgBtkB,KACjB,CAACA,IACG,sBAAK8C,MAAO,CAAEyS,QAAS,OAAQC,eAAgB,YAA/C,UACH,wBACI3F,QAAS,kBAAMyU,EAAgBD,EAAeF,IAC9Crb,UAAU,iBAFd,eAIA,uBACIxG,KAAK,OACLtC,MAAOqkB,EACPpU,SAAU,SAACnQ,GAAD,OAAOwkB,EAAgBxkB,EAAE+N,OAAO7N,QAC1C8I,UAAU,aACVhG,MAAO,CAAE6gB,OAAQ,cAErB,wBACI9T,QAAS,kBAAMyU,EAAgBD,EAAeF,IAC9Crb,UAAU,iBAFd,kB,IC1RO0b,G,kDAhGX,WAAY3b,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,GAFE,E,0CAOnB,WACI,MAA4BpI,KAAK8H,MAAzB5H,EAAR,EAAQA,KAAMiM,EAAd,EAAcA,UACVpE,EAAY7H,EAAKkU,QAAU,+BAAiC,iBAChE,OAAO,sBAAKrM,UAAWA,EAAhB,UACH,sBAAKA,UAAU,YAAf,UACI,mFAGA,wBAAQ+G,QAAS3C,EAAUuX,YAA3B,sBAIJ,sBAAK3b,UAAU,wBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,wBACIsH,SAAwC,IAA9BnP,EAAKyjB,cAAc7jB,OAC7BgP,QAAS,SAAC/P,GACNA,EAAE6kB,cAAcC,OAChB1X,EAAU2X,YAAY,QAE1B/b,UAAyC,IAA9B7H,EAAKyjB,cAAc7jB,OAAe,2BAA6B,GAN9E,kBAUA,yBACIuP,SAAwC,IAA9BnP,EAAKyjB,cAAc7jB,OAC7BgP,QAAS,SAAC/P,GACNA,EAAE6kB,cAAcC,OAChB1X,EAAU2X,YAAY5jB,EAAK8D,QAE/B+D,UAAyC,IAA9B7H,EAAKyjB,cAAc7jB,OAAe,2BAA6B,GAN9E,wBAQgBI,EAAK8D,YAGzB,sBAAK+D,UAAU,aAAf,UACI,wBACIsH,SAAwC,IAA9BnP,EAAKyjB,cAAc7jB,OAC7BgP,QAAS,SAAC/P,GACNA,EAAE6kB,cAAcC,OAChB1X,EAAU4X,cAAa,IAJ/B,mBASA,wBACI1U,SAAwC,IAA9BnP,EAAKyjB,cAAc7jB,OAC7BgP,QAAS,SAAC/P,GACNA,EAAE6kB,cAAcC,OAChB1X,EAAU4X,cAAa,IAJ/B,uBAUJ,sBAAKhc,UAAU,aAAf,UACI,wBACIsH,SAAwC,IAA9BnP,EAAKyjB,cAAc7jB,OAC7BgP,QAAS,SAAC/P,GACNA,EAAE6kB,cAAcC,OAChB1X,EAAU6X,aAAa,QAJ/B,mBASA,yBACI3U,SAAwC,IAA9BnP,EAAKyjB,cAAc7jB,OAC7BgP,QAAS,SAAC/P,GACNA,EAAE6kB,cAAcC,OAChB1X,EAAU6X,aAAa9jB,EAAK8D,QAJpC,yBAOiB9D,EAAK8D,YAI1B,wBACIqL,SAAwC,IAA9BnP,EAAKyjB,cAAc7jB,OAC7BgP,QAAS3C,EAAU8X,cAFvB,8B,GApFY9a,aC4Cb+a,G,kDA3CX,WAAYpc,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,GAFE,E,yDAMnB,SAAsB+b,EAAMC,GACxB,IAAIC,GAAY,EAGhB,OADAA,GADAA,EAAYA,GAAYrkB,KAAK8H,MAAMwc,SAAWH,EAAKG,QAAUtkB,KAAK8H,MAAMoB,WAAaib,EAAKjb,WACjElJ,KAAK8H,MAAM9B,aAAeme,EAAKne,a,oBAG5D,WAAU,IAAD,SACE8B,EAAS9H,KAAT8H,MACC5H,EAA4B4H,EAA5B5H,KAAMokB,EAAsBxc,EAAtBwc,OAAOte,EAAe8B,EAAf9B,WACjB+B,EAAY7L,EAAWC,aACT,MAAdmoB,EAAO,KAAYvc,GAAa,YAClB,MAAduc,EAAO,KAAYvc,GAAa,YAClB,MAAduc,EAAO,KAAYvc,GAAa,YACpC,IACI7K,GAAU,UAAAJ,EAAgBkJ,UAAhB,eAA6B9I,UAAW,GACtD,OAAO,wBAAQyL,cAAe,kBAAM,EAAKb,MAAMyc,YAAYrkB,IAAO6H,UAAU,gBAArE,SACH,sBAAKA,UAAWA,EAAhB,UACI,qBACIe,UAAU,QACVC,IAAK7I,EAAK+X,UAAUiC,OACpBlR,IAAKlB,EAAMmB,UACXlH,MAAO7E,IAIX,qBAAK6K,UAZa,wBAclB,qBAAKA,UAAuB,QAAZjM,EAAoB,gBAAkB,YAAtD,SACKgM,EAAMoB,oB,GAnCAC,aC2BZqb,G,kDA1BX,WAAY1c,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,GAFE,E,0CAOnB,WACI,IAAIN,EAAQ9H,KAAK8H,MACjB,OAAO,mCACFA,EAAM6N,QAAQ7W,KAAI,SAAAC,GACf,OAAO,wBACHgD,MAAO,CAAEshB,gBAAiBtkB,IAAM+I,EAAMlF,SAAWkF,EAAM2c,cAAgB,IACvE1c,UAAWD,EAAM4c,aACjB5V,QAAS,kBAAMhH,EAAM6c,SAAS5lB,IAH3B,SAMFA,GAFIA,Y,GAhBCoK,aC4EXyb,G,kDAzEX,WAAY9c,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,GAFE,E,0CAQnB,WACI,MAA4BpI,KAAK8H,MAAzB5H,EAAR,EAAQA,KAAMiM,EAAd,EAAcA,UACV0Y,EAAe3kB,EAAK4kB,cAAc9nB,MAAM8B,KAAI,SAACC,GAAD,OAAOA,EAAEc,SACrDklB,EAAiB7kB,EAAK8kB,UAAY,UAAY,GAC9CpW,EAAgB,WAGpB,OAFoC,KAAhC1O,EAAKgL,SAAS+C,OAAOnO,SAAe8O,GAAiB,eACrB,IAAhC1O,EAAKgL,SAAS+C,OAAOnO,SAAc8O,GAAiB,eACjD,gCACH,sBAAK7G,UAAW6G,EAAhB,UACiC,IAAhC1O,EAAKgL,SAAS+C,OAAOnO,OAAe,qBAAKiI,UAAU,UAAf,wBAA4C,KAC5E7H,EAAKgL,SAAS+C,OAAOnP,KAAI,SAAC1C,EAAMsK,GAC7B,IAAI7G,EAAQglB,EAAa9f,QAAQ2B,GAC7BwC,EAAW,GACXD,EAAY,GAChB,IACIA,EAAY3J,EAAaY,EAAKgL,SAAS+C,OAAOnO,QAAQ1D,EAAKyD,OAClC,cAAtBK,EAAK2P,eAA8B3G,EAAWxK,EAAS5C,GAASoD,EAAS6F,QAAQ7E,EAAKG,QAAQjE,EAAKyD,QAC7E,oBAAtBK,EAAK2P,eAAoC3G,EAAW7K,EAAW6B,EAAKgL,SAAS+C,OAAOnO,QAAQxB,eAAelC,EAAKyD,QAC1F,aAAtBK,EAAK2P,eAA6B3G,EAAW7K,EAAW6B,EAAKgL,SAAS+C,OAAOnO,QAAQtB,aAAapC,EAAKyD,QAC7G,MAAMd,IACP,OAAO,cAAC,GAAD,CAEHulB,OAAQzkB,GAAS,EAAIK,EAAK4kB,cAAc9nB,MAAM6C,GAAOmE,MAAQ,MAC7D9D,KAAM9D,EACN8M,SAAUA,EACVlD,WAAY9F,EAAKgL,SAASwE,eAC1BzG,UAAS,8BAAyBA,EAAzB,QACTsb,YAAapY,EAAUtD,aANlBzM,EAAKyD,aAUtB,sBAAKkI,UAAW,uBAAyBgd,EAAzC,UACI,sBAAKhd,UAAW,wBAAhB,UACI,qBAAKA,UAAU,oBAAf,mBAGA,cAAC,GAAD,CACI2c,aAAc,eACdD,cAAe,UACf9O,QAAS,CAAC,EAAG,EAAG,GAChBgP,SAAUxY,EAAU8Y,YACpBriB,SAAU1C,EAAK8D,WAGvB,sBAAK+D,UAAU,yBAAf,UACI,qBAAKA,UAAU,oBAAf,mBAGC7H,EAAKmC,cAAcvD,KAAI,SAACC,GACrB,OAAO,wBAEH+P,QAAS,kBAAM3C,EAAU+Y,mBAAmBnmB,IAC5CgD,MAAO,CAAEshB,gBAAiB,IAAMtkB,EAAEyD,MAAM2iB,SAAS,KAH9C,SAKFpmB,EAAE+B,MAJE/B,EAAEuD,oB,GA3DJ6G,a,kBCD3BsG,GACY,UADZA,GAEQ,UAFRA,GAGQ,UAGR2V,GAAsBvoB,EAAiB,EACvCwoB,GAAY,CACZ,CACI7iB,MAAO,SAEX,CACIA,MAAO,SAEX,CACIA,MAAO,SAEX,CACIA,MAAO,WAGXxF,GAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1D0F,GAAc,CACd,CACInB,KAAM,QACNiB,MAAO,WAEX,CACIjB,KAAM,OACNiB,MAAO,YAGT8iB,GACF,WAAY/Q,EAAOgR,GAA0C,IAAD,OAAjC3C,EAAiC,uDAAxB,EAAG4C,EAAqB,uDAAJ,GAAI,yBAsB5DC,SAAW,WAEPpjB,EAAc3B,SAAQ,SAAAuC,GAClB,IAAIyiB,EAASC,GAAW1iB,EAAc,EAAM,GAC5C,EAAK2iB,MAAMjjB,QAAQ5C,KAAK2lB,EAAOG,gBAEnCR,GAAU3kB,SAAQ,SAAAolB,GACd,IAAIJ,EAASC,GAAWG,EAAgB,EAAM,GAC9C,EAAKF,MAAMG,SAAShmB,KAAK2lB,EAAOG,gBAEpCR,GAAU3kB,SAAQ,SAAAolB,GACd,IAAIJ,EAASC,GAAWG,EAAgB,EAAM,GAC9C,EAAKF,MAAMI,eAAejmB,KAAK2lB,EAAOG,gBAE1C7oB,GAAM0D,SAAQ,SAAAtE,GACV,IAAI6pB,EAAY,EAAKC,UAAY,GAAK,EAAI,EACtCR,EAAS7jB,SAASC,cAAc,UACpC4jB,EAAOH,OAAS,EAAKY,WACrBT,EAAOnR,MAAQ,EAAK2R,UACpB,IAAIE,EAAMV,EAAOW,WAAW,MA4B5B,GA3BgB,MAAZjqB,EAAK,KACLgqB,EAAIE,UAAY7W,GAChB8W,GACIH,EACA,EAAKxD,OAAS,EACd,EAAKA,OAAS,EACd,EAAKsD,UAAY,EAAKtD,OAAS,EAC/B,EAAKuD,WAAa,EAAKvD,OAAS,EAChCqD,GACA,GACA,IAGQ,MAAZ7pB,EAAK,KACLgqB,EAAII,YAAc/W,GAClB2W,EAAIK,UAAY,EAChBF,GACIH,EACA,EAAKxD,OAAS,EACd,EAAKA,OAAS,EACd,EAAKsD,UAAY,EAAKtD,OAAS,EAC/B,EAAKuD,WAAa,EAAKvD,OAAS,EAChCqD,GACA,GACA,IAGQ,MAAZ7pB,EAAK,GAAY,CACjBgqB,EAAIM,YACJN,EAAIE,UAAY7W,GAChB,IAAIkX,EAAa,EAAKR,WAAa,EACnCC,EAAIQ,IAAI,EAAKV,UAAY,EAAI,GAAK,EAAKC,WAAa,EAAI,GAAKQ,EAAY,EAAG,EAAIhjB,KAAKkjB,IACrFT,EAAItjB,OAER,EAAK8iB,MAAM5oB,MAAMZ,GAAQspB,EAAOG,eAEpCxjB,EAAc3B,SAAQ,SAAAuC,GAClB,IAAIyiB,EAASC,GAAW1iB,EAAc,EAAM,GAC5C,EAAK2iB,MAAMkB,cAAc/mB,KAAK2lB,EAAOG,gBAEzCnjB,GAAYhC,SAAQ,SAAAqmB,GAChB,IAAIrB,EAAS7jB,SAASC,cAAc,UACpC,GAAwB,UAApBilB,EAAWxlB,KAAkB,CAC7B,IAAIiK,EAAO,EAAKga,eAAiB,EACjCE,EAAOH,OAAS,EAAKC,eACrBE,EAAOnR,MAAe,EAAP/I,EACf,IAAI4a,EAAMV,EAAOW,WAAW,MAC5BD,EAAIE,UAAYS,EAAWvkB,MAC3B4jB,EAAIQ,IAAIpb,EAAM,EAAKga,eAAiB,EAAGha,EAAM,EAAG,EAAI7H,KAAKkjB,IACzDT,EAAItjB,OACJ,EAAK8iB,MAAMljB,YAAY3C,KAAK2lB,EAAOG,iBAChC,CACHH,EAAOH,OAAS,EAAKA,OACrBG,EAAOnR,MAAQ,EAAKA,MACpB,IAAI6R,EAAMV,EAAOW,WAAW,MAC5BD,EAAIE,UAAYS,EAAWvkB,MAM3B4jB,EAAIM,YACJN,EAAIY,OAAO,EAAG,EAAKzB,QACnBa,EAAIa,OAAO,EAAKf,UAAY,EAAG,EAAKX,QACpCa,EAAIa,OAAO,EAAG,EAAK1B,OAAS,EAAKY,YACjCC,EAAItjB,OACJsjB,EAAIM,YACJN,EAAIY,OAAO,EAAKzS,MAAO,EAAKgR,QAC5Ba,EAAIa,OAAO,EAAKf,UAAY,EAAG,EAAKX,QACpCa,EAAIa,OAAO,EAAK1S,MAAO,EAAKgR,OAAS,EAAKY,YAC1CC,EAAItjB,OACJsjB,EAAIM,YACJN,EAAIY,OAAO,EAAG,GACdZ,EAAIa,OAAO,EAAKf,UAAY,EAAG,GAC/BE,EAAIa,OAAO,EAAG,EAAKd,YACnBC,EAAItjB,OACJsjB,EAAIM,YACJN,EAAIY,OAAO,EAAKzS,MAAO,GACvB6R,EAAIa,OAAO,EAAKf,UAAY,EAAG,GAC/BE,EAAIa,OAAO,EAAK1S,MAAO,EAAK4R,YAC5BC,EAAItjB,OAEJ,EAAK8iB,MAAMljB,YAAY3C,KAAK2lB,EAAOG,kBA3H3C7lB,KAAKuU,MAAQA,EACbvU,KAAKulB,OAASA,EACdvlB,KAAK4lB,MAAQ,CACTjjB,QAAS,GACT3F,MAAO,GACP+oB,SAAU,GACVe,cAAe,GACfd,eAAgB,GAChBtjB,YAAa,IAEjB1C,KAAKknB,aAAe,GACpBlnB,KAAKwlB,eAAiBA,EACtBxlB,KAAK4iB,OAASA,EACd5iB,KAAKkmB,UAAYlmB,KAAKuU,MACtBvU,KAAKmmB,WAAanmB,KAAKulB,OAAS1oB,EAChCmD,KAAKmnB,IAAM,IAAIC,KAAiB,CAC5B7S,MAAOA,EACPgR,OAAQA,IAEZvlB,KAAKylB,YA+Gb,SAASE,GAAW1iB,EAAcwC,EAAM4hB,GACpC,IAAI3B,EAAS7jB,SAASC,cAAc,UACpC4jB,EAAOH,OAAS9f,EAAK8f,OACrBG,EAAOnR,MAAQ9O,EAAK8O,MACpB,IAAI6R,EAAMV,EAAOW,WAAW,MAC5BD,EAAIE,UAAY,IAAMrjB,EAAaT,MAAM2iB,SAAS,IAClDiB,EAAIkB,SAAS,EAAG,EAAG7hB,EAAK8O,MAAO9O,EAAK8f,QACpCa,EAAII,YAA8B,IAAhBa,EAAoB,QAAU,UAChDjB,EAAIK,UAAYY,EAChBjB,EAAIM,YACJN,EAAIY,OAAOvhB,EAAK8O,MAAO,GACvB6R,EAAIa,OAAOxhB,EAAK8O,MAAO9O,EAAK8f,QAC5Ba,EAAImB,SACJnB,EAAII,YAAc,UAClB,IAAK,IAAI9f,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB0f,EAAIK,UAAY,EAChB,IAAIe,EAAI/hB,EAAK0gB,WAAaf,GAAsB1e,EAChD0f,EAAIY,OAAO,EAAGQ,GACdpB,EAAIa,OAAOxhB,EAAK8O,MAAOiT,GAG3B,OADApB,EAAImB,SACG7B,EAGX,SAASa,GAAUH,EAAKqB,EAAGD,EAAGjT,EAAOgR,EAAQmC,EAAQ5kB,EAAMykB,GAOvD,GANsB,qBAAXA,IACPA,GAAS,GAES,qBAAXG,IACPA,EAAS,GAES,kBAAXA,EACPA,EAAS,CAAEC,GAAID,EAAQE,GAAIF,EAAQG,GAAIH,EAAQI,GAAIJ,OAChD,CACH,IAAIK,EAAgB,CAAEJ,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC/C,IAAK,IAAIE,KAAQD,EACbL,EAAOM,GAAQN,EAAOM,IAASD,EAAcC,GAGrD5B,EAAIM,YACJN,EAAIY,OAAOS,EAAIC,EAAOC,GAAIH,GAC1BpB,EAAIa,OAAOQ,EAAIlT,EAAQmT,EAAOE,GAAIJ,GAClCpB,EAAI6B,iBAAiBR,EAAIlT,EAAOiT,EAAGC,EAAIlT,EAAOiT,EAAIE,EAAOE,IACzDxB,EAAIa,OAAOQ,EAAIlT,EAAOiT,EAAIjC,EAASmC,EAAOG,IAC1CzB,EAAI6B,iBAAiBR,EAAIlT,EAAOiT,EAAIjC,EAAQkC,EAAIlT,EAAQmT,EAAOG,GAAIL,EAAIjC,GACvEa,EAAIa,OAAOQ,EAAIC,EAAOI,GAAIN,EAAIjC,GAC9Ba,EAAI6B,iBAAiBR,EAAGD,EAAIjC,EAAQkC,EAAGD,EAAIjC,EAASmC,EAAOI,IAC3D1B,EAAIa,OAAOQ,EAAGD,EAAIE,EAAOC,IACzBvB,EAAI6B,iBAAiBR,EAAGD,EAAGC,EAAIC,EAAOC,GAAIH,GAC1CpB,EAAI8B,YACAplB,GACAsjB,EAAItjB,OAEJykB,GACAnB,EAAImB,S,WCrNRY,GAAwB,GAEtBC,G,kDACF,WAAYtgB,GAAQ,IAAD,uBACf,cAAMA,IA8BVugB,iBAAmB,SAACtpB,GAChB,EAAKupB,eAAgB,EACrB,EAAKC,gBAAiB,EACtB,EAAKC,qBAAuB,GAlCb,EA8CnBzb,eAAiB,SAAC7L,GAEd,OADUA,EAAMiM,MAEZ,IAAK,aAAc,EAAKsb,kBAAkB,GACtC,MACJ,IAAK,YAAa,EAAKA,mBAAmB,KAnD/B,EAyDnBC,YAAc,SAAC3pB,GACPA,EAAE4pB,OAAS,EACX,EAAK7gB,MAAMqE,UAAUyc,aAAa,EAAK9gB,MAAM5H,KAAK0C,SAAW,GAAG,GAEhE,EAAKkF,MAAMqE,UAAUyc,aAAa,EAAK9gB,MAAM5H,KAAK0C,SAAW,GAAG,IA7DrD,EAgEnBiG,YAAc,SAAC9J,EAAGwC,GACd,IAAIkmB,EAAI1oB,EAAEmB,KAAK2oB,OAAOpB,EACtB,GAAa,UAATlmB,EAAkB,CAClB,IAAIunB,EAAa,EAAK1gB,MAAMrF,OAAOwR,MAAQ,EAAKzM,MAAM5H,KAAKyC,QAAQ7C,OAE/DipB,EAAcplB,KAAKC,MAAM6jB,EAAI,EAAKrf,MAAMmM,MAAQuU,EAAa,EAAK1gB,MAAMrF,OAAOwR,OACnF,EAAKzM,MAAMqE,UAAUyc,aAAaG,GAEzB,OAATxnB,IACA,EAAKgnB,gBAAiB,GAEb,SAAThnB,IACA,EAAKgnB,gBAAiB,GAEb,cAAThnB,IACA,EAAKinB,qBAAuBf,EAC5B,EAAKa,eAAgB,IAhFV,EAmFnBU,iBAAmB,SAACjqB,GAChB,IAAI0oB,EAAI1oB,EAAEmB,KAAK2oB,OAAOpB,EACtB,IAA2B,IAAvB,EAAKa,cAAwB,CAE7B,GADA,EAAKW,gBACD,EAAKA,cAAgB,EAAG,OAC5B,EAAKA,cAAgB,EACrB,IAAIC,EAAe,EAAKV,qBAAuBf,EAC3ChhB,EAAS9C,KAAKwlB,KAAKxlB,KAAKylB,IAAI,EAAKZ,qBAAuBf,GAAK,GAC7DhhB,EAAS,IAAGA,EAAS,GACzB,IAAI4iB,EAAQH,GAAgB,EAAI,EAChC,EAAKV,qBAAuBf,EAC5B,IAAI6B,EAAW,EAAKxhB,MAAM5H,KAAK0C,SAAWymB,EAAQ5iB,EAClD,GAAI,EAAKqB,MAAM5H,KAAK0C,WAAa0mB,EAAU,OACvCA,EAAW,IAAGA,EAAW,GACzBA,EAAW,EAAKxhB,MAAM5H,KAAKyC,QAAQ7C,SAAQwpB,EAAW,EAAKxhB,MAAM5H,KAAKyC,QAAQ7C,OAAS,GAC3F,EAAKgI,MAAMqE,UAAUyc,aAAaU,GAAU,KAlGjC,EAqGnBb,kBAAoB,SAACc,GACjB,IAEIxC,EAFA9E,EAAiB,EAAKna,MAAM5H,KAAK0C,SACjCD,EAAU,EAAKmF,MAAM5H,KAAKyC,QAE1BD,EAAc,EAAKoF,MAAM5H,KAAKwC,aAE9BqkB,EADc,IAAdwC,EACa7mB,EAAYvF,QAAO,SAACqsB,GAAD,OAAOA,EAAIvH,KAAgBb,MAAK,SAAC3X,EAAG2U,GAAJ,OAAU3U,EAAI2U,KAEjE1b,EAAYvF,QAAO,SAACqsB,GAAD,OAAOA,EAAIvH,KAAgBb,MAAK,SAAC3X,EAAG2U,GAAJ,OAAUA,EAAI3U,MAEnE3J,QAAU,GACjB6C,EAAQ7C,QAAUinB,EAAW,IAAMA,EAAW,IAAM,GACpD,EAAKjf,MAAMqE,UAAUyc,aAAa7B,EAAW,KAjHtC,EAsHnB0C,YAAc,SAAC1qB,GACX,GAAI,EAAKwpB,eAAgB,CAErB,GADA,EAAKU,gBACD,EAAKA,cAAgB,EAAG,OAC5B,EAAKA,cAAgB,EACrB,IAAIH,EAAa,EAAK1gB,MAAMrF,OAAOwR,MAAQ,EAAKzM,MAAM5H,KAAKyC,QAAQ7C,OAC/D2nB,EAAI1oB,EAAEmB,KAAK2oB,OAAOpB,EAClBsB,EAAcplB,KAAKC,MAAM6jB,EAAI,EAAKrf,MAAMmM,MAAQuU,EAAa,EAAK1gB,MAAMrF,OAAOwR,OACnF,EAAKzM,MAAMqE,UAAUyc,aAAaG,GAAa,KA5HnD,IAAIW,EAAQ7nB,SAASG,KAAK2nB,wBAC1B,EAAKD,MAAQA,EACbvB,GAAwBtiB,OAAO,EAAKiC,MAAM5H,KAAKyU,SAASkC,iBAAiB5X,OACzE,IAsRoB2qB,EAtRhBrV,EAAQsV,GAA0B,IAAdH,EAAMnV,OAC1BgR,EAASsE,GAA2B,IAAfH,EAAMnE,QAE3B9oB,OAAOqtB,OAAOvV,MAAQmV,EAAMnE,SAC5BhR,EAAQsV,GAA2B,IAAfH,EAAMnE,QAC1BA,EAASsE,GAA0B,IAAdH,EAAMnV,QAEhB,QAAZzY,IAAmBypB,EAASsE,GAAqB,IAATtE,IAC3C,EAAKnd,MAAQ,CACTmM,MAAOA,EACPgR,OAAQA,EACRxiB,OAAQ,CACJwR,OA0QYqV,EA1QcC,GAAYtV,GA2Q3CsV,GAAYD,EAAczB,KA1QrB5C,OAAQA,GAEZC,eAAgB5O,OAAa,GAAK,GAClCmT,mBAAoB,GAExB,EAAKC,UAAYC,IAAMC,YACvB,IAAItH,EAAShM,OAAa,EAAI,EAxBf,OAyBf,EAAKgP,MAAQ,IAAIN,GAAc,EAAKld,MAAMrF,OAAOwR,MAAOgR,EAAQ3C,EAAQ,EAAKxa,MAAMod,gBAAgBI,MACnG,EAAK0C,eAAgB,EACrB,EAAKC,gBAAiB,EACtB,EAAKC,qBAAuB,EAC5B,EAAKS,cAAgB,EA7BN,E,qDAoCnB,WACIxsB,OAAO4R,iBAAiB,YAAarO,KAAKqoB,kBAC1C5rB,OAAO4R,iBAAiB,UAAWrO,KAAK+M,gBACxC/M,KAAKgqB,UAAUG,QAAQC,QAAQ/b,iBAAiB,QAASrO,KAAK0oB,e,kCAElE,WACIjsB,OAAOgS,oBAAoB,YAAazO,KAAKqoB,kBAC7C5rB,OAAOgS,oBAAoB,UAAWzO,KAAK+M,gBAC3C/M,KAAKgqB,UAAUG,QAAQC,QAAQ3b,oBAAoB,QAASzO,KAAK0oB,e,oBAsFrE,WAAU,IAAD,OACD2B,EAAIrqB,KAAKoI,MAIb,EAA4BpI,KAAK8H,MAAzB5H,EAAR,EAAQA,KAAMiM,EAAd,EAAcA,UACVud,EAAQ1pB,KAAKoI,MAAMrF,OACnBunB,GAAQpqB,EAAK0C,SAAWulB,GAAwB,EAAI,IAAOuB,EAAMnV,MACjEiR,EAAiBxlB,KAAKoI,MAAMod,eAC5B+E,EAAU,EACVC,GAAW,EACX5E,EAAQ5lB,KAAK4lB,MACbjP,EAAY9Q,OAAO3F,EAAKyU,SAASgC,UAAU1X,OAC3CwrB,EAA6B,IAAd9T,EAAkB,GAAK,EAAIA,EAAY,EACtD+T,EAAsB1qB,KAAKoI,MAAMmM,MAAQrU,EAAKyC,QAAQ7C,OACtD6qB,EAAYhnB,KAAKC,MAAM8mB,GAAuBvC,GAAwB,IACtEwC,EAAY3qB,KAAKoI,MAAMmM,QAAOoW,EAAY3qB,KAAKoI,MAAMmM,OACzD,IAAIqW,EAAWF,EAAsBxqB,EAAK0C,UAAYulB,GAAwB,EAAI,GAAKuC,EACvF,OAAO,sBAAK3iB,UAAU,iBAAiBhG,MAAO,CAAEwS,MAAO8V,EAAE9V,MAAQ,GAA1D,UACH,cAAC,SAAD,CACIA,MAAO8V,EAAE9V,MACTgR,OAAQ8E,EAAE9E,OACVsF,KAAK,EACLC,yBAAyB,EACzBnV,QAtBU,CACd0N,gBAAiB,SAuBb0H,IAAK/qB,KAAKgqB,UAPd,SASI,cAAC,aAAD,CACInP,OAAQ,CAAC,GAAK,IACd4M,EAAG6C,EACHU,aAAa,EACbC,YAAa,SAAClsB,GAAD,OAAO,EAAK8J,YAAY9J,EAAG,cACxCmsB,YAAa,SAACnsB,GAAD,OAAO,EAAKiqB,iBAAiBjqB,IAL9C,SAOKmB,EAAKyC,QAAQ7D,KAAI,SAACiE,EAAQ2D,GAMvB,GALI6jB,EAAUE,IACVD,GAAYA,EACZD,EAAU,GAEdA,KAuHxB,SAAmBY,EAAKC,GACpB,IAAI9kB,EAAY6hB,GAAwB,EAAI,EACxCkD,EAAa,CAACD,EAAa9kB,EAAW8kB,EAAa9kB,GACvD,OAAO+kB,EAAW,GAAKF,GAAOA,EAAME,EAAW,GAzHtBC,CAAU5kB,EAAGxG,EAAK0C,UAAW,OAAO,KACzC,IAAI2oB,GAAsB7kB,EAAI,GAAK,IAAM,EAAIkf,EAAMkB,cAAgBlB,EAAMjjB,QAErE6oB,IADiB9kB,EAAI,GAAK,IAAM,EAAIkf,EAAMI,eAAiBJ,EAAMG,UACtClgB,OAAO2kB,IAClCzS,EAAqC,IAAxBhV,EAAOE,aAAqBuoB,EAAaD,EAAmBxoB,EAAOE,cACpF,OAAO,cAAC,GAAD,CACH2iB,MAAOA,EAEP1lB,KAAM6C,EACNlD,MAAO6G,EACPgjB,MAAOA,EACP+B,gBAAiB1T,EACjB2T,gBAAiBxrB,EAAKyrB,aAAatmB,SAASqB,GAC5CvE,MAAOgK,EAAUyc,aACjBgD,WAAYllB,IAAMxG,EAAK0C,SACvBipB,aAAc3rB,EAAKwC,YAAY2C,SAASqB,IARnCA,SAvBZ1G,KAAKoI,MAAMmM,OAsCpB,sBAAKxM,UAAU,mBAAmBhG,MAAO,CAAEwjB,OAAQvlB,KAAKoI,MAAMod,gBAA9D,UACI,qBAAKzd,UAAU,kBAAkB+G,QAAS,kBAAM,EAAK2Z,mBAAmB,IAAxE,SACI,cAAC,KAAD,CAAiB1Z,KAAM+c,SAE3B,qBAAK/jB,UAAU,kBAAkB+G,QAAS,kBAAM,EAAK2Z,kBAAkB,IAAvE,SACI,cAAC,KAAD,CAAiB1Z,KAAMgd,SAE3B,eAAC,SAAD,CACIxX,MAAO8V,EAAE9V,MACTgR,OAAQC,EACR7P,QAAS,CAAEqW,WAAW,EAAMC,aAAa,EAAK5I,gBAAiB,SAC/DwH,KAAK,EACLC,yBAAyB,EAL7B,UAOI,eAAC,aAAD,CACIvW,MAAOvU,KAAKoI,MAAMmM,MAClBgR,OAAQvlB,KAAKoI,MAAMod,eACnBwF,aAAa,EACbkB,WAAY,SAACntB,GAAD,OAAO,EAAK8J,YAAY9J,EAAG,UACvCksB,YAAa,SAAClsB,GAAD,OAAO,EAAK8J,YAAY9J,EAAG,SACxCotB,UAAW,SAACptB,GAAD,OAAO,EAAK8J,YAAY9J,EAAG,OACtCmsB,YAAalrB,KAAKypB,YAPtB,UASI,cAAC,YAAD,CAAU2C,KAAM,SAACrtB,GAuBzC,IAAestB,EAAG9X,EAAOgR,EAAV8G,EAvBwCttB,EAuBrCwV,EAvBwC,EAAKnM,MAAMmM,MAuB5CgR,EAvBmD,EAAKnd,MAAMod,eAwBnF6G,EAAEC,QACFD,EAAEE,UAAU,QAAU,GACtBF,EAAEG,SAAS,EAAG,EAAGjY,EAAOgR,MAzBHrlB,EAAKwC,YAAY5D,KAAI,SAAAioB,GAClB,OAAO,cAAC,UAAD,CACH0F,MAAO7G,EAAMljB,YAAY,GAEzB+kB,EAAGiD,EAAsB3D,GADpBA,SAOjB,cAAC,YAAD,CAAUqF,KAAM,SAACrtB,GAAD,OAiBjBstB,EAjBkCttB,EAiB/BwV,EAjBkCoW,EAiB3BpF,EAjBsC,EAAKnd,MAAMod,eAkB1E6G,EAAEC,QACFD,EAAEK,UAAU,EAAG,QAAU,SACzBL,EAAEM,gBAAgB,EAAG,EAAGpY,EAAQ,EAAGgR,EAAS,EAAG,GAHnD,IAAmB8G,EAAG9X,EAAOgR,GAjBkEkC,EAAGmD,EAAUpD,EAAG,OAI/F,qBAAKzf,UAAU,kBAAkB+G,QAAS3C,EAAUygB,iBAApD,SACI,cAAC,KAAD,CAAiB7d,KAAM7O,EAAKwC,YAAY2C,SAASnF,EAAK0C,UAAYiqB,KAAgBC,mB,GAzOzE3jB,aA2P7B,SAASnG,GAAO8E,GACZ,IAAM5H,EAAiG4H,EAAjG5H,KAAML,EAA2FiI,EAA3FjI,MAAO6pB,EAAoF5hB,EAApF4hB,MAAOvnB,EAA6E2F,EAA7E3F,MAAOyjB,EAAsE9d,EAAtE8d,MAAO6F,EAA+D3jB,EAA/D2jB,gBAAiBI,EAA8C/jB,EAA9C+jB,aAAcD,EAAgC9jB,EAAhC8jB,WAAYF,EAAoB5jB,EAApB4jB,gBACnF,OAAO,eAAC,aAAD,CACHQ,WAAY,kBAAM/pB,EAAMtC,IACxBmrB,aAAa,EACbvD,EAAGiC,EAAMnV,MAAQ1U,EAHd,UAKH,eAAC,UAAD,CACI4sB,MAAOhB,EACPsB,qBAAqB,EAFzB,UAIKnB,GAAcF,EAAkB,cAAC,UAAD,CAC7Be,MAAOf,IAAoBE,EAAYhG,EAAMG,SAAS,GAAKH,EAAMG,SAAS,GAC1EiH,MAAOtB,EAAiB,GAAM,GAC9BuB,OAAQ,IAEA,KACXpB,EAAe,cAAC,UAAD,CACZY,MAAO7G,EAAMljB,YAAY,KAEjB,QAEfxC,EAAKlD,MAAM8B,KAAI,SAAC1C,GACb,OAAO,cAAC,UAAD,CAEHqwB,MAAO7G,EAAM5oB,MAAMZ,EAAK4H,OACxBwjB,EAAGroB,EAAsB/C,EAAKyD,OAAS6pB,EAAMnE,OAAS1oB,GAFjDT,EAAKyD,aAY1B,SAASgqB,GAAYqD,GACjB,OAAO,EAAIvpB,KAAKwpB,MAAMD,EAAM,GAOjB9E,UC1ST5X,G,kDACF,WAAY1I,GAAQ,IAAD,8BACf,cAAMA,IAaViF,eAAiB,SAAC7L,GACd,IAAIuD,EAAMvD,EAAMiM,KAChB,GAAuC,UAAnCtL,SAASoL,cAAcC,SAGlB,WADDzI,EAEG,EAAK2D,MAAM4J,MAAM,EAAKlK,MAAMqE,UAAUihB,oBACzC,EAAKxjB,SAAS,CAAEoI,MAAM,KArBf,EA2BnBH,WAAa,SAACC,GACc,mBAAbA,IAAwBA,OAAW3Q,GAC9C,IAAI4Q,OAAwB5Q,IAAb2Q,EAAyBA,GAAY,EAAK1J,MAAM4J,KAC/D,EAAKpI,SAAS,CACVoI,KAAMD,KAEO,IAAbA,GACA,EAAKjK,MAAMqE,UAAUihB,qBAlCV,EAqCnBhb,uBAAyB,SAACpT,GACtB,EAAK4K,SAAS,CACVyI,iBAAkBrT,KAvCP,EA0CnBiT,eAAiB,SAACC,GACd,GAAIA,IAAc,EAAK9J,MAAM+J,cAAgB,EAAK/J,MAAM4J,KACpD,OAAO,EAAKpI,SAAS,CACjBoI,MAAM,IAGd,EAAKpI,SAAS,CACVuI,aAAcD,EACdF,MAAM,KAlDK,EAqDnBa,aAAe,SAACzP,GACRA,EAAK0P,YAAY1P,EAAK0P,IACtB1P,EAAKlD,KAAKK,oBACV6C,EAAOU,EAA0BV,IAErC,IAAI2P,EAAW3P,EAAKpE,KACJ,QAAZlD,IAEAsH,EAAOa,EAAoBb,IAE1BP,MAAMuC,QAAQhC,KAAOA,EAAO,CAACA,IAClCA,EAAK1C,SAAQ,SAAAsS,GACTA,EAAM9S,KAAKpE,QAAUA,KAEzB,IAAI4V,EAAOvN,KAAKE,UAAUjB,IACL,IAAI9B,GACVE,SAASkQ,EAAxB,UAAiCqB,EAAjC,YAA6CjX,EAAQmX,cAArD,eACA,IAAIrS,EAAY,UAAW,mBAAmBI,WApE9C,EAAKoH,MAAQ,CACT4J,MAAM,EACNG,aAAc,WACdE,iBAAkB,YALP,E,qDAQnB,WACI5V,OAAO4R,iBAAiB,UAAWrO,KAAK+M,kB,kCAE5C,WACItQ,OAAOgS,oBAAoB,UAAWzO,KAAK+M,kB,oBA4D/C,WAAU,IAAD,OACL,EAA4B/M,KAAK8H,MAAzB5H,EAAR,EAAQA,KAAMiM,EAAd,EAAcA,UACVqH,EAAYxT,KAAKoI,MAAM4J,KAAO,sBAAwB,YACtDG,EAAenS,KAAKoI,MAAM+J,aACtB+P,EAAyH/V,EAAzH+V,SAAUnM,EAA+G5J,EAA/G4J,WAAYsX,EAAmGlhB,EAAnGkhB,WAAY3Z,EAAuFvH,EAAvFuH,WAAYD,EAA2EtH,EAA3EsH,oBAAqB8E,EAAsDpM,EAAtDoM,aAAc+U,EAAwCnhB,EAAxCmhB,cAAe3K,EAAyBxW,EAAzBwW,qBACpG4K,EAAgB,CAChBrL,SAAUA,EACVnM,WAAYA,EACZlE,WAAY7R,KAAK6R,WACjBgB,aAAc7S,KAAK6S,cAEnBO,EAAQlT,EAAKkT,MAAMjW,QAAO,SAAAiG,GAAI,cAAI,UAACA,EAAKlD,YAAN,aAAC,EAAWK,sBAC9CoT,EAAgBzT,EAAKkT,MAAMjW,QAAO,SAAAiG,GAAI,uBAAIA,EAAKlD,YAAT,aAAI,EAAWK,qBACrDitB,EAAattB,EAAKuK,WAAa,4BAA8B,kBAC7DgjB,EAAYvtB,EAAKwtB,SAAW,oBAAsB,OACtD,OAAO,sBAAK3lB,UAAU,eAAf,UACH,sBAAKA,UAAW0lB,EAAhB,UACI,cAAC,GAAD,CAAW3Z,OAAQ9T,KAAK6R,aACxB,cAAC,GAAD,CAAUtQ,KAAK,OAAOuS,OAAQ,kBAAMuZ,EAAWntB,EAAKytB,cAAc5lB,UAAWylB,EAA7E,SACI,cAAC,KAAD,CAAiBze,KAAM6e,KAAQ7lB,UAAU,WAE7C,cAAC,GAAD,CAAUxG,KAAK,QAAQuS,OAAQ9T,KAAKiS,eAApC,SACI,cAAC,KAAD,CAAiBlD,KAAMiF,KAASjM,UAAU,WAE9C,cAAC,GAAD,CAAUxG,KAAK,WAAWuS,OAAQ9T,KAAKiS,eAAvC,SACI,cAAC,KAAD,CAAiBlD,KAAMkF,KAAOlM,UAAU,WAE5C,cAAC,GAAD,CAAUxG,KAAK,WAAWuS,OAAQ,kBAAMJ,EAAW,KAAK3L,UAAU,WAAlE,SACI,cAAC,KAAD,CAAiBgH,KAAMmF,KAAenM,UAAU,cAGxD,sBAAKA,UAAWyL,EAAhB,UACI,cAAC,GAAD,CAAW3S,MAAM,eAAeuT,QAASjC,IAEzC,eAAC,GAAD,CAAWtR,MAAM,QAAQuT,QAASjC,EAAlC,UACI,sBAAKpK,UAAU,wBAAf,UACI,wBAAQA,UAAU,iBAAiB+G,QAAS,WAAQ6T,GAAqB,GAAO,EAAK9Q,cAArF,8BAGA,wBAAQ9J,UAAU,iBAAiB+G,QAASwe,EAA5C,gCAIJ,sBAAKvlB,UAAU,uBAAf,UACI,wBACIA,UAA2C,aAAhC/H,KAAKoI,MAAMiK,iBAAkC,4BAA8B,eACtFvD,QAAS,kBAAM,EAAKsD,uBAAuB,aAF/C,sBAMA,wBACIrK,UAA2C,aAAhC/H,KAAKoI,MAAMiK,iBAAkC,4BAA8B,eACtFvD,QAAS,kBAAM,EAAKsD,uBAAuB,aAF/C,yBAOJ,qBAAKrK,UAAU,gBAAgBhG,MAAO,CAACwN,aAAc,UAArD,SACqC,aAAhCvP,KAAKoI,MAAMiK,iBACNe,EAAMtU,KAAI,SAAAsE,GACR,OAAO,cAAC,GAAD,CACHlD,KAAMkD,EAEN+I,UAAWohB,GADNnqB,EAAKpE,SAMhB2U,EAAc7U,KAAI,SAAAsE,GAChB,OAAO,cAAC,GAAD,CACHlD,KAAMkD,EAEN+I,UAAWohB,GADNnqB,EAAKpE,WAQ1B,qBAAK+I,UAAU,wBAAwBhG,MAAO,CAACsO,UAAW,QAA1D,SACI,wBACItI,UAAS,oCAA+B7H,EAAK2d,iBAAmB,WAAa,IAC7E/O,QAAS,kBAAM3C,EAAU0hB,qBAAqB3tB,EAAK2d,mBAFvD,SAIS3d,EAAK2d,iBAAmB,uBAAyB,+BAKlE,eAAC,GAAD,CAAWhd,MAAM,WAAWuT,QAASjC,EAArC,UACK3R,OAAOC,QAAQP,EAAKyU,UAAU7V,KAAI,YAAkB,IAAD,oBAAf2F,EAAe,KAAVvE,EAAU,KAChD,OAAO,cAAC,GAAD,CAEH2U,OAAQpQ,EACRvE,KAAMA,EACNqY,aAAcA,EACdzD,OAAQrB,GAJHhP,EAAMvE,EAAKjB,WAStB8V,MAAgB,mBAAGhN,UAAU,gBAAgBiN,KAAK,qCAAqClI,OAAO,SAASmI,IAAI,aAA3F,qC,GA9KnB9L,aAyLnB,SAASgL,GAAUrM,GACf,IAAIC,EAAYD,EAAMsM,UAAYtM,EAAMjH,MAAQ,gCAAkC,aAClF,OAAO,sBAAKkH,UAAWA,EAAhB,UACH,qBAAKA,UAAU,aAAf,SACKD,EAAMjH,QAEX,qBAAKkH,UAAU,wBAAf,SACKD,EAAMyI,cAInB,SAASsD,GAAU/L,GACf,OAAO,qBAAKgH,QAAS,kBAAMhH,EAAMgM,QAAO,IAAQ/L,UAAU,uBAAnD,SACH,cAAC,KAAD,CAAiBgH,KAAMsG,KAAStN,UAAU,WAIlD,SAASsM,GAAQvM,GACb,IAAQ5H,EAAoB4H,EAApB5H,KAAMiM,EAAcrE,EAAdqE,UACN4J,EAAmD5J,EAAnD4J,WAAYlE,EAAuC1F,EAAvC0F,WAAYqQ,EAA2B/V,EAA3B+V,SAAUrP,EAAiB1G,EAAjB0G,aAC1C,OAAO,sBAAK9K,UAAU,WAAf,UACH,qBAAKA,UAAU,YAAY+G,QAAS,WAChCoT,EAAShiB,GACT2R,GAAW,IAFf,SAIK3R,EAAKlB,OAEV,sBAAK+I,UAAU,uBAAf,UACI,wBAAQA,UAAU,cAAc+G,QAAS,kBAAM+D,EAAa3S,IAA5D,SACI,cAAC,KAAD,CAAiB6O,KAAMoB,SAE3B,wBAAQpI,UAAU,cAAc+G,QAAS,kBAAMiH,EAAW7V,EAAKlB,OAA/D,SACI,cAAC,KAAD,CAAiB+P,KAAMiH,KAASxT,MAAM,oBAMtD,SAASoS,GAAY9M,GACjB,IAAQ5H,EAAuC4H,EAAvC5H,KAAM4U,EAAiChN,EAAjCgN,OAAQD,EAAyB/M,EAAzB+M,OAAQ0D,EAAiBzQ,EAAjByQ,aAC9B,EAA4B/C,mBAAStV,EAAKjB,OAA1C,oBAAOwW,EAAP,KAAkBC,EAAlB,KACA,EAAmCF,mBAAStV,EAAKsW,QAAjD,oBAAOsX,EAAP,KAAmBC,EAAnB,KA8BA,SAASC,EAAiBjvB,GACtB,IAAIE,EAAQF,EAAE+N,OAAO7N,MACrBiB,EAAKjB,MAAQA,EAKb6V,EAJU,CACNrQ,IAAKoQ,EACL3U,KAAMA,IAad,MAAe,kBAAX2U,EAAmC,KAChC,sBAAK9M,UAAU,eAAf,UACH,8BACK7H,EAAKlB,OAEK,WAAdkB,EAAKqB,KACA,wBAAQtC,MAAOiB,EAAKjB,MAClBiQ,SAAU8e,EADZ,SAGG9tB,EAAKyV,QAAQ7W,KAAI,SAAAC,GACd,OAAO,wBAAQE,MAAOF,EAAf,SAA2BA,GAAJA,QAGpC,KAEL,CAAC,SAAU,OAAQ,YAAYsG,SAASnF,EAAKqB,MAC1C,uBACIA,KAAMrB,EAAKqB,KACXtC,MAAOwW,EACPG,QAASH,EACTvG,SAnEZ,SAAsBnQ,GAClB,IAAI6C,EAAK7C,EAAE+N,OACP7N,EAAsB,aAAdiB,EAAKqB,KAAsBK,EAAGgU,QAAUhU,EAAG3C,MACvD,KAAkB,WAAdiB,EAAKqB,OACLtC,EAAQ4G,OAAO5G,GACfF,EAAE+N,OAAO7N,MAAQ,GACbA,EAAQiB,EAAKoG,UAAU,IAAMrH,EAAQiB,EAAKoG,UAAU,KAH5D,CAOA,GAAe,aAAZ1E,EAAGL,KACFrB,EAAKjB,MAAQA,EAKb6V,EAJU,CACNrQ,IAAKoQ,EACL3U,SAIRwV,EAAOzW,KAkDC4W,OAhDZ,WACQ3V,EAAKjB,QAAUwW,IACnBvV,EAAKjB,MAAQwW,EAKbX,EAJU,CACNrQ,IAAKoQ,EACL3U,KAAMA,QA6CJ,KAES,eAAdA,EAAKqB,KACA,sBAAKwG,UAAU,oBAAf,UACE,wBAAQ9I,MAAOiB,EAAKjB,MAChBiQ,SAAU8e,EADd,SAGK9tB,EAAKyV,QAAQ7W,KAAI,SAAAC,GACd,OAAO,wBAAQE,MAAOF,EAAf,SAA2BA,GAAJA,QAItC,uBACIwC,KAAK,QACL0N,IAAK,EACLE,IAAK,IACLlQ,MAAO6uB,EACP5e,SAjDhB,SAAsBnQ,GAClBgvB,EAAaloB,OAAO9G,EAAE+N,OAAO7N,SAiDjBgvB,YA/ChB,WACI1V,EAAa,CACT9T,IAAKoQ,EACL5V,MAAO6uB,UA+CL,QAKd,SAAS/Y,KAEL,OADY5Q,KAAKC,MAAM+R,eAAeC,QAAQ,U,IAI5CH,G,4JACF,WAAU,IAAD,OACDlO,EAAY/H,KAAK8H,MAAMC,UAAX,oBAAoC/H,KAAK8H,MAAMC,WAAc,YAC7E,OAAO,qBACHA,UAAWA,EACX+G,QAAS,kBAAM,EAAKhH,MAAMgM,OAAO,EAAKhM,MAAMvG,OAFzC,SAIFvB,KAAK8H,MAAMyI,e,GAPDpH,aAWRqH,MChUT0d,G,kDACF,WAAYpmB,GAAQ,IAAD,uBACf,cAAMA,IA6DVtI,KA9DmB,sBA8DZ,8BAAAiK,EAAA,6DACH,EAAKyT,YAEGvI,EAAa,EAAKvM,MAAlBuM,SACFwZ,EAAW,CACb,EAAK1S,eAAe9G,EAAS3O,WAAW/G,MAAO,GAC/C,EAAKwc,eAAe9G,EAAS8B,OAAOxX,MAAO,GAC3C,EAAKwc,eAAe9G,EAAS+B,OAAOzX,MAAO,IAP5C,SASGuI,QAAQoS,IAAIuU,GATf,uBAUG,EAAKzS,aAVR,OAWH,EAAK0S,sBAAsBzZ,EAASmC,SAAS7X,OAX1C,2CA9DY,EAiFnBovB,eAAiB,WACb,EAAKC,UACD,EAAKA,QAAU,GAAK,EAAKlmB,MAAMuM,SAASoC,SAAS9X,OACpB,aAAzB,EAAKmJ,MAAMhF,KAAKpE,MAChB,EAAKquB,WAAW,EAAKjlB,MAAMhF,OArFpB,EA+GnBoZ,YAAc,WACV,IAAIC,EAAiBC,aAAatG,QAAQta,EAAU,sBACpD,IACI2gB,EAAiBtY,KAAKC,MAAMqY,GAC9B,MAAO1d,GACL0d,EAAiB,KAErB,OAAuB,OAAnBA,EACIA,EAAenG,gBAAkBD,GAAiBC,eAClD,EAAKqG,eAAetG,IACbA,IAEJoG,EAEJpG,IA7HQ,EAgInBsG,eAAiB,SAAC7K,GACd,IAAI1J,EAEAA,OADajH,IAAb2Q,EACQA,EAEA,EAAK1J,MAAMuM,SAEvB+H,aAAaM,QAAQlhB,EAAU,qBAAsBqI,KAAKE,UAAU+D,KAvIrD,EA0InBqL,oBAAsB,SAACwJ,GACnB,IAAQ7U,EAAR,eAAQA,MACJuM,EAAWvM,EAAMuM,SACjBzU,EAAO+c,EAAQ/c,KACnByU,EAASsI,EAAQxY,KAAKxF,MAAQiB,EAAKjB,MAC/BiB,EAAKqW,cACLnO,EAAMhF,KAAK6Z,EAAQxY,KAAOvE,EAAKjB,OAEf,eAAhBge,EAAQxY,KAAsB,EAAKgX,eAAevb,EAAKjB,MAAO,GAC9C,WAAhBge,EAAQxY,KAAkB,EAAKgX,eAAevb,EAAKjB,MAAO,GAC1C,WAAhBge,EAAQxY,KAAkB,EAAKgX,eAAevb,EAAKjB,MAAO,GAC1C,aAAhBge,EAAQxY,KAAoB,EAAK2pB,sBAAsBluB,EAAKjB,OAChE,EAAK2K,SAAS,CACV+K,SAAUA,EACVvR,KAAM,EAAKgF,MAAMhF,OAClB,WACC,EAAKuZ,qBA1JM,EA8JnBlB,eA9JmB,uCA8JF,WAAOzc,EAAMgF,GAAb,uBAAAyF,EAAA,yDACLkL,EAAa,EAAKvM,MAAlBuM,SACM,IAAV3Q,EAFS,wBAGT,EAAKoE,MAAMpC,WAAW+T,SAClB6C,EAAgB,IAAIvE,GAAWrZ,GAJ1B,SAKH4d,EAAcxD,OALX,OAMTwD,EAAcrE,aAAa5D,EAAS3O,WAAWwQ,QAC/C,EAAK5M,SAAS,CACV5D,WAAY4W,IARP,+BAWLA,EAAgB,IAAIvE,GAAWrZ,IAC/BslB,EAAS,EAAKlc,MAAMkc,QACjBtgB,EAAM,GAAG+V,SAChBuK,EAAOtgB,EAAQ,GAAK4Y,EAdX,UAeHA,EAAcxD,OAfX,QAgBTwD,EAAcrE,aAAd,UAA2B5D,EAAS,QAAD,OAAS3Q,WAA5C,aAA2B,EAA2BwS,QACtD,EAAK5M,SAAS,CACV0a,OAAQA,IAlBH,QAqBb,EAAK8J,sBAAsBzZ,EAASmC,SAAS7X,OArBhC,4CA9JE,0DAqLnBsZ,aAAe,SAAClV,GACZ,IAAIsR,EAAW,EAAKvM,MAAMuM,SACV,eAAZtR,EAAIoB,MACJkQ,EAAS3O,WAAWwQ,OAASnT,EAAIpE,MACjC,EAAKmJ,MAAMpC,WAAWuS,aAAalV,EAAIpE,QAE3B,WAAZoE,EAAIoB,MACJkQ,EAAS8B,OAAOD,OAASnT,EAAIpE,MAC7B,EAAKmJ,MAAMkc,OAAO,GAAG/L,aAAalV,EAAIpE,QAE1B,WAAZoE,EAAIoB,MACJkQ,EAAS+B,OAAOF,OAASnT,EAAIpE,MAC7B,EAAKmJ,MAAMkc,OAAO,GAAG/L,aAAalV,EAAIpE,QAE1C,EAAK2K,SAAS,CACV+K,SAAUA,IACX,kBAAM,EAAKgI,qBArMC,EAuMnByR,sBAAwB,SAAC/R,GACrB,MAA+B,EAAKjU,MAA5BpC,EAAR,EAAQA,WAAYse,EAApB,EAAoBA,OACA,CAACte,EAAYse,EAAO,GAAIA,EAAO,IACvC5jB,SAAQ,SAAA6tB,GAChB,GAAIlS,EAAW,CACX,IAAK,EAAKC,WAAY,OAAOtgB,QAAQC,IAAI,8BACzCsyB,EAAIpV,aACJoV,EAAIxV,QAAQ,EAAKuD,iBAEjBiS,EAAIpV,aACJoV,EAAIxV,QAAQ,EAAKvc,aAAa+f,iBAjNvB,EAqNnBsR,oBArNmB,uCAqNE,WAAO/b,GAAP,+BAAArI,EAAA,yDACbqI,EADa,uBAEb,EAAKlI,SAAS,CAAEiU,kBAAkB,IAFrB,kBAGN,EAAK2Q,YAAW,IAHV,gBAKc,EAAKpmB,MAA5BpC,EALS,EAKTA,WAAYse,EALH,EAKGA,OACd1nB,EAAc,CAACoJ,EAAYse,EAAO,GAAIA,EAAO,IAC7CjI,EAAY,EAAKjU,MAAMuM,SAASmC,SAAS7X,MAP9B,iBAQTob,EARS,EAQTA,SACJgC,EACA,EAAKyB,iBAAiB/E,QAAQsB,EAASP,MAEvCld,EAAY8D,SAAQ,SAAAsF,GAChBA,EAAW+S,QAAQsB,EAASP,SAGpCO,EAAS5a,QACT,EAAKmK,SAAS,CAAEiU,kBAAkB,IAjBjB,UAkBX,EAAK2Q,YAAW,GAlBL,yBAmBKnU,EAASnB,OAnBd,eAmBbsE,EAnBa,OAoBjB,EAAK5T,SAAS,CAAEiU,kBAAkB,IApBjB,UAqBIzG,GAAY,+CArBhB,SAqBbzE,EArBa,SAsBF0H,EAAS7Y,SAASgc,EAAUtd,KAAMyS,EAAW,QAC5D,EAAKmL,iBAAiB3E,aACtB,EAAK2E,iBAAiB/E,QAAQvc,EAAa+f,aAC3C,EAAK6R,sBAAsB/R,GAzBV,4CArNF,wDAgPnBtP,eAAiB,SAAC7L,GACd,GAAuC,UAAnCW,SAASoL,cAAcC,QAA3B,CACA,MAA8C,EAAK9E,MAA3CpC,EAAR,EAAQA,WAAWhC,EAAnB,EAAmBA,MAAMsgB,EAAzB,EAAyBA,OAAOU,EAAhC,EAAgCA,UAC5BvgB,EAAMvD,EAAMiM,KAEhB,GAD2B6X,GAAa9jB,EAAMutB,SACtB,CACpB,IAAIC,EAAM,OAAGjqB,QAAH,IAAGA,OAAH,EAAGA,EAAK2I,QAAQ,MAAO,IAC7BhR,EAAO4J,EAAWqH,gBAAgBqhB,GAEtC,OADa,OAATtyB,GAAe,EAAKyM,YAAY7C,EAAWiI,OAAO7R,IAC9CqI,GACJ,IAAK,QAAU,IAAD,IAEV,GADA,EAAK+pB,cACA,EAAKpmB,MAAMuM,SAASsC,SAAShY,MAAO,MACzC,YAAK0vB,wBAAL,mBAAuBC,mBAAvB,gBAAqC,cAM7C,OAAQnqB,GACJ,IAAK,OAAQ,EAAKmkB,aAAa,EAAKxgB,MAAMhF,KAAKR,SAAW,GAAI,MAC9D,IAAK,OAAQ,EAAKgmB,aAAa,EAAKxgB,MAAMhF,KAAKR,SAAW,GAAI,MAC9D,IAAK,SAAU,EAAKsiB,mBAAmB7iB,EAAc,IAAK,MAC1D,IAAK,SAAU,EAAK6iB,mBAAmB7iB,EAAc,IAAK,MAC1D,IAAK,SAAU,EAAK6iB,mBAAmB7iB,EAAc,IAAK,MAC1D,IAAK,SAAU,EAAK6iB,mBAAmB7iB,EAAc,IAAK,MAC1D,IAAK,QAAU,IAAD,IAEV,GADA,EAAKmsB,cACA,EAAKpmB,MAAMuM,SAASsC,SAAShY,MAAO,MACzC,YAAK0vB,wBAAL,mBAAuBC,mBAAvB,gBAAqC,QACrC,MAEJ,IAAK,UACD,IAAIC,EAAY7qB,EAAQ,EACrB6qB,EAAY,GAAG,EAAK5J,YAAY4J,GACnC,MAEJ,IAAK,YACD,IAAIA,EAAY7qB,EAAQ,EACrB6qB,EAAYvK,EAAOxkB,OAAS,GAAG,EAAKmlB,YAAY4J,GACnD,MAEJ,IAAK,OAAQ,EAAKC,cAAc,EAAG,EAAK1mB,MAAMhF,KAAKR,UAAW,MAC9D,IAAK,OAAQ,EAAKmsB,WAAW,EAAG,EAAK3mB,MAAMhF,KAAKR,aA3RzC,EAiSnBmL,UAAY,SAAC/H,EAAYnG,GACrB,IACI,IAAIzD,EAAO4J,EAAWiI,OAAOpO,GAC7B,QAAasB,IAAT/E,EAAoB,OACxB4J,EAAWkQ,KAAK9Z,EAAKyD,MAAOsH,EAAgB,EAAKiB,MAAMuM,SAAStU,MAAMpB,QACxE,MAAOF,MAtSM,EA0SnByjB,YAAc,SAACvjB,GACX,IAAQ0V,EAAa,EAAKvM,MAAlBuM,SACRA,EAAStU,MAAMpB,MAAQA,EACvB,EAAK2K,SAAS,CACV+K,SAAUA,IACX,kBAAM,EAAKgI,qBA/SC,EAiTnB9T,YAAc,SAACzM,GACX,IAAI2G,EAAS,EAAKqF,MAAMhF,KAAKT,QAAQ,EAAKyF,MAAMhF,KAAKR,UACjD/C,EAAQkD,EAAO/F,MAAM0I,WAAU,SAACC,GAChC,OAAOvJ,EAAKyD,QAAU8F,EAAE9F,SAExBmvB,EAAa,EAAK5mB,MAAMpE,MAAQ,EACpC,GAAInE,EAAQ,EAAG,CACX,IAAIiH,EAAa,IAAIvD,EAAWnH,EAAKyD,OACrCiH,EAAW9C,MAAQirB,GAAUnoB,EAAW9C,MAAOgrB,EAAY,KAC3DjsB,EAAO/F,MAAM+C,KAAK+G,OACf,CACH,IAAIooB,EAAcnsB,EAAO/F,MAAM6C,GAC/BqvB,EAAYlrB,MAAQirB,GAAUC,EAAYlrB,MAAOgrB,EAA8C,MAAlCE,EAAYlrB,MAAMgrB,GAAsB,IAAM,KACjF,QAAtBE,EAAYlrB,OAAiBjB,EAAO/F,MAAM2J,OAAO9G,EAAO,GAEhE,EAAK+J,SAAS,CACVxG,KAAM,EAAKgF,MAAMhF,OAErB,EAAKirB,iBACL,IAAIroB,EAAa,EAAKoC,MAAMpC,WACxB,EAAKoC,MAAMpE,MAAQ,IACnBgC,EAAa,EAAKoC,MAAMkc,OAAO,EAAKlc,MAAMpE,MAAQ,IAEtD,EAAK+J,UAAU/H,EAAY5J,EAAKyD,QAxUjB,EA0UnBqd,UA1UmB,sBA0UP,4BAAAzT,EAAA,sEACU,EAAK0T,MAAM/J,MAAM7G,OAAO6Q,UADlC,OAERhK,GADIA,EADI,QAEMtU,KAAI,SAAAsE,GACd,OAAIA,EAAKlD,KAAKK,kBACH4C,EAA4BC,GAEhCA,KAEX,EAAKwG,SAAS,CACV+J,cAAeP,EACfA,MAAOA,IAVH,2CA1UO,EAuVnBV,QAvVmB,uCAuVT,WAAOtP,GAAP,SAAAqG,EAAA,sEACI,EAAK4T,WAAWja,EAAKpE,MADzB,2DAEK,IAAI4B,EAAY,UAAW,2CAA6CwC,EAAKpE,MAAMgC,WAFxF,uBAIA,EAAKmc,MAAM/J,MAAMmK,OAAOzZ,EAA0BV,IAJlD,OAKN,EAAK8Z,YALC,2CAvVS,wDA8VnBmQ,WA9VmB,uCA8VN,WAAOjqB,GAAP,eAAAqG,EAAA,yDACS,aAAdrG,EAAKpE,KADA,gCAEY,EAAKye,iBAFjB,UAGQ,QADTze,EAFC,gEAILoE,EAAKpE,KAAOA,EAJP,kBAKE,EAAK0T,QAAQtP,IALf,gCAQF,IAAIoE,QAAJ,uCAAY,WAAMC,GAAN,iBAAAgC,EAAA,6DACXkL,EAAW,EAAKvM,MAAMuM,SADX,SAEL,EAAK0I,WAAWja,EAAKpE,MAFhB,0CAGXoE,EAAKxG,YAAY,GAAK+X,EAAS3O,WAAW/G,MAC1CmE,EAAKxG,YAAY,GAAK+X,EAAS8B,OAAOxX,MACtCmE,EAAKxG,YAAY,GAAK+X,EAAS+B,OAAOzX,MAL3B,SAML,EAAKke,MAAM/J,MAAM0B,OAAO,CAAE9V,KAAMoE,EAAKpE,MAAQ8E,EAA0BV,IANlE,OAOXpH,QAAQC,IAAI,cAAemH,EAAKpE,MAChC,EAAKsvB,QAAU,EACf,EAAKpR,YATM,4BAWP9Z,EAAKpE,KAAKqG,SAAS,cAXZ,kCAYU,EAAKoY,eAAe,oDAZ9B,WAaM,QADTze,EAZG,kDAamByI,KAbnB,eAcPrE,EAAKpE,KAAOA,EAdL,UAeD,EAAKme,MAAM/J,MAAMmK,OAAOzZ,EAA0BV,IAfjD,eAgBP,EAAK8Z,YAhBE,kBAiBAzV,KAjBA,QAmBXzL,QAAQC,IAAI,sBACZmH,EAAKpE,KAAO,WACZ,EAAKquB,WAAWjqB,GArBL,QAuBfqE,IAvBe,4CAAZ,wDARE,2CA9VM,wDAgYnBgW,eAAiB,SAACpG,GACd,OAAO,IAAI7P,QAAJ,uCAAY,WAAMC,GAAN,iBAAAgC,EAAA,sDACXiU,EAAerG,GAAY,0CADhB,uBAGUD,GAAYsG,GAHtB,UAIM,QADb3K,EAHO,iDAImBtL,EAAQ,OAJ3B,UAKM,KAAbsL,EALO,kCAMG,EAAKsK,WAAWtK,GANnB,oCAOH2K,EAAe,6BAA+B3K,EAP3C,iDASItL,EAAQsL,IATZ,gCAYP2K,EAAcrG,GAAY,0CAZnB,mEAAZ,wDAjYQ,EAmZnB8X,iBAAmB,WACf,OAAO,IAAI3nB,QAAJ,uCAAY,WAAMC,GAAN,eAAAgC,EAAA,sEACIqO,GAAa,0CAAD,OAA2C,EAAK1P,MAAMhF,KAAKpE,KAA3D,+BADhB,OACXwG,EADW,OAEfiC,EAAQjC,GAFO,2CAAZ,wDApZQ,EAyZnB6X,WAzZmB,uCAyZN,WAAOre,GAAP,SAAAyK,EAAA,sEACI,EAAK0T,MAAM/J,MAAMkK,QAAQ,CAAEte,KAAMA,IADrC,oCACiDmC,EADjD,0EAzZM,wDA4ZnBmsB,cA5ZmB,sBA4ZH,8BAAA7jB,EAAA,2DACiB,aAAzB,EAAKrB,MAAMhF,KAAKpE,MAAuB,EAAKsvB,QAAU,GAD9C,gCAEgB,EAAKa,mBAFrB,kDAIE,EAAK9B,WAAW,EAAKjlB,MAAMhF,MAJ7B,uBAOK,EAAKqa,eAAe,+CAPzB,UAQC,QADTze,EAPQ,2DASRoE,EAAO,IAAIX,EAAazD,GAC5B,EAAKsvB,QAAU,EACf,EAAK1kB,SAAS,CACVxG,KAAMA,IACP,kBAAM,EAAKsP,QAAQtP,MAbV,4CA5ZG,EA2anB2S,WA3amB,uCA2aN,WAAO/W,GAAP,SAAAyK,EAAA,sEACWqO,GAAa,6CAA+C9Y,GADvE,eAEI,EAAKme,MAAM/J,MAAMhR,OAAO,CAAEpD,KAAMA,GAAQ,EAAKke,WAFjD,2CA3aM,wDAgbnBgF,SAhbmB,uCAgbR,WAAO9e,GAAP,mBAAAqG,EAAA,yDACDrB,EAAQ,EAAKA,OACnBhF,EAAOe,KAAKC,MAAMD,KAAKE,UAAUjB,KACvBlD,KAAKK,qBACX6C,EAAO0C,EAAoB1C,IACtBpE,MAAQ,eAEI,IAAjB,EAAKsvB,QAPF,qBAQCc,EAAUhnB,EAAMuM,SAASoC,SAAS9X,OAA6B,aAApBmJ,EAAMhF,KAAKpE,SAC1CoJ,EAAMhF,KAAKT,QAAQ7C,OAAS,GATzC,gCAUiBgY,GAAa,0CAAD,OAA2C1P,EAAMhF,KAAKpE,KAAtD,wDAV7B,OAUCowB,EAVD,kBAYCA,EAZD,kCAYgB,EAAK/B,WAAWjlB,EAAMhF,MAZtC,SAeHuR,EAAW,EAAKvM,MAAMuM,UACjBvU,IAAInB,MAAQmE,EAAKhD,IAC1BuU,EAAStU,MAAMpB,MAAQmE,EAAK/C,MACxBsU,EAAS3O,WAAW/G,QAAUmE,EAAKxG,YAAY,KAC/C,EAAK6e,eAAerY,EAAKxG,YAAY,GAAI,GACzC+X,EAAS3O,WAAW/G,MAAQmE,EAAKxG,YAAY,IAE7C+X,EAAS8B,OAAOxX,QAAUmE,EAAKxG,YAAY,KAC3C,EAAK6e,eAAerY,EAAKxG,YAAY,GAAI,GACzC+X,EAAS8B,OAAOxX,MAAQmE,EAAKxG,YAAY,IAEzC+X,EAAS+B,OAAOzX,QAAUmE,EAAKxG,YAAY,KAC3C,EAAK6e,eAAerY,EAAKxG,YAAY,GAAI,GACzC+X,EAAS+B,OAAOzX,MAAQmE,EAAKxG,YAAY,IAE7C,EAAK0xB,QAAU,EACftyB,QAAQC,IAAI,eACZ,EAAK2N,SAAS,CACVxG,KAAMA,EACNuR,SAAUA,EACVgX,aAAc,KAnCX,4CAhbQ,wDAudnBoD,WAAa,WAAmC,IAAlCtoB,EAAiC,uDAAxB,EAAGqE,EAAqB,uDAAV,MACjC,OAAO,IAAItD,SAAQ,SAAAC,GACf,IAAI9E,EAAU,IAAIE,MAAM4D,GAAQ3D,OAAOhE,KAAI,kBAAM,IAAIkE,KACjDqsB,EAAc,EAAKjnB,MAAMhF,KAAKT,QACjB,QAAbmI,EACAukB,EAAYtvB,KAAZ,MAAAsvB,EAAW,YAAS1sB,IAEpB0sB,EAAY1oB,OAAZ,MAAA0oB,EAAW,CAAQvkB,EAAW,EAAG,GAAtB,mBAA4BnI,KAE5B,IAAX8D,GAAc,EAAKmiB,aAAa,EAAKxgB,MAAMhF,KAAKR,SAAW,GAC/D,EAAKyrB,iBACL,EAAKzkB,SAAS,CACVxG,KAAM,EAAKgF,MAAMhF,MAClBqE,OApeQ,EAwenBqnB,cAAgB,SAACroB,EAAQqE,GACrB,IAAI1H,EAAO,EAAKgF,MAAMhF,KAClBA,EAAKT,QAAQ7C,OAAS,KACZ,IAAI+C,MAAM4D,GAAQ3D,OAAOhE,KAAI,SAACC,EAAG2H,GAAJ,OAAUoE,EAAWpE,KACxDhG,SAAQ,SAAAb,GACRuD,EAAKV,YAAY2C,SAASxF,IAAQ,EAAK+sB,iBAAiB/sB,MAEhEuD,EAAKT,QAAQgE,OAAOmE,EAAUrE,GAC1BrD,EAAKT,QAAQ7C,QAAUsD,EAAKR,UAAU,EAAKgmB,aAAaxlB,EAAKR,SAAW,GAC5E,EAAKyrB,iBACL,EAAKzkB,SAAS,CACVxG,KAAMA,MAnfK,EAwfnBorB,WAxfmB,uCAwfN,WAAO1c,GAAP,SAAArI,EAAA,+EACF,IAAIjC,SAAQ,SAAAC,GACf,IAAIsK,EAA+B,mBAAbD,EAAyBA,GAAY,EAAK1J,MAAM4c,UACtE,EAAKpb,SAAS,CACVob,UAAWjT,GADf,sBAEG,wCAAAtI,EAAA,sDACK,EAAKrB,MAAM4c,WAAW,EAAK4D,aAAa,EAAKxgB,MAAMhF,KAAKR,UACxDyI,EAAY,EACZC,GAAe,IAAI5L,MAAOC,UAH/B,WAIQ,EAAKyI,MAAM4c,UAJnB,0BAKgC,EAAK5c,MAAxBhF,EALb,EAKaA,KAAMuR,EALnB,EAKmBA,SACV1R,EAAeZ,EAAce,EAAKT,QAAQS,EAAKR,UAAUK,cACzDqsB,EAAW3rB,KAAKC,MAAM,IAAQ+Q,EAASvU,IAAInB,MAAQgE,EAAaV,SAAW8I,EAC/EC,GAAe,IAAI5L,MAAOC,UAR/B,UASW2H,EAAQgoB,GATnB,WAUU,EAAKlnB,MAAM4c,UAVrB,qDAWK,EAAKuK,aACLlkB,EAAYC,EAAegkB,GAAW,IAAI5vB,MAAOC,UAZtD,uBAcC8H,IAdD,iDALE,2CAxfM,wDAihBnB8nB,WAAa,WACT,IAAIC,EAAW,EAAKpnB,MAAMhF,KAAKR,SAAW,EAC1C,GAAI,EAAKwF,MAAM4c,WAAawK,EAAW,EAAKpnB,MAAMhF,KAAKT,QAAQ7C,OAAS,EACpE,OAAO,EAAK0uB,YAAW,GAE3B,EAAK5F,aAAa,EAAKxgB,MAAMhF,KAAKR,SAAW,IAthB9B,EAyhBnBwqB,kBAAoB,WAChB,EAAKxjB,SAAS,CACV8jB,UAAW,EAAKtlB,MAAMslB,YA3hBX,EA8hBnBd,iBAAmB,SAAC9a,GAChB,IAAI1O,EAAO,EAAKgF,MAAMhF,KAClBvD,EAA4B,kBAAbiS,EAAwBA,EAAW1O,EAAKR,SACvD6sB,EAAoBrsB,EAAKV,YAAYqC,QAAQlF,GAC7C4vB,GAAqB,GAAKrsB,EAAKT,QAAQ7C,OAASD,EAChDuD,EAAKV,YAAYiE,OAAO8oB,EAAmB,GACpCrsB,EAAKT,QAAQ7C,OAASD,GAC7BuD,EAAKV,YAAY3C,KAAKF,GAE1B,EAAK6vB,sBACL,EAAK9lB,SAAS,CACVxG,KAAMA,KAziBK,EA4iBnB8hB,mBAAqB,SAAC3iB,GAClB,IAAIa,EAAO,EAAKgF,MAAMhF,KACtBA,EAAKT,QAAQ,EAAKyF,MAAMhF,KAAKR,UAAUK,aAAeV,EAAQD,GAC9D,EAAK+rB,iBACL,EAAKzkB,SAAS,CACVxG,KAAMA,KAjjBK,EAojBnBsQ,WApjBmB,uCAojBN,WAAOic,GAAP,SAAAlmB,EAAA,yDACY,IAAjB,EAAK6kB,QADA,qBAED,EAAKlmB,MAAMuM,SAASoC,SAAS9X,MAF5B,gCAGK,EAAKouB,WAAW,EAAKjlB,MAAMhF,MAHhC,8CAKmB0U,GAAa,0CAAD,OAA2C,EAAK1P,MAAMhF,KAAKpE,KAA3D,wDAL/B,oDAOS,EAAKquB,WAAW,EAAKjlB,MAAMhF,MAPpC,QAaT,EAAK0E,MAAM4L,WAAWic,GAbb,4CApjBM,wDAmkBnB/G,aAAe,SAAC/oB,EAAO+vB,GACnB,IAAMxnB,EAAQ,EAAKA,MACfhF,EAAOgF,EAAMhF,KACjB,KAAIvD,EAAQ,GAAKA,EAAQuD,EAAKT,QAAQ7C,OAAS,GAA/C,CACA,IAAIglB,EAAgB1c,EAAMhF,KAAKT,QAAQ9C,GACvCuD,EAAKR,SAAW/C,EAChB,IAAI8rB,EAAevjB,EAAMujB,aACzB,GAAIvjB,EAAMynB,cAA6C,IAA7B,EAAKC,aAAahwB,OAAc,CACtD6rB,EAAa5rB,KAAKF,GAClB,IAAIoP,EAAMtL,KAAKsL,IAAL,MAAAtL,KAAI,YAAQgoB,IAClBxc,EAAMxL,KAAKwL,IAAL,MAAAxL,KAAI,YAAQgoB,IACtBA,EAAe,IAAI9oB,MAAMsM,EAAMF,EAAM,GAAGnM,OAAOhE,KAAI,SAACC,EAAG2H,GAAJ,OAAUuI,EAAMvI,KAEvE,EAAKkD,SAAS,CACVxG,KAAMA,EACNuoB,aAAcA,IAGdiE,GACJ9K,EAAc9nB,MAAM0D,SAAQ,SAAAtE,GACF,MAAlBA,EAAK4H,MAAM,IAAY,EAAK+J,UAAU3F,EAAMpC,WAAY5J,EAAKyD,OAC3C,MAAlBzD,EAAK4H,MAAM,IAAY,EAAK+J,UAAU3F,EAAMkc,OAAO,GAAIloB,EAAKyD,OAC1C,MAAlBzD,EAAK4H,MAAM,IAAY,EAAK+J,UAAU3F,EAAMkc,OAAO,GAAIloB,EAAKyD,YAzlBrD,EA4lBnBolB,YAAc,SAACjhB,GACX,EAAK4F,SAAS,CACV5F,MAAOA,KA9lBI,EAkmBnB0f,YAAc,WACV,EAAK9Z,SAAS,CACVimB,cAAe,EAAKznB,MAAMynB,aAC1BlE,aAAc,EAAKvjB,MAAMynB,aAAe,GAAK,CAAC,EAAKznB,MAAMhF,KAAKR,YAElE,EAAKktB,aAAe,IAvmBL,EAymBnBhM,YAAc,SAAC9f,GACX,EAAK8rB,aAAe,GACpB,EAAK1nB,MAAMujB,aAAajrB,SAAQ,SAACb,GAC7B,IAAIkD,EAAS,EAAKqF,MAAMhF,KAAKT,QAAQ9C,QACtBsB,IAAX4B,GAAsB,EAAK+sB,aAAa/vB,KAAKgD,MAErD,EAAK+sB,aAAe3rB,KAAKC,MAAMD,KAAKE,UAAU,EAAKyrB,eACrC,QAAV9rB,IACA,EAAK8rB,aAAe,EAAKA,aAAahxB,KAAI,SAAAiE,GAOtC,OANAA,EAAO/F,MAAQ+F,EAAO/F,MAAMG,QAAO,SAAA4B,GAAC,MAA2B,MAAvBA,EAAEiF,MAAMA,EAAQ,MACxDjB,EAAO/F,MAAQ+F,EAAO/F,MAAM8B,KAAI,SAAAC,GAG5B,OAFAA,EAAEiF,MAAQ,MACVjF,EAAEiF,MAAQirB,GAAUlwB,EAAEiF,MAAOA,EAAQ,EAAG,KACjCjF,KAEJgE,MAGf,EAAK6G,SAAS,CACV+hB,aAAc,MA5nBH,EA+nBnB5H,aA/nBmB,uCA+nBJ,WAAOxG,GAAP,mBAAA9T,EAAA,sDACPrG,EAAO,EAAKgF,MAAMhF,KAClBugB,EAAgBxf,KAAKC,MAAMD,KAAKE,UAAU,EAAKyrB,eAC9CvS,EAGDoG,EAAcjjB,SAAQ,SAACqvB,EAAcrpB,GACjC,IAAI3D,EAASK,EAAKT,QAAQS,EAAKR,SAAW8D,QAC3BvF,IAAX4B,GACAgtB,EAAa/yB,MAAM0D,SAAQ,SAAAsvB,GACvB,IAAInwB,EAAQkD,EAAO/F,MAAM0I,WAAU,SAAAtJ,GAAI,OAAI4zB,EAAWnwB,QAAUzD,EAAKyD,SACrE,GAAIA,EAAQ,EACRkD,EAAO/F,MAAM+C,KAAKiwB,QAElB,IAAK,IAAIlkB,EAAI,EAAGA,EAAI,EAAGA,IACS,MAAxBkkB,EAAWhsB,MAAM8H,KACjB/I,EAAO/F,MAAM6C,GAAOmE,MAAQirB,GAAUlsB,EAAO/F,MAAM6C,GAAOmE,MAAO8H,EAAG,WAZ5F,EAAA1I,EAAKT,SAAQgE,OAAb,SAAoBvD,EAAKR,SAAU,GAAnC,mBAAyC+gB,KAqB7C,EAAK/Z,SAAS,CACVxG,KAAMA,IA1BC,2CA/nBI,wDA4pBnB4gB,aAAe,SAAChgB,GACZ,IAAIZ,EAAO,EAAKgF,MAAMhF,KACR,QAAVY,EACA,EAAKoE,MAAMujB,aAAajrB,SAAQ,SAAAuvB,QAEb9uB,IADFiC,EAAKT,QAAQstB,KACA7sB,EAAKT,QAAQstB,GAAajzB,MAAQ,OAGhE,EAAKoL,MAAMujB,aAAajrB,SAAQ,SAAAuvB,QAEb9uB,IADFiC,EAAKT,QAAQstB,IAEtB7sB,EAAKT,QAAQstB,GAAajzB,MAAM0D,SAAQ,SAAAtE,GACpCA,EAAK4H,MAAQirB,GAAU7yB,EAAK4H,MAAOA,EAAQ,EAAG,WAM9D,EAAK4F,SAAS,CACVxG,KAAMA,KA/qBK,EAkrBnBssB,oBAAsB,WAClB,IAAIhtB,EAAc,EAAK0F,MAAMhF,KAAKV,YAAYvF,QAAO,SAAA4pB,GAAU,OAAIA,EAAa,EAAK3e,MAAMhF,KAAKT,QAAQ7C,UACpGsD,EAAO,EAAKgF,MAAMhF,KACtBA,EAAKV,YAAcA,EACnB,EAAKkH,SAAS,CACVxG,KAAMA,KAvrBK,EA0rBnB6gB,cA1rBmB,sBA0rBH,4BAAAxa,EAAA,0DACRrG,EAAO,EAAKgF,MAAMhF,MACjBT,QAAUS,EAAKT,QAAQxF,QAAO,SAAC4B,EAAG2H,GAAJ,OAAW,EAAK0B,MAAMujB,aAAatmB,SAASqB,MAC3EtD,EAAKR,SAAWQ,EAAKT,QAAQ7C,OAAS,IAAGsD,EAAKR,SAAWQ,EAAKT,QAAQ7C,OAAS,GAC/EsD,EAAKR,UAAY,IAAGQ,EAAKR,SAAW,GACZ,IAAxBQ,EAAKT,QAAQ7C,OALL,gCAKyB,EAAKivB,WAAW,GAAI,GAL7C,OAMZ,EAAKnlB,SAAS,CACVxG,KAAMA,EACNuoB,aAAc,IACf,EAAK+D,qBATI,2CA1rBG,EAqsBnB/M,qBAAuB,SAACuN,GACpB,EAAKtmB,SAAS,CACVumB,YAAaD,KArsBjB,EAAKnS,GAAK,IAAIC,KAAQC,GAAGniB,EAAS,CAAEsX,MAAO,KAC3C,EAAK+J,MAAQ,CACT/J,MAAO,EAAK2K,GAAGG,WAAW,UAG9B,IAAIvJ,EAAW,EAAK6H,cAPL,OAQf,EAAK4T,sBAAmBjvB,EACxB,EAAK3E,aAAeA,EACpB,EAAK8f,gBAAanb,EAClB,EAAK2c,sBAAmB3c,EACxB,EAAKkZ,SAAW,IAAIF,GAEpB,EAAK/R,MAAQ,CACTpC,WAAY,IAAIqS,GAChBiM,OAAQ,CAAC,IAAIjM,GAAc,IAAIA,IAC/BjF,MAAO,GACP4R,WAAW,EACX5hB,KAAM,IAAIX,EAAa,YACvBkS,SAAUA,EACV+Y,UAAU,EACV1pB,MAAO,EACP2nB,aAAc,GACdkE,cAAc,EACdM,aAAa,EACbtS,kBAAkB,GAEtB,EAAKiS,aAAe,GACpB,EAAKxB,QAAU,EACf,EAAKK,iBAAmB,GA9BT,E,qDAiCnB,WAAqB,IAAD,OAChB3uB,KAAKR,OACL/C,OAAO4R,iBAAiB,UAAWrO,KAAK+M,gBACxC/M,KAAK2uB,iBAAmBlyB,OAAO4zB,iBAAmB,IAAIA,iBAAiBv0B,EAAU,aAAe,GAChGkE,KAAK2uB,iBAAiB2B,UAAY,SAACpvB,GAC1B,EAAKkH,MAAMuM,SAASsC,SAAShY,OAC7B,CAAC,OAAQ,QAAQoG,SAAjB,OAA0BnE,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAOhB,OACtC,EAAKsuB,WAA0B,SAAfttB,EAAMhB,OAEO,cAA7BzD,OAAO8zB,SAASC,UAChB/zB,OAAO4R,iBAAiB,gBAAgB,SAACnN,GACrCA,EAAM0H,iBACN1H,EAAMuvB,YAAc,Q,kCAKhC,WAAwB,IAAD,IACnBh0B,OAAOgS,oBAAoB,UAAWzO,KAAK+M,gBAC3C,MAA6B/M,KAAKoI,MAA3BpC,EAAP,EAAOA,WAAYse,EAAnB,EAAmBA,OACnB,UAAAtkB,KAAK2uB,wBAAL,mBAAuB+B,aAAvB,iBACoB,CAAC1qB,EAAYse,EAAO,GAAIA,EAAO,IACvC5jB,SAAQ,SAAAsF,GAAU,OAAIA,EAAW+T,YAC7C/Z,KAAKsc,gBAAanb,EAClBnB,KAAK8d,sBAAmB3c,EACxBnB,KAAKxD,kBAAe2E,EACRnB,KAAKoI,MACX4c,WAAY,I,+BAetB,WACIhlB,KAAK4J,SAAS,CACVxG,KAAM,IAAIX,EAAa,cAE3B,IAAI7B,EAAY,UAAW,0DAA0DI,Y,wBAWzF,WAAc,IAAD,OACT,OAAO,IAAIwG,SAAQ,SAAAC,GACf8J,MAAM,8BACDE,MAAK,SAAA0M,GAAC,OAAIA,EAAE1E,iBACZhI,MAAK,SAAA2M,GACF,EAAK5hB,aAAakd,gBAAgB0E,GAAG,SAACC,GAClC,IAAIC,EAAY,EAAK9hB,aAAa+hB,kBAC9BC,EAAW,EAAKhiB,aAAawd,aACjCwE,EAAS9F,KAAKzZ,MAAQ,IACtBqf,EAAUnG,OAASkG,EACnBC,EAAUvF,QAAQyF,GAClBA,EAASzF,QAAQ,EAAKvc,aAAa+f,aACnC,EAAKD,WAAagC,EAClB,EAAKR,iBAAmBU,EACxB/W,UAELkS,OAAM,SAAC5a,GACN/C,QAAQC,IAAI,oBAAqB8C,W,oBA+lBjD,WAAU,IAAD,OAEGqJ,EAAUpI,KAAVoI,MACA+nB,EAAgB/nB,EAAhB+nB,YACJ/sB,EAAOgF,EAAMhF,KACbwb,EAAW,CACXxL,MAAOhL,EAAMgL,MACbua,YAAavlB,EAAMhF,KACnBuR,SAAUvM,EAAMuM,SAChBlK,WAAYzK,KAAKsuB,QACjBZ,SAAUtlB,EAAMslB,SAChB7P,iBAAkBzV,EAAMyV,kBAExBc,EAAgB,CAChBuD,SAAUliB,KAAKkiB,SACfnM,WAAY/V,KAAK+V,WACjBuX,cAAettB,KAAKstB,cACpB5Z,WAAY1T,KAAK0T,WACjB2Z,WAAYrtB,KAAKqtB,WACjB5Z,oBAAqBzT,KAAKyT,oBAC1B2Z,kBAAmBptB,KAAKotB,kBACxB7U,aAAcvY,KAAKuY,aACnBoK,qBAAsB3iB,KAAK2iB,qBAC3BkL,oBAAqB7tB,KAAK6tB,qBAE1BpP,EAAoB,CACpB5V,YAAa7I,KAAK6I,YAClBqc,mBAAoBllB,KAAKklB,mBACzBD,YAAajlB,KAAKilB,aAElBvG,EAAe,CACfxT,SAAU9C,EAAMpC,WAChB8e,cAAe1c,EAAMhF,KAAKT,QAAQyF,EAAMhF,KAAKR,UAC7CP,cAAeA,EACf2B,MAAOoE,EAAMpE,MACb3D,MAAO+H,EAAMuM,SAAStU,MAAMpB,MAC5B+lB,UAAW5c,EAAM4c,UACjBnV,aAAczH,EAAMuM,SAAS9E,aAAa5Q,OAE1C0xB,EAAkB,CAClB/H,aAAc5oB,KAAK4oB,aACnBgE,iBAAkB5sB,KAAK4sB,kBAEvBgE,EAAa,CACbjuB,QAASS,EAAKT,QACdC,SAAUQ,EAAKR,SACf+R,SAAUvM,EAAMuM,SAChBjS,YAAa0F,EAAMhF,KAAKV,YACxBipB,aAAcvjB,EAAMujB,cAEpBkF,EAAY,CACZzc,QAASpU,KAAKoI,MAAMynB,aACpBlM,cAAe3jB,KAAK8vB,aACpB9rB,MAAOhE,KAAKoI,MAAMpE,OAElB8sB,EAAiB,CACjBpN,YAAa1jB,KAAK0jB,YAClBM,aAAchkB,KAAKgkB,aACnBC,cAAejkB,KAAKikB,cACpBH,YAAa9jB,KAAK8jB,YAClBC,aAAc/jB,KAAK+jB,cAEnBgN,EAAsB,CACtB7O,SAAUliB,KAAKkiB,SACfS,qBAAsB3iB,KAAK2iB,qBAC3BH,YAAaxiB,KAAKwiB,aAElBwO,EAAiB,CACjBp0B,YAAa,CAACwL,EAAMpC,YAAP,mBAAsBoC,EAAMkc,SAAQxlB,KAAI,SAAAkF,GAAK,OAAIA,EAAM0L,kBACpEuS,eAAgB7e,EAAKR,UAGzB,OAAO,sBAAKmF,UAAU,eAAehG,MAAO,CAAEiV,gBAAgB,OAAD,OAAS5O,EAAMuM,SAASqC,gBAAgB/X,MAAxC,MAAtD,UACFkxB,GAAe,cAAC,GAAD,CAAYhkB,UAAW4kB,EAAqB7wB,KAAM8wB,IAClE,qBAAKjpB,UAAU,YAAY+G,QAAS9O,KAAKotB,kBAAzC,SACI,cAAC,KAAD,CAAiBre,KAAMkiB,SAG3B,sBAAKlpB,UAAU,gBAAf,UACI,qBAAKiB,IAAK+V,GAAWhW,IAAI,sBAD7B,yFAMA,sBAAKhB,UAAU,uBAAf,UAEI,qBAAKA,UAAU,gBAAf,SAEI,sBAAKA,UAAU,qBAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,qBAAKA,UAAU,OAAO+G,QAAS,kBAAM,EAAK8Z,aAAaxlB,EAAKR,SAAW,IAAvE,SACI,cAAC,KAAD,CAAiBmM,KAAMmiB,SAE3B,qBAAKnpB,UAAU,OAAO+G,QAAS,kBAAM,EAAK8Z,aAAaxlB,EAAKR,SAAW,IAAvE,SACI,cAAC,KAAD,CAAiBmM,KAAMoiB,SAG3B,qBAAKppB,UAAU,OAAO+G,QAAS9O,KAAKwuB,WAApC,SACI,cAAC,KAAD,CAAiBzf,KAAM/O,KAAKoI,MAAM4c,UAAYoM,KAAUC,YAGhE,cAAC,GAAD,CAEIllB,UAAWwkB,EACXzwB,KAAM0wB,GAFD5wB,KAAKoI,MAAMuM,SAASkC,iBAAiB5X,OAI9C,sBAAK8I,UAAU,iCAAf,UAEI,qBAAKA,UAAU,OAAO+G,QAAS,kBAAM,EAAKigB,WAAW,EAAG3rB,EAAKR,WAA7D,SACI,qBAAKoG,IAAKsoB,GAASvpB,UAAU,YAAYgB,IAAI,qBAEjD,qBAAKhB,UAAU,OAAO+G,QAAS,kBAAM,EAAKggB,cAAc,EAAG1rB,EAAKR,WAAhE,SACI,qBAAKoG,IAAKuoB,GAAYxpB,UAAU,YAAYgB,IAAI,oBAEpD,qBAAKhB,UAAU,OAAO+G,QAAS,kBAAM,EAAKigB,WAAiD,EAAtC,EAAK3mB,MAAMuM,SAASgC,UAAU1X,MAAW,QAA9F,SACI,cAAC,KAAD,CAAiB8P,KAAMyiB,SAE3B,qBAAKzpB,UAAU,OAAO+G,QAAS9O,KAAK0jB,YAApC,SACI,cAAC,KAAD,CAAiB3U,KAAM0iB,iBAQvC,cAAC,GAAD,CACItlB,UAAWsS,EACXve,KAAMwe,OAGd,cAAC,GAAD,CACIxe,KAAM0e,EACNzS,UAAWwS,IAEf,cAAC,GAAD,CACIze,KAAM2wB,EACN1kB,UAAW2kB,IAEf,sBAAK/oB,UAAU,YAAf,UACI,8BACK3E,EAAKpE,OAEV,gCACK0yB,GAAaC,GAAgB3xB,KAAKoI,MAAMhF,KAAMpD,KAAKoI,MAAMhF,KAAKR,WADnE,IAGK8uB,GAAaC,GAAgB3xB,KAAKoI,MAAMhF,KAAMpD,KAAKoI,MAAMhF,KAAKT,QAAQ7C,sB,GA71BpEqJ,aAq2BvB,SAASuoB,GAAaE,GAClB,IAAIC,EAAUluB,KAAKC,MAAMguB,EAAS,KAC9BE,GAAYF,EAAS,IAAS,KAAMvqB,QAAQ,GAChD,OACgB,KAAZyqB,EACGD,EAAQ,EAAK,MACdA,EAAU,KAAOC,EAAU,GAAK,IAAM,IAAMA,EAGtD,SAASH,GAAgBvuB,EAAM2uB,GAC3B,IAAIpvB,EAAUS,EAAKT,QACfe,EAAWC,KAAKC,MAAM,IAAQR,EAAKhD,KACnC4xB,EAAc,EAKlB,OAJArvB,EAAQjC,SAAQ,SAACqC,EAAQ2D,GACjBA,EAAIqrB,IACRC,GAAetuB,EAAWrB,EAAcU,EAAOE,cAAcV,YAE1DyvB,EAGX,SAAS/C,GAAUgD,EAAQpyB,EAAOqyB,GAC9B,OAAIryB,GAASoyB,EAAOnyB,OACTmyB,EAAOE,UAGXF,EAAOG,UAAU,EAAGvyB,GAASqyB,EAAcD,EAAOG,UAAUvyB,EAAQ,GAEhEquB,UCn5BTmE,G,kDACF,WAAYvqB,GAAQ,IAAD,8BACf,cAAMA,IAWVoV,UAZmB,sBAYP,4BAAAzT,EAAA,sEACU,EAAK0T,MAAM/J,MAAM7G,OAAO6Q,UADlC,OACJhK,EADI,OAER,EAAKxJ,SAAS,CACVwJ,MAAOA,IAHH,2CAZO,EAkBnB0C,WAlBmB,uCAkBN,WAAO9W,GAAP,SAAAyK,EAAA,sEACCqO,GAAa,6CAA+C9Y,GAD7D,kCAEL,EAAKme,MAAM/J,MAAMhR,OAAO,CAAEpD,KAAMA,GAAQ,EAAKke,WAFxC,2CAlBM,wDAwBnBoV,eAxBmB,sBAwBF,sBAAA7oB,EAAA,sEACHqO,GAAa,8CADV,kCAET,EAAKqF,MAAM/J,MAAMhR,OAAO,GAAI,EAAK8a,WAFxB,2CAxBE,EA6BnBqV,cAAgB,WACZ7V,aAAa8V,WAAW12B,EAAQ,sBAChC4gB,aAAa8V,WAAW12B,EAAQ,kBAChC,IAAI8E,EAAY,UAAW,4BAA4BI,WAhCxC,EAkCnB6R,aAAe,SAACzP,GACRA,EAAK0P,YAAY1P,EAAK0P,IAC1B,IAAIpB,EAAOvN,KAAKE,UAAUjB,IACL,IAAI9B,GACVE,SAASkQ,EAAxB,UAAiCtO,EAAKpE,KAAtC,YAA8ClD,EAAQmX,cAAtD,gBApCA,EAAK8K,GAAK,IAAIC,KAAQC,GAAGniB,EAAS,CAAEsX,MAAO,KAC3C,EAAK+J,MAAQ,CACT/J,MAAO,EAAK2K,GAAGG,WAAW,UAG9B,EAAK9V,MAAQ,CACTgL,MAAO,IAEX,EAAK8J,YAVU,E,0CAwCnB,WAAU,IAAD,OACL,OAAO,sBAAKnV,UAAU,iBAAf,UACH,sBAAKA,UAAU,qBAAf,yCACgC,uBADhC,uGAKA,sBAAKA,UAAU,wBAAf,UACI,wBAAQA,UAAU,iBAAiB+G,QAAS9O,KAAKuyB,cAAjD,4BAGA,wBAAQxqB,UAAU,iBAAiB+G,QAAS9O,KAAKsyB,eAAjD,iCAIJ,qBAAKvqB,UAAU,sBAAf,SACK/H,KAAKoI,MAAMgL,MAAMtU,KAAI,SAAAsE,GAClB,OAAO,cAAC,GAAD,CACHlD,KAAMkD,EACN+I,UACI,CACI2J,WAAY,EAAKA,WACjBjD,aAAc,EAAKA,qBAQvC,wBACI9K,UAAU,+BACV+G,QAAS,kBAAM,EAAKhH,MAAM4L,WAAW,KAFzC,yC,GAvEYvK,aAiFxB,SAASkL,GAAQvM,GACb,IAAI5H,EAAO4H,EAAM5H,KACb4V,EAAahO,EAAMqE,UAAU2J,WAC7BjD,EAAe/K,EAAMqE,UAAU0G,aACnC,OAAO,sBAAK9K,UAAU,WAAf,UACH,qBAAKA,UAAU,YAAf,SACK7H,EAAKlB,OAEV,sBAAK+I,UAAU,uBAAf,UACI,wBAAQA,UAAU,cAAc+G,QAAS,kBAAM+D,EAAa3S,IAA5D,SACI,cAAC,KAAD,CAAiB6O,KAAMoB,SAG3B,wBAAQpI,UAAU,cAAc+G,QAAS,kBAAMgH,EAAW5V,EAAKlB,OAA/D,SACI,cAAC,KAAD,CAAiB+P,KAAMiH,KAASxT,MAAM,oBAMvC6vB,U,kBCzGTI,G,kDACF,WAAY3qB,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,GAFE,E,0CAMnB,WAAU,IAAD,OACL,OAAO,sBAAKL,UAAU,iBAAf,UACH,qBAAKA,UAAU,uBAAf,uBAGA,qBACIA,UAAU,yBACV+G,QAAS,kBAAM,EAAKhH,MAAM4L,WAAW,KAFzC,SAII,cAAC,KAAD,CAAkBlI,KAAM,OAE3BknB,GAAW5zB,KAAI,SAAAC,GAAC,OAAI,cAAC4zB,GAAD,CACjBzyB,KAAMnB,GACDA,EAAEoB,YAEX,qBAAK4H,UAAU,4B,GAtBCoB,aA6B5B,SAASwpB,GAAa7qB,GAClB,MAA0CA,EAAM5H,KAAxCC,EAAR,EAAQA,QAASU,EAAjB,EAAiBA,MAAOytB,EAAxB,EAAwBA,QAAShb,EAAjC,EAAiCA,KACjC,OAAO,sBAAKvL,UAAU,oBAAf,UAEH,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,QAAf,SACK5H,IAEL,qBAAK4H,UAAU,QAAf,SACKuL,OAGT,sBAAKvL,UAAU,iBAAf,UACI,qBAAKA,UAAU,QAAf,SACKlH,IAEL,6BACKytB,EAAQxvB,KAAI,SAACC,EAAG2H,GAAJ,OACT,6BACK3H,EAAER,MAAM,MAAMO,KAAI,SAAC8zB,EAAMlsB,EAAEmsB,GACxB,OAAS,IAANnsB,EACQ,8BAAcksB,GAAJlsB,GAEd,mBAAWqB,UAAU,eAArB,SACF6qB,GADUlsB,OALdA,cAgB7B,IAAMgsB,GAAa,CACf,CACIvyB,QAAS,MACTU,MAAO,sBACPyS,KAAM,eACNgb,QAAS,CAAC,wKAAD,kjBAcV,CACCnuB,QAAS,MACTU,MAAO,SACPyS,KAAM,eACNgb,QAAS,CACL,6BACA,iCAEL,CACCnuB,QAAS,MACTU,MAAO,qBACPyS,KAAM,eACNgb,QAAS,CACL,yCACA,mDACA,8BACA,+BACA,2BAEL,CACCnuB,QAAS,MACTU,MAAO,cACPyS,KAAM,eACNgb,QAAS,CAAC,wdAQX,CACCnuB,QAAS,MACTU,MAAO,eACPyS,KAAM,eACNgb,QAAS,CACL,kFACA,cAEL,CACCnuB,QAAS,MACTU,MAAO,kBACPyS,KAAM,eACNgb,QAAS,CACL,sBACA,gBACA,gCACA,cAEL,CACCnuB,QAAS,MACTU,MAAO,oBACPyS,KAAM,eACNgb,QAAS,CACL,sEACA,4EAEL,CACCnuB,QAAS,MACTU,MAAO,uBACPyS,KAAM,eACNgb,QAAS,CACL,4JACA,YACA,uCAEL,CACCnuB,QAAS,MACTU,MAAO,UACPyS,KAAM,eACNgb,QAAS,CACL,4BACA,2CACA,uBACA,mBACA,+BACA,+CACA,0EAKGmE,MC3JTK,GAAcC,QACW,cAA7Bt2B,OAAO8zB,SAASC,UAEe,UAA7B/zB,OAAO8zB,SAASC,UAEhB/zB,OAAO8zB,SAASC,SAASwC,MAAM,2DAoCnC,SAASC,GAAgBC,EAAOC,GAC9BziB,UAAU0iB,cACPC,SAASH,GACTzhB,MAAK,SAAC6hB,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBprB,QACfsI,UAAU0iB,cAAcO,YAI1B33B,QAAQC,IACN,+GAKEk3B,GAAUA,EAAOS,UACnBT,EAAOS,SAASN,KAMlBt3B,QAAQC,IAAI,sCAGRk3B,GAAUA,EAAOU,WACnBV,EAAOU,UAAUP,WAO5B3Z,OAAM,SAAC/H,GACN5V,QAAQ4V,MAAM,4CAA6CA,M,sBClF7DkiB,GAAQ,CAAC,GAAI,WAAY,YAAa,aACtCC,IAAgB,EACdC,G,kDACL,WAAYlsB,GAAQ,IAAD,uBAClB,cAAMA,IAuBP4L,WAAa,SAACic,GACb,EAAK/lB,SAAS,CACbqqB,aAActE,KA1BG,EAqCnBuE,cArCmB,sBAqCH,sBAAAzqB,EAAA,mEAEViH,UAAUC,UAAWD,UAAUC,QAAQC,QAF7B,gCAGMF,UAAUC,QAAQC,UAHxB,cAKZ,IAAIhQ,EAAY,UAAW,8BAA8BI,UAEzD,IAAIJ,EAAY,UAAW,0HAA2H,KAAMI,UAPhJ,uDAWdhF,QAAQC,IAAR,MACA,IAAI2E,EAAY,QAAS,yDAAyDI,UAZpE,QAcf,EAAKmzB,qBAdU,yDArCG,EAqDnBA,mBAAqB,WACpBzX,aAAaM,QAAQlhB,EAAU,YAAY,GAC3C,EAAK8N,SAAS,CACbwqB,YAAY,KAxDK,EA2DnBC,YAAc,WACb,IAAIjsB,EAAQ,EAAKA,MACjBA,EAAMksB,gBAAgBlgB,SAAU,EAChC,EAAKxK,SAAS,CACb0qB,gBAAiBlsB,EAAMksB,mBA/DN,EAkEnBC,YAlEmB,sBAkEL,kCAAA9qB,EAAA,sEACPnC,EAAQ,MADD,WAETysB,GAFS,oDAGTS,E/BlFa,M+BmFbC,EAJS,6QAUTC,EAAgBhY,aAAatG,QAAQta,EAAU,YAC9C,EAAKsM,MAAMgsB,WAXH,yCAYL1X,aAAaM,QAAQlhB,EAAU,WAAY04B,IAZtC,UAeTA,IAAmBE,IACtB,IAAI9zB,EAAY,WAAa4zB,EAAgBC,EAAe,KAAMzzB,UAClE0b,aAAaM,QAAQlhB,EAAU,WAAY04B,IAE5CT,IAAgB,EACZ,EAAK3rB,MAAMgsB,WApBF,uDAqBT1jB,UAAUC,UAAWD,UAAUC,QAAQC,QArB9B,kCAsBYF,UAAUC,QAAQE,YAtB9B,WAsBRC,EAtBQ,yCAuB0BJ,UAAUC,QAAQC,UAvB5C,QAuBME,EAvBN,eAwBZ9U,QAAQC,IAAI6U,EAAc,oBAAsB,yBAxBpC,4CAlEK,EA8FnB6jB,SAAW,SAAC/iB,IACXA,EAAQA,EAAMvQ,QACR4J,WAAY,IAAIvL,MAAOC,UACR,kBAAViS,IACX,EAAKhI,SAAS,CACb0qB,gBAAiB,CAChBrpB,UAAW2G,EAAM3G,UACjBmJ,SAAS,EACTtT,KAAM8Q,EAAM9Q,KACZD,MAAO+Q,EAAM/Q,SAGf8L,YAAW,WACN,EAAKvE,MAAMksB,gBAAgBrpB,YAAc2G,EAAM3G,WACnD,EAAKrB,SAAS,CACb0qB,gBAAiB,CAChBrpB,UAAW,EACXmJ,SAAS,EACTtT,KAAM,GACND,MAAO,QAGP+Q,EAAM7Q,WAlHT,IAAI6zB,EAAOn4B,OAAO8zB,SAASvb,KAAKzW,MAAM,KACtCq2B,EAAuB,IAAhBA,EAAK90B,OAAe,GAAK80B,EAAOA,EAAKA,EAAK90B,OAAS,GACrDg0B,GAAMzuB,SAASuvB,KAAOA,EAAO,IAClC,IAAIR,EAAa1X,aAAatG,QAAQta,EAAU,YAL9B,OAMlBs4B,EAA4B,OAAfA,GAA8BrB,QAAQqB,GACnD,EAAKhsB,MAAQ,CACZksB,gBAAiB,CAChBrpB,UAAW,EACXmJ,SAAS,EACTtT,KAAM,OACND,MAAO,SAERkzB,eAAe,EACfc,qBAAsBnkB,UAAUC,SAAWD,UAAUC,QAAQC,QAC7DqjB,aAAcW,EACdR,WAAYA,GAjBK,E,qDAoBnB,WACC33B,OAAO4R,iBAAiB,WAAYrO,KAAK20B,UACzC30B,KAAKu0B,gB,+BAON,WACCv0B,KAAK4J,SAAS,CACbqqB,aAAc,gB,kCAGhB,WACCx3B,OAAOgS,oBAAoB,WAAYzO,KAAK20B,Y,oBAmF7C,WACC,IAAIL,EAAkBt0B,KAAKoI,MAAMksB,gBAC7BQ,EAAuBR,EAAgBlgB,QAAU,4CAA8C,mBACnG,OAAO,sBAAKrM,UAAU,QAAf,UACN,sBAAKA,UAAW+sB,EAAsBhmB,QAAS9O,KAAKq0B,YAApD,UACC,qBAAKtsB,UAAU,yBAAf,SACEusB,EAAgBzzB,QAElB,qBAAKkH,UAAU,wBAAf,SACEusB,EAAgBxzB,UAGjBd,KAAKoI,MAAMgsB,WAyBH,KAxBT,sBAAKrsB,UAAU,kBAAf,UACC,sBAAKA,UAAU,mBAAf,UACC,sBAAKA,UAAW,wBAAhB,wBAAqDjM,EAArD,UAAiF,QAAZA,EAAoB,UAAY,MACrG,wMAGC,uBAAM,uBACN,qBAAKiM,UAAU,WAAf,qBAJD,8GAMC,uBAAM,uBACL/H,KAAKoI,MAAMysB,qBACX,gCACC,qBAAK9sB,UAAU,WAAf,qBADD,uQAIE,WAIL,qBAAKA,UAAU,iCAAf,SACC,wBAAQA,UAAU,yBAAyB+G,QAAS9O,KAAKk0B,cAAzD,0BAMH,eAAC,KAAD,WACC,cAAC,KAAD,CAAUa,GAAI,IAAM/0B,KAAKoI,MAAM6rB,eACF,cAA5Bj0B,KAAKoI,MAAM6rB,aACT,cAAC,KAAD,CAAOe,OAAK,EAACJ,KAAM,aAAnB,SACD,cAAC,GAAD,CAAWlhB,WAAY1T,KAAK0T,eAE3B,qCACD,cAAC,KAAD,CAAOshB,OAAK,EAACJ,KAAK,IAAlB,SACC,cAAC,GAAD,CAAKlhB,WAAY1T,KAAK0T,eAGvB,cAAC,KAAD,CAAOshB,OAAK,EAACJ,KAAK,YAAlB,SACC,cAAC,GAAD,CAAUlhB,WAAY1T,KAAK0T,eAG5B,cAAC,KAAD,CAAOshB,OAAK,EAACJ,KAAK,aAAlB,SACC,cAAC,GAAD,CAAelhB,WAAY1T,KAAK0T,4B,GA9KnBvK,aAuLpB8rB,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,GAAD,MAGDtzB,SAASuzB,eAAe,SAOzB,WACC,GALYjxB,KAAKC,MAAM+R,eAAeC,QAAQ,UAK5B,OAAOpa,QAAQC,IAAI,SACrC,IAAI+iB,EAAQnd,SAASod,SAAS5Z,SAAS,kBACvC8Q,eAAe6G,QAAQ,QAASgC,GAGjCE,GDlMO,SAAkBiU,GACvB,GAA6C,kBAAmBziB,UAAW,CAGzE,GADkB,IAAI+J,IAAI1e,IAAwBU,OAAO8zB,SAASvb,MACpDqgB,SAAW54B,OAAO8zB,SAAS8E,OAIvC,OAGF54B,OAAO4R,iBAAiB,QAAQ,WAC9B,IAAM6kB,EAAK,UAAMn3B,IAAN,sBACP+2B,KAgEV,SAAiCI,EAAOC,GAEtC5hB,MAAM2hB,EAAO,CACXoC,QAAS,CAAE,iBAAkB,YAE5B7jB,MAAK,SAAC8jB,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAAShtB,QACO,MAAfitB,IAA8D,IAAvCA,EAAYzwB,QAAQ,cAG5C2L,UAAU0iB,cAAcsC,MAAMjkB,MAAK,SAAC6hB,GAClCA,EAAaqC,aAAalkB,MAAK,WAC7BhV,OAAO8zB,SAASqF,eAKpB3C,GAAgBC,EAAOC,MAG1BxZ,OAAM,WACL3d,QAAQC,IAAI,oEAtFV45B,CAAwB3C,EAAOC,GAI/BziB,UAAU0iB,cAAcsC,MAAMjkB,MAAK,WACjCzV,QAAQC,IACN,+GAMJg3B,GAAgBC,EAAOC,OCwK/B2C,I","file":"static/js/main.c6dadd7e.chunk.js","sourcesContent":["const appName = process.env.REACT_APP_NAME || [\"Sky\",\"Genshin\"][1]\r\nconst appVersion = '2.0'\r\nconsole.log(`${appName}-V${appVersion}`)\r\n\r\n\r\nconst cssClasses = {\r\n    noteComposer: appName === \"Genshin\" ? \"note-composer\" : \"note-composer-sky\",\r\n    note: appName === \"Genshin\" ? \"note\" : \"note-sky\",\r\n    noteAnimation: appName === 'Genshin' ? \"note-animation\" : \"note-animation-sky\",\r\n    approachCircle: appName === \"Genshin\" ? \"approach-circle\" : \"approach-circle-sky\",\r\n    noteName: appName === \"Genshin\" ? \"note-name\" : \"note-name-sky\"\r\n}\r\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)()\r\nconst instruments = appName === \"Genshin\" ? [\r\n    \"Lyre\",\r\n    \"DunDun\",\r\n    \"Zither\"\r\n    ]:[\r\n        \"Piano\",\r\n        \"Contrabass\",\r\n        \"Guitar\",\r\n        \"Harp\",\r\n        \"Horn\",\r\n        \"Trumpet\",\r\n        \"Pipa\",\r\n        \"WinterPiano\",\r\n        \"Xylophone\",\r\n        \"Flute\",\r\n        \"Ocarina\",\r\n        \"Kalimba\",\r\n        \"ToyUkulele\",\r\n        \"Drum\",\r\n        \"Bells\",\r\n        \"DunDun\",\r\n        \"HandPan\"\r\n    ]\r\nconst notesPerColumn = appName === \"Genshin\" ? 21 : 15\r\nconst instrumentsData = {\r\n    Lyre: {\r\n        notes: 21\r\n    },\r\n    Zither:{\r\n        notes: 21,\r\n        effects: {\r\n            filter: 'sepia(100%)'\r\n        }\r\n    },\r\n    DunDun: {\r\n        notes: 8\r\n    },\r\n    Bells: {\r\n        notes: 8\r\n    },\r\n    Trumpet:{\r\n        notes: 15\r\n    },\r\n    Contrabass: {\r\n        notes: 15\r\n    },\r\n    Drum: {\r\n        notes: 8\r\n    },\r\n    Flute: {\r\n        notes: 15\r\n    },\r\n    Guitar: {\r\n        notes: 15\r\n    },\r\n    HandPan: {\r\n        notes: 8\r\n    },\r\n    ToyUkulele:{\r\n        notes:15\r\n    },\r\n    Harp: {\r\n        notes: 15\r\n    },\r\n    Horn: {\r\n        notes: 15\r\n    },\r\n    Piano: {\r\n        notes: 15\r\n    },\r\n    Pipa: {\r\n        notes: 15\r\n    },\r\n    Kalimba: {\r\n        notes: 15\r\n    },\r\n    WinterPiano: {\r\n        notes: 15\r\n    },\r\n    Xylophone: {\r\n        notes: 15\r\n    },\r\n    Ocarina:{\r\n        notes:15\r\n    }\r\n}\r\n\r\n\r\nconst layoutData = {\r\n    21: {\r\n        keyboardLayout: (\"Q W E R T Y U \" +\r\n            \"A S D F G H J \" +\r\n            \"Z X C V B N M\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa so la ti \" +\r\n            \"do re mi fa so la ti \" +\r\n            \"do re mi fa so la ti\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 84 89 85 \" +\r\n            \"65 83 68 70 71 72 74 \" +\r\n            \"90 88 67 86 66 78 77\").split(\" \")\r\n    },\r\n    8: {\r\n        keyboardLayout: (\"Q W E R \" +\r\n            \"A S D F\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa \" +\r\n            \"do re mi fa\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 \" +\r\n        \"65 83 68 70\").split(\" \")\r\n    },\r\n    15: {\r\n        keyboardLayout: (\"Q W E R T \" +\r\n            \"A S D F G \" +\r\n            \"Z X C V B\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa so \" +\r\n            \"do re mi fa so \" +\r\n            \"do re mi fa so\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 84 \" +\r\n            \"65 83 68 70 71 \" +\r\n            \"90 88 67 86 66\").split(\" \")\r\n    }\r\n}\r\n\r\nconst keyNames = {\r\n    Sky: {\r\n        0: [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\"],\r\n        1: [\"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\"],\r\n        2: [\"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\"],\r\n        3: [\"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\"],\r\n        4: [\"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\"],\r\n        5: [\"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\"],\r\n        6: [\"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\"],\r\n        7: [\"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\"],\r\n        8: [\"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\"],\r\n        9: [\"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\"],\r\n        10: [\"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\"],\r\n        11: [\"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\"]\r\n    },\r\n    Genshin:{\r\n        0: [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"],\r\n        1: [\"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\" , \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\"],\r\n        2: [\"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\"],\r\n        3: [\"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\"],\r\n        4: [\"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\"],\r\n        5: [\"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\"],\r\n        6: [\"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\"],\r\n        7: [\"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\"],\r\n        8: [\"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\"],\r\n        9: [\"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\"],\r\n        10: [\"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\"],\r\n        11: [\"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\"]\r\n    }\r\n}\r\nconst speedChangers = [0.25,0.5,0.75,1,1.25,1.5,2].map(e => {\r\n    return {\r\n        name: `x${e}`,\r\n        value: e\r\n    }\r\n})\r\n\r\nconst pitchArr = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"] \r\n\r\nconst composerNotePositions =  appName === \"Genshin\" ? [14, 15, 16, 17, 18, 19, 20, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6].reverse() : [15,16,17,18,19,20,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14].reverse()\r\n\r\nconst importNotePositions = appName === \"Genshin\" ? [14, 15, 16, 17, 18, 19, 20, 7, 8, 9, 10, 11, 12, 13, 0] :  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]\r\n\r\nconst layoutImages = {\r\n    15: \"dmcr dm cr dm cr cr dm dmcr dm cr cr dm cr dm dmcr\".split(\" \"),\r\n    8: appName === \"Sky\"? \"cr dm cr dm cr dm cr dm\".split(\" \") : \"do re mi fa do re mi fa\".split(\" \"),\r\n    21: \"do re mi fa so la ti do re mi fa so la ti do re mi fa so la ti\".split(\" \")\r\n}\r\nexport {\r\n    instruments,\r\n    instrumentsData,\r\n    composerNotePositions,\r\n    importNotePositions,\r\n    appName,\r\n    layoutData,\r\n    cssClasses,\r\n    notesPerColumn,\r\n    keyNames,\r\n    pitchArr,\r\n    layoutImages,\r\n    appVersion,\r\n    speedChangers,\r\n    audioContext\r\n}","import { importNotePositions, appName, instruments } from \"../appConfig\"\r\nimport * as workerTimers from 'worker-timers';\r\nclass Recording {\r\n\tconstructor() {\r\n\t\tthis.start = new Date().getTime()\r\n\t\tthis.notes = []\r\n\t}\r\n\tinit = () => {\r\n\t\tthis.start = new Date().getTime() - 100\r\n\t\tconsole.log(\"Started new recording\")\r\n\t}\r\n\taddNote = (index) => {\r\n\t\tif (this.notes.length === 0) this.init()\r\n\t\tlet currentTime = new Date().getTime()\r\n\t\tlet note = [index, currentTime - this.start]\r\n\t\tthis.notes.push(note)\r\n\t}\r\n}\r\nclass Song {\r\n\tconstructor(name, notes = [], data = {}) {\r\n\t\tthis.name = name\r\n\t\tthis.version = 1\r\n\t\tthis.notes = notes\r\n\t\tthis.bpm = 220\r\n\t\tthis.pitch = \"C\"\r\n\t\tthis.data = {\r\n\t\t\tisComposed: false,\r\n\t\t\tisComposedVersion: false,\r\n\t\t\tappName: appName\r\n\t\t}\r\n\t\tObject.entries(data).forEach((entry) => {\r\n\t\t\tthis.data[entry[0]] = entry[1]\r\n\t\t})\r\n\t}\r\n}\r\nclass LoggerEvent {\r\n\tconstructor(title, text, timeout) {\r\n\t\tthis.title = title\r\n\t\tthis.timeout = timeout\r\n\t\tthis.text = text\r\n\t\tif (timeout === undefined) this.timeout = 3000\r\n\t\tthis.event = new CustomEvent(\"logEvent\", {\r\n\t\t\tdetail: {\r\n\t\t\t\ttitle: this.title,\r\n\t\t\t\ttext: this.text,\r\n\t\t\t\ttimeout: this.timeout\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\ttrigger = () => {\r\n\t\twindow.dispatchEvent(this.event)\r\n\t}\r\n}\r\nclass NoteData {\r\n\tconstructor(index, noteNames, url) {\r\n\t\tthis.index = index\r\n\t\tthis.noteNames = noteNames\r\n\t\tthis.url = url\r\n\t\tthis.buffer = new ArrayBuffer(8)\r\n\t\tthis.clicked = false\r\n\t}\r\n}\r\nclass PlayingSong {\r\n\tconstructor(notes) {\r\n\t\tthis.timestamp = new Date().getTime()\r\n\t\tthis.notes = notes\r\n\t}\r\n}\r\nclass FileDownloader {\r\n\tconstructor(type) {\r\n\t\tif (type === undefined) type = \"text/json\"\r\n\t\tthis.dataType = \"data:\" + type + \";charset=utf-8,\"\r\n\t}\r\n\tdownload = (file, name) => {\r\n\t\tlet data = this.dataType + encodeURIComponent(file)\r\n\t\tvar el = document.createElement(\"a\")\r\n\t\tel.style = \"display:none\"\r\n\t\tdocument.body.appendChild(el)\r\n\t\tel.setAttribute(\"href\", data)\r\n\t\tel.setAttribute(\"download\", name)\r\n\t\tel.click();\r\n\t\tel.remove();\r\n\t}\r\n}\r\n\r\nlet TempoChangers = [\r\n\t{\r\n\t\tid: 0,\r\n\t\ttext: \"1\",\r\n\t\tchanger: 1,\r\n\t\tcolor: 0x515c6f\r\n\t}, {\r\n\t\tid: 1,\r\n\t\ttext: \"1/2\",\r\n\t\tchanger: 1 / 2,\r\n\t\tcolor: 0x517553\r\n\t}, {\r\n\t\tid: 2,\r\n\t\ttext: \"1/4\",\r\n\t\tchanger: 1 / 4,\r\n\t\tcolor: 0x434c7d\r\n\t}, {\r\n\t\tid: 3,\r\n\t\ttext: \"1/8\",\r\n\t\tchanger: 1 / 8,\r\n\t\tcolor: 0x774D6D\r\n\t}\r\n]\r\nclass ComposedSong {\r\n\tconstructor(name, notes = [], data = {}) {\r\n\t\tdata.isComposed = true\r\n\t\tdata.isComposedVersion = true\r\n\t\tthis.version = 1\r\n\t\tthis.data = data\r\n\t\tthis.name = name\r\n\t\tthis.bpm = 220\r\n\t\tthis.pitch = \"C\"\r\n\t\tthis.notes = notes\r\n\t\tthis.instruments = [instruments[0], instruments[0], instruments[0]]\r\n\t\tthis.breakpoints = [0]\r\n\t\tthis.columns = []\r\n\t\tthis.selected = 0\r\n\t\tnew Array(100).fill().forEach((e) => {\r\n\t\t\tlet column = new Column()\r\n\t\t\tcolumn.tempoChanger = 0\r\n\t\t\tthis.columns.push(column)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction NotesTable(length){\r\n\treturn new Array(length).fill().map(() => {return []})\r\n}\r\nfunction ComposerSongDeSerialization(song) {\r\n\tlet obj = {\r\n\t\tdata: song.data,\r\n\t\tname: song.name,\r\n\t\tbpm: song.bpm ?? 220,\r\n\t\tpitch: song.pitch ?? \"C\",\r\n\t\tinstruments: song.instruments || [instruments[0], instruments[0], instruments[0]],\r\n\t\tbreakpoints: song.breakpoints ?? [],\r\n\t\tnotes: [],\r\n\t\tselected: 0,\r\n\t\tcolumns: []\r\n\t}\r\n\tsong.columns.forEach(column => {\r\n\t\tlet columnObj = new Column()\r\n\t\tcolumnObj.tempoChanger = column[0]\r\n\t\tcolumn[1].forEach(note => {\r\n\t\t\tcolumnObj.notes.push(new ColumnNote(note[0], note[1]))\r\n\t\t})\r\n\t\tobj.columns.push(columnObj)\r\n\t})\r\n\treturn obj\r\n}\r\nfunction ComposerToRecording(song) {\r\n\tlet recordedSong = new Song(song.name)\r\n\tlet bpmPerMs = Math.floor(60000 / song.bpm)\r\n\tlet totalTime = 100\r\n\tsong.columns.forEach(column => {\r\n\t\tcolumn[1].forEach(note => {\r\n\t\t\trecordedSong.notes.push([note[0], totalTime])\r\n\t\t})\r\n\t\ttotalTime += Math.floor(bpmPerMs * TempoChangers[column[0]].changer)\r\n\t})\r\n\treturn recordedSong\r\n}\r\nfunction ComposerSongSerialization(song) {\r\n\tlet obj = {\r\n\t\tdata: song.data,\r\n\t\tname: song.name,\r\n\t\tbpm: song.bpm,\r\n\t\tpitch: song.pitch,\r\n\t\tbreakpoints: song.breakpoints,\r\n\t\tinstruments: song.instruments,\r\n\t\tcolumns: []\r\n\t}\r\n\tobj.data.appName = appName\r\n\t/*\r\n\t\tnotes = [tempoChanger,notes] ----> note = [index,layer]\r\n\t\ttempoChanger = Number\r\n\t*/\r\n\tsong.columns.forEach(column => {\r\n\t\tlet columnArr = [column.tempoChanger]\r\n\t\tlet notes = column.notes.map(note => {\r\n\t\t\treturn [note.index, note.layer]\r\n\t\t})\r\n\t\tcolumnArr[1] = notes\r\n\t\tobj.columns.push(columnArr)\r\n\t})\r\n\treturn obj\r\n}\r\nfunction prepareSongDownload(song) {\r\n\tlet finalSong = JSON.parse(JSON.stringify(song)) //lose reference\r\n\tlet oldFormatNotes = {}\r\n\tif (finalSong.data?.isComposedVersion) {\r\n\t\toldFormatNotes = composedToOldFormat(finalSong)\r\n\t} else {\r\n\t\toldFormatNotes = recordedToOldFormat(finalSong)\r\n\t}\r\n\tfinalSong.isComposed = finalSong.data.isComposedVersion\r\n\tfinalSong.pitchLevel = pitchArr.indexOf(finalSong.pitch)\r\n\tfinalSong.songNotes = oldFormatNotes\r\n\tfinalSong.bitsPerPage = 16\r\n\tfinalSong.isEncrypted = false\r\n\treturn [finalSong] //for compatibility, add back to an array, it will be ignored when importing\r\n\t//from this app\r\n}\r\n\r\nfunction prepareSongImport(song) {\r\n\t//TODO add multi songs in the same file\r\n\tif (Array.isArray(song) && song.length > 0) song = song[0]\r\n\tlet type = getSongType(song)\r\n\tif (type === \"none\") {\r\n\t\tnew LoggerEvent(\"Error\", \"Invalid song\").trigger()\r\n\t\tthrow new Error(\"Error Invalid song\")\r\n\t}\r\n\tif (type === \"oldSky\") {\r\n\t\tsong = oldSkyToNewFormat(song)\r\n\t}\r\n\tif (appName === 'Sky' && song.data?.appName !== 'Sky') {\r\n\t\tnew LoggerEvent(\"Error\", \"Invalid song\").trigger()\r\n\t\tthrow new Error(\"Error Invalid song\")\r\n\t}\r\n\tif (appName === 'Genshin' && song.data?.appName === 'Sky') {\r\n\t\tsong = newSkyFormatToGenshin(song)\r\n\t}\r\n\treturn song\r\n}\r\n\r\nfunction composedToOldFormat(song) {\r\n\tlet convertedNotes = []\r\n\tlet bpmPerMs = Math.floor(60000 / song.bpm)\r\n\tlet totalTime = 100\r\n\tsong.columns.forEach(column => {\r\n\t\tcolumn[1].forEach(note => {\r\n\t\t\tlet layer = 1\r\n\t\t\tif (note[1] === '111') layer = 3\r\n\t\t\tif (note[1] === '011') layer = 2\r\n\t\t\tif (note[1] === '101') layer = 3\r\n\t\t\tif (note[1] === '001') layer = 2\r\n\t\t\tif (note[1] === '110') layer = 3\r\n\t\t\tif (note[1] === '010') layer = 2\r\n\t\t\tif (note[1] === '100') layer = 1\r\n\t\t\tlet noteObj = {\r\n\t\t\t\tkey: (layer > 2 ? 2 : layer) + 'Key' + note[0],\r\n\t\t\t\ttime: totalTime\r\n\t\t\t}\r\n\t\t\tif (layer > 2) noteObj.l = 3\r\n\t\t\tconvertedNotes.push(noteObj)\r\n\t\t})\r\n\t\ttotalTime += Math.floor(bpmPerMs * TempoChangers[column[0]].changer)\r\n\t})\r\n\treturn convertedNotes\r\n}\r\n\r\nfunction recordedToOldFormat(song) {\r\n\tlet convertedNotes = []\r\n\tsong.notes.forEach(note => {\r\n\t\tconvertedNotes.push({\r\n\t\t\ttime: note[1],\r\n\t\t\tkey: \"1Key\" + note[0]\r\n\t\t})\r\n\t})\r\n\treturn convertedNotes\r\n}\r\nfunction getSongType(song) {\r\n\ttry {\r\n\t\tif (song.data === undefined) {\r\n\t\t\t//oldSky format\r\n\t\t\tsong.pitchLevel = song.pitchLevel || 0\r\n\t\t\tif (song.songNotes !== undefined) {\r\n\t\t\t\treturn \"oldSky\"\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//current format\r\n\t\t\tif (song.data.isComposedVersion) {\r\n\t\t\t\tif (typeof song.name !== \"string\") return \"none\"\r\n\t\t\t\tif (typeof song.bpm !== \"number\") return \"none\"\r\n\t\t\t\tif (!pitchArr.includes(song.pitch)) return \"none\"\r\n\t\t\t\tif (Array.isArray(song.breakpoints)) {\r\n\t\t\t\t\tif (song.breakpoints.length > 0) {\r\n\t\t\t\t\t\tif (typeof song.breakpoints[0] !== \"number\") return \"none\"\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn \"none\"\r\n\t\t\t\t}\r\n\t\t\t\tif (Array.isArray(song.columns)) {\r\n\t\t\t\t\tif (song.columns.length > 0) {\r\n\t\t\t\t\t\tlet column = song.columns[0]\r\n\t\t\t\t\t\tif (typeof column[0] !== \"number\") return \"none\"\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn \"none\"\r\n\t\t\t\t}\r\n\t\t\t\treturn \"newComposed\"\r\n\t\t\t} else {\r\n\t\t\t\tif (typeof song.name !== \"string\") return \"none\"\r\n\t\t\t\tif (typeof song.bpm !== \"number\") return \"none\"\r\n\t\t\t\tif (!pitchArr.includes(song.pitch)) return \"none\"\r\n\t\t\t\treturn \"newRecorded\"\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} catch (e) {\r\n\t\tconsole.log(e)\r\n\t\treturn \"none\"\r\n\t}\r\n\treturn \"none\"\r\n}\r\nlet genshinLayout = importNotePositions\r\n\r\nfunction newSkyFormatToGenshin(song) {\r\n\tif (song.data.isComposedVersion) {\r\n\t\tsong.instruments = song.instruments.map(instrument => 'Lyre')\r\n\t\tsong.columns.forEach(column => {\r\n\t\t\tcolumn[1] = column[1].map(note => {\r\n\t\t\t\treturn [genshinLayout[note[0]], note[1]]\r\n\t\t\t})\r\n\r\n\t\t})\r\n\t}\r\n\tif (!song.data.isComposedVersion) {\r\n\t\tsong.notes = song.notes.map(note => {\r\n\t\t\tnote[0] = genshinLayout[note[0]]\r\n\t\t\treturn note\r\n\t\t})\r\n\t}\r\n\treturn song\r\n}\r\n\r\nfunction oldSkyToNewFormat(song) {\r\n\tlet result = new Song(\"Error\")\r\n\ttry {\r\n\t\tresult = new Song(song.name)\r\n\t\tresult.bpm = song.bpm || 220\r\n\t\tresult.pitch = (pitchArr[song.pitchLevel || 0]) || \"C\"\r\n\t\t//remove duplicate notes\r\n\t\tsong.songNotes = song.songNotes.filter((note, index, self) =>\r\n\t\t\tindex === self.findIndex((n) => {\r\n\t\t\t\treturn n.key.split('Key')[1] === note.key.split('Key')[1] && n.time === note.time\r\n\t\t\t})\r\n\t\t)\r\n\t\tlet songNotes = song.songNotes\r\n\t\tsongNotes.forEach(note => {\r\n\t\t\tlet data = note.key.split(\"Key\")\r\n\t\t\tresult.notes.push([genshinLayout[data[1]], note.time, note.l ?? Number(data[0])])\r\n\t\t})\r\n\r\n\t\tif ([true, \"true\"].includes(song.isComposed)) {\r\n\t\t\tresult = ComposerSongSerialization(RecordingToComposed(result))\r\n\t\t} else {\r\n\t\t\tresult.notes = result.notes.map(e => [e[0], e[1]])\r\n\t\t}\r\n\r\n\r\n\t} catch (e) {\r\n\t\tconsole.log(e)\r\n\t\treturn new Song(\"Error importing\")\r\n\t}\r\n\treturn result\r\n}\r\nfunction RecordingToComposed(song) {\r\n\tlet bpmToMs = Math.floor(60000 / song.bpm)\r\n\tlet composed = new ComposedSong(song.name, [])\r\n\tcomposed.bpm = song.bpm\r\n\tcomposed.pitch = song.pitch\r\n\tlet notes = song.notes\r\n\t//remove duplicates\r\n\r\n\tlet converted = []\r\n\tlet grouped = groupByNotes(notes, bpmToMs / 9)\r\n\tlet combinations = [bpmToMs, Math.floor(bpmToMs / 2), Math.floor(bpmToMs / 4), Math.floor(bpmToMs / 8)]\r\n\tfor (let i = 0; i < grouped.length; i++) {\r\n\t\tlet column = new Column()\r\n\t\tcolumn.notes = grouped[i].map(note => {\r\n\t\t\tlet columnNote = new ColumnNote(note[0])\r\n\t\t\tif (note[2] === 0) columnNote.layer = \"100\"\r\n\t\t\tif (note[2] === 1) columnNote.layer = \"100\"\r\n\t\t\tif (note[2] === 2) columnNote.layer = \"010\"\r\n\t\t\tif (note[2] === 3) columnNote.layer = \"110\"\r\n\t\t\tif (note[2] === undefined) columnNote.layer = \"100\"\r\n\t\t\treturn columnNote\r\n\t\t})\r\n\t\tlet next = grouped[i + 1] || [[0, 0, 0]]\r\n\t\tlet difference = next[0][1] - grouped[i][0][1]\r\n\t\tlet paddingColumns = []\r\n\t\twhile (difference >= combinations[3]) {\r\n\t\t\tif (difference / combinations[0] >= 1) {\r\n\t\t\t\tdifference -= combinations[0]\r\n\t\t\t\tpaddingColumns.push(0)\r\n\t\t\t} else if (difference / combinations[1] >= 1) {\r\n\t\t\t\tdifference -= combinations[1]\r\n\t\t\t\tpaddingColumns.push(1)\r\n\t\t\t} else if (difference / combinations[2] >= 1) {\r\n\t\t\t\tdifference -= combinations[2]\r\n\t\t\t\tpaddingColumns.push(2)\r\n\t\t\t} else if (difference / combinations[3] >= 1) {\r\n\t\t\t\tdifference -= combinations[3]\r\n\t\t\t\tpaddingColumns.push(3)\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet finalPadding = []\r\n\t\tcolumn.tempoChanger = paddingColumns.shift() || 0\r\n\t\tpaddingColumns = paddingColumns.forEach((col, i) => {\r\n\t\t\tlet column = new Column()\r\n\t\t\tcolumn.tempoChanger = col\r\n\t\t\tfinalPadding.push(column)\r\n\t\t})\r\n\t\tconverted.push(column, ...finalPadding)\r\n\t}\r\n\tcomposed.columns = converted\r\n\treturn composed\r\n}\r\nclass Column {\r\n\tconstructor() {\r\n\t\tthis.notes = []\r\n\t\tthis.tempoChanger = 0\r\n\r\n\t}\r\n}\r\nfunction groupByNotes(notes, threshold) {\r\n\tlet result = []\r\n\twhile (notes.length > 0) {\r\n\t\tlet row = [notes.shift()]\r\n\t\tlet amount = 0\r\n\t\tfor (let i = 0; i < notes.length; i++) {\r\n\t\t\tif (row[0][1] > notes[i][1] - threshold) amount++\r\n\t\t}\r\n\t\tresult.push([...row, ...notes.splice(0, amount)])\r\n\t}\r\n\treturn result\r\n}\r\nclass ColumnNote {\r\n\tconstructor(index, layer = \"000\") {\r\n\t\tthis.index = index\r\n\t\tthis.layer = layer\r\n\t}\r\n}\r\nlet pitchArr = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"]\r\nfunction getPitchChanger(pitch) {\r\n\tlet index = pitchArr.indexOf(pitch)\r\n\tif (index < 0) index = 0\r\n\treturn Number(Math.pow(2, index / 12).toFixed(4))\r\n}\r\nfunction numberToLayer(number) {\r\n\tlet layer = \"100\"\r\n\tif (number === 0) layer = \"100\"\r\n\tif (number === 1) layer = \"010\"\r\n\tif (number === 2) layer = \"001\"\r\n\treturn layer\r\n}\r\nfunction mergeLayers(notes) {\r\n\tlet final = \"000\".split(\"\")\r\n\tnotes.forEach(notes => {\r\n\t\tnotes.layer.split(\"\").forEach((e, i) => {\r\n\t\t\tif (e === \"1\") final[i] = \"1\"\r\n\t\t})\r\n\t})\r\n\treturn final.join(\"\")\r\n}\r\nfunction groupByIndex(column) {\r\n\tlet notes = []\r\n\tcolumn.notes.forEach(note => {\r\n\t\tif (notes[note.index]) {\r\n\t\t\tnotes[note.index].push(note)\r\n\t\t} else {\r\n\t\t\tnotes[note.index] = [note]\r\n\t\t}\r\n\t})\r\n\treturn notes.filter(e => Array.isArray(e))\r\n}\r\n\r\nfunction delayMs(ms) {\r\n    return new Promise(resolve => {\r\n        workerTimers.setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\nexport {\r\n\tRecording,\r\n\tSong,\r\n\tNoteData,\r\n\tFileDownloader,\r\n\tLoggerEvent,\r\n\tPlayingSong,\r\n\tComposedSong,\r\n\tColumnNote,\r\n\tColumn,\r\n\tTempoChangers,\r\n\tComposerSongSerialization,\r\n\tComposerSongDeSerialization,\r\n\tComposerToRecording,\r\n\tgetPitchChanger,\r\n\tgetSongType,\r\n\toldSkyToNewFormat,\r\n\tRecordingToComposed,\r\n\tprepareSongDownload,\r\n\tnewSkyFormatToGenshin,\r\n\tprepareSongImport,\r\n\tpitchArr,\r\n\tgroupByNotes,\r\n\tnumberToLayer,\r\n\tmergeLayers,\r\n\tgroupByIndex,\r\n\tdelayMs,\r\n\tNotesTable\r\n}","import React, { Component } from 'react'\r\nimport { cssClasses, appName, instrumentsData } from \"../../appConfig\"\r\n\r\nclass Note extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        const { props } = this\r\n        const { data, approachingNotes,outgoingAnimation} = props\r\n        const { status , approachRate, instrument} = data\r\n        let animation = { transition: `background-color ${(props.fadeTime/1000).toFixed(2)}s, transform 0.15s` }\r\n        let className = parseClass(status)\r\n        let effects = instrumentsData[instrument]?.effects || {}\r\n        return <button\r\n            onPointerDown={(e) => {\r\n                e.preventDefault()\r\n                props.handleClick(data)\r\n            }}\r\n            className=\"button-hitbox-bigger\"\r\n        >\r\n            {approachingNotes.map((note) => {\r\n                return <ApproachCircle\r\n                    key={note.id}\r\n                    index={data.index}\r\n                    approachRate={approachRate}\r\n                />\r\n            })}\r\n            {outgoingAnimation.map(e => {\r\n                return <div \r\n                    key={e.key}\r\n                    className={cssClasses.noteAnimation}\r\n                />\r\n            })}\r\n            <div className={className} style={animation}>\r\n                <img\r\n                    draggable=\"false\"\r\n                    alt=''\r\n                    src={props.noteImage}\r\n                    style={effects}\r\n                />\r\n                <div className={cssClasses.noteName}>\r\n                    {props.noteText}\r\n                </div>\r\n            </div>\r\n        </button>\r\n    }\r\n}\r\nfunction getApproachCircleColor(index){\r\n    let numOfNotes = appName === \"Sky\" ? 5 : 7\r\n    let row = Math.floor(index / numOfNotes)\r\n    let colors = [\"#3da399\",\"#ffb347\",\"#3da399\"]\r\n    return colors[row]\r\n}\r\nfunction ApproachCircle(props) {\r\n    return <div\r\n        className={cssClasses.approachCircle}\r\n        style={{ \r\n            animation: `approach ${props.approachRate}ms linear`,\r\n            borderColor:getApproachCircleColor(props.index),\r\n        }}\r\n    >\r\n    </div>\r\n}\r\nfunction parseClass(status) {\r\n    let className = cssClasses.note\r\n    if (status === \"clicked\") className += \" click-event\"\r\n    if (status === 'toClick') className += \" note-red\"\r\n    if (status === 'toClickNext') className += \" note-border-click\"\r\n    if (status === 'toClickAndNext') className += \" note-red note-border-click\"\r\n    if (status === 'approach-wrong') className += \" click-event approach-wrong\"\r\n    if (status === 'approach-correct') className += \" click-event approach-correct\"\r\n    return className\r\n}\r\n\r\nexport default Note","import { observable } from \"mobx\";\r\nexport const songStore = observable({\r\n    data: {\r\n        song: {},\r\n        eventType: '',\r\n        start: 0\r\n    }\r\n})","import React, { Component } from 'react'\r\nimport \"./Keyboard.css\"\r\nimport { delayMs, ComposerToRecording, NotesTable } from \"../SongUtils\"\r\nimport Note from \"./Note\"\r\nimport { keyNames, pitchArr, layoutImages, appName, layoutData,speedChangers } from \"../../appConfig\"\r\nimport { songStore } from './SongStore'\r\nimport { observe } from 'mobx'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSyncAlt, faStop } from '@fortawesome/free-solid-svg-icons'\r\nclass Keyboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let propKeyboard = this.props.data.keyboard\r\n        propKeyboard.layout.forEach(note => { note.status = '' })\r\n        this.state = {\r\n            playTimestamp: new Date().getTime(),\r\n            songToPractice: [],\r\n            approachingNotes: NotesTable(appName === 'Sky' ? 15 : 21),\r\n            outgoingAnimation: NotesTable(appName === 'Sky' ? 15 : 21),\r\n            keyboard: propKeyboard.layout,\r\n            sliderState: {\r\n                position: 0,\r\n                size: 0\r\n            },\r\n            approachingScore: {\r\n                correct: 1,\r\n                wrong: 1,\r\n                score: 0,\r\n                combo: 0\r\n            },\r\n\t\t\tspeedChanger: speedChangers.find(e => e.name === 'x1'),\r\n        }\r\n        this.approachRate = 1500\r\n        this.approachingNotesList = []\r\n        this.songTimestamp = 0\r\n        this.nextChunkDelay = 0\r\n        this.disposeStore = () => { }\r\n        this.tickTime = 50\r\n        this.tickInterval = 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyboard)\r\n        this.tickInterval = setInterval(this.tick, this.tickTime)\r\n        this.disposeStore = observe(songStore, async (data) => {\r\n            let value = data.object.data\r\n            let type = value.eventType\r\n            let lostReference = JSON.parse(JSON.stringify(value.song))\r\n            if (lostReference.data?.isComposedVersion) {\r\n                lostReference = ComposerToRecording(lostReference)\r\n            }\r\n            lostReference.timestamp = new Date().getTime()\r\n            let hasSong = false\r\n            if (type === 'play') {\r\n                await this.stopSong()\r\n                this.playSong(lostReference, value.start)\r\n                hasSong = true\r\n            }\r\n            if (type === 'practice') {\r\n                await this.stopSong()\r\n                this.practiceSong(lostReference, value.start)\r\n                hasSong = true\r\n            }\r\n            if (type === 'approaching') {\r\n                await this.stopSong()\r\n                this.approachingSong(lostReference, value.start)\r\n                hasSong = true\r\n            }\r\n            if (type === 'stop') await this.stopSong()\r\n            this.props.functions.setHasSong(hasSong)\r\n        })\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyboard)\r\n        this.disposeStore()\r\n        this.songTimestamp = 0\r\n        clearInterval(this.tickInterval)\r\n    }\r\n\r\n    approachingSong = async (song) => {\r\n        let notes = []\r\n        this.approachRate = this.props.data.approachRate || 1500 \r\n        let startDelay = this.approachRate\r\n        song.notes.forEach(note => {\r\n            let obj = {\r\n                time: Math.floor(note[1] / this.state.speedChanger.value + startDelay),\r\n                index: note[0]\r\n            }\r\n            notes.push(obj)\r\n        })\r\n        this.setState({\r\n            approachingNotes: NotesTable(appName === 'Sky' ? 15 : 21),\r\n            approachingScore: {\r\n                correct: 1,\r\n                wrong: 1,\r\n                score: 0,\r\n                combo: 0\r\n            }\r\n        })\r\n        this.changeSliderState(0, notes.length)\r\n        this.approachingNotesList = notes\r\n    }\r\n\r\n    tick = () => {\r\n        if (!this.props.data.hasSong) return\r\n        const { approachingNotes, sliderState, approachingScore , speedChanger} = this.state\r\n        let stateNotes = approachingNotes\r\n        let notes = this.approachingNotesList\r\n        notes.forEach(note => {\r\n            note.time -= this.tickTime\r\n        })\r\n        let hasChanges = false\r\n        let removed = 0\r\n        for (let i = 0; i < notes.length; i++) {\r\n            if (notes[i].time < this.approachRate) {\r\n                stateNotes[notes[i].index].push({\r\n                    clicked: false,\r\n                    time: this.approachRate,\r\n                    id: Math.floor(Math.random() * 10000)\r\n                })\r\n                notes.splice(i, 1)\r\n                i--\r\n                hasChanges = true\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        stateNotes.forEach(note => {\r\n            for (let i = 0; i < note.length; i++) {\r\n                let apNote = note[i]\r\n                apNote.time -= this.tickTime\r\n                if (apNote.clicked) {\r\n                    if (apNote.time < this.approachRate / 3) {\r\n                        approachingScore.correct++\r\n                        approachingScore.combo++\r\n                        approachingScore.score += approachingScore.combo * speedChanger.value\r\n                    } else {\r\n                        approachingScore.wrong++\r\n                        approachingScore.combo = 0\r\n                    }\r\n                    apNote.time = -1 //so that it can be removed after\r\n                }\r\n                if (apNote.time < 0) {\r\n                    if (!apNote.clicked) {\r\n                        approachingScore.wrong++\r\n                        approachingScore.combo = 0\r\n                    }\r\n                    note.splice(i, 1)\r\n                    i--\r\n                    hasChanges = true\r\n                    removed++\r\n                }\r\n            }\r\n        })\r\n        if (!hasChanges) return\r\n        this.changeSliderState(sliderState.position + removed)\r\n        this.setState({\r\n            approachingNotes: stateNotes,\r\n            approachingScore: approachingScore\r\n        })\r\n    }\r\n\r\n    playSong = async (song, start = 0) => {\r\n        this.songTimestamp = song.timestamp\r\n        const { keyboard } = this.state\r\n        let notes = this.applySpeedChange(song.notes)\r\n        if (notes.length === 0) return\r\n        let previous = notes[0][1]\r\n        let pastError = 0\r\n        let previousTime = new Date().getTime()\r\n        for (let i = start; i < notes.length; i++) {\r\n            let delay = notes[i][1] - previous\r\n            previous = notes[i][1]\r\n            let note = notes[i][0]\r\n            previousTime = new Date().getTime()\r\n            if (delay > 16) await delayMs(delay - pastError)\r\n            if (this.songTimestamp !== song.timestamp) return\r\n            keyboard[note].status = 'clicked'\r\n            this.handleClick(keyboard[note])\r\n            this.setState({\r\n                keyboard,\r\n                sliderState: {\r\n                    position: i+1,\r\n                    size: notes.length\r\n                }\r\n            })\r\n            pastError = new Date().getTime() - previousTime - delay\r\n        }\r\n\r\n    }\r\n    applySpeedChange = (notes) => {\r\n        return notes.map(note => {\r\n            note[1] = note[1] / this.state.speedChanger.value\r\n            return note\r\n        })\r\n    }\r\n    practiceSong = (song, start = 0) => {\r\n        const { keyboard } = this.state\r\n        let notes = this.applySpeedChange(song.notes)\r\n        let songLength = notes.length\r\n        notes.splice(0, start)\r\n        let chunks = []\r\n        for (let i = 0; notes.length > 0; i++) {\r\n            let chunk = {\r\n                notes: [notes.shift()],\r\n                delay: 0\r\n            }\r\n            let startTime = chunk.notes.length > 0 ? chunk.notes[0][1] : 0\r\n            for (let j = 0; j < notes.length && j < 20; j++) {\r\n                let difference = notes[j][1] - chunk.notes[0][1] - 50 //TODO add threshold here\r\n                if (difference < 0) {\r\n                    chunk.notes.push(notes.shift())\r\n                    j--\r\n                }\r\n            }\r\n            chunk.delay = notes.length > 0 ? notes[0][1] - startTime : 0\r\n            chunks.push(chunk)\r\n        }\r\n        if (chunks.length === 0) return\r\n        let firstChunk = chunks[0]\r\n        this.nextChunkDelay = firstChunk.delay\r\n        let secondChunk = chunks[1]\r\n        firstChunk.notes.forEach(note => { keyboard[note[0]].status = 'toClick' })\r\n        secondChunk?.notes.forEach(note => {\r\n            let keyboardNote = keyboard[note[0]]\r\n            if (keyboardNote.status === 'toClick') return keyboardNote.status = 'toClickAndNext'\r\n            keyboardNote.status = 'toClickNext'\r\n        })\r\n        this.props.functions.setHasSong(true)\r\n        this.setState({\r\n            songToPractice: chunks,\r\n            keyboard,\r\n            sliderState: {\r\n                position: start,\r\n                size: songLength\r\n            }\r\n        })\r\n    }\r\n    handleSpeedChanger = (value) =>{\r\n        let changer = speedChangers.find(e => e.name === value)\r\n        this.setState({\r\n            speedChanger: changer\r\n        },this.restartSong)\r\n    }\r\n    restartSong =async () => {\r\n        let lostReference = JSON.parse(JSON.stringify(songStore.data))\r\n        await this.stopSong()\r\n        setTimeout(() => {\r\n            let start = songStore.data.start\r\n            if (songStore.data.eventType === 'practice'){\r\n                start = this.state.sliderState.position\r\n            }\r\n            songStore.data = {\r\n                ...lostReference,\r\n                start\r\n            }\r\n        }, 200)\r\n    }\r\n    stopSong = () => {\r\n        return new Promise(res => {\r\n            this.songTimestamp = 0\r\n            const { keyboard } = this.state\r\n            keyboard.forEach(note => {\r\n                note.status = ''\r\n                note.delay = 200\r\n            })\r\n            this.approachingNotesList = []\r\n            this.setState({\r\n                keyboard,\r\n                songToPractice: [],\r\n                approachingNotes: NotesTable(appName === 'Sky' ? 15 : 21)\r\n            }, res)\r\n\r\n            this.props.functions.setHasSong(false)\r\n        })\r\n\r\n    }\r\n    handleSliderEvent = (event) => {\r\n        this.changeSliderState(Number(event.target.value))\r\n    }\r\n    changeSliderState = async (position, size = this.state.sliderState.size) => {\r\n        this.setState({\r\n            sliderState: {\r\n                position,\r\n                size\r\n            }\r\n        })\r\n    }\r\n    handleKeyboard = (event) => {\r\n        const { keyboard } = this.state\r\n        if (event.repeat) return\r\n        if (document.activeElement.tagName === \"INPUT\") return\r\n        let code = event.code?.replace(\"Key\", \"\")\r\n        let index = this.props.data.keyboard.getNoteFromCode(code)\r\n        let note = keyboard[index]\r\n        if (note) this.handleClick(note)\r\n    }\r\n\r\n    handleApproachClick = (note) => {\r\n        const { approachingNotes } = this.state\r\n        let approachingNote = approachingNotes[note.index][0]\r\n        if (approachingNote) {\r\n            approachingNote.clicked = true\r\n            if(approachingNote.time < this.approachRate / 3) return \"approach-correct\"\r\n        }\r\n        return \"approach-wrong\"\r\n    }\r\n    handlePracticeClick = (note) => {\r\n        const { keyboard, songToPractice, sliderState } = this.state\r\n        if (songToPractice.length > 0) {\r\n            let indexClicked = songToPractice[0]?.notes.findIndex(e => e[0] === note.index)\r\n            if (indexClicked !== -1) {\r\n                songToPractice[0].notes.splice(indexClicked, 1)\r\n                if (songToPractice[0].notes.length === 0) songToPractice.shift()\r\n                if (songToPractice.length === 0) {\r\n                    this.stopSong()\r\n                    songStore.data = returnStopSong()\r\n                } else {\r\n                    let nextChunk = songToPractice[0]\r\n                    let nextNextChunk = songToPractice[1]\r\n                    nextChunk.notes.forEach(note => {\r\n                        keyboard[note[0]].status = 'toClick'\r\n                    })\r\n                    this.nextChunkDelay = nextChunk.delay\r\n                    nextNextChunk?.notes.forEach(note => {\r\n                        let keyboardNote = keyboard[note[0]]\r\n                        keyboard[note[0]].delay = nextChunk.delay\r\n                        if (keyboardNote.status === 'toClick') return keyboardNote.status = 'toClickAndNext'\r\n                        keyboardNote.status = 'toClickNext'\r\n                    })\r\n                }\r\n                this.setState({\r\n                    songToPractice: songToPractice,\r\n                    sliderState: {\r\n                        size: sliderState.size,\r\n                        position: sliderState.position + 1\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n    handleClick = (note, onlySound) => {\r\n        const { keyboard, outgoingAnimation} = this.state\r\n        const hasAnimation = this.props.data.hasAnimation\r\n        keyboard[note.index].status = 'clicked'\r\n        keyboard[note.index].delay = 200\r\n        this.handlePracticeClick(note)\r\n        let approachStatus = this.handleApproachClick(note)\r\n        if(songStore.data.eventType === 'approaching'){\r\n            keyboard[note.index].status = approachStatus\r\n        }\r\n        if(hasAnimation && songStore.data.eventType !=='approaching'){\r\n            let key = Math.floor(Math.random() * 10000) + new Date().getTime()\r\n            outgoingAnimation[note.index].push({key})\r\n        }\r\n        this.setState({ keyboard,\r\n            ...(hasAnimation? outgoingAnimation : {})\r\n        },() => {\r\n            setTimeout(() => {\r\n                if(!hasAnimation || songStore.data.eventType === 'approaching') return\r\n                const {outgoingAnimation} = this.state\r\n                outgoingAnimation[note.index].shift()\r\n                this.setState({outgoingAnimation})\r\n            },750)\r\n        })\r\n        setTimeout(() => {\r\n            if (!['clicked','approach-wrong','approach-correct'].includes(keyboard[note.index].status)) return\r\n            keyboard[note.index].status = ''\r\n            this.setState({ keyboard })\r\n        },appName === 'Sky' ? 250 : 100)\r\n        this.props.functions.playSound(note)\r\n    }\r\n    render() {\r\n        const { state, props } = this\r\n        const { data } = props\r\n        const { keyboard, approachingScore } = state\r\n        let size = data.keyboardSize / 100\r\n        if (size < 0.5) size = 0.5\r\n        if (size > 1.5) size = 1.5\r\n        let keyboardClass = \"keyboard\"\r\n        if (keyboard.length === 15) keyboardClass += \" keyboard-5\"\r\n        if (keyboard.length === 8) keyboardClass += \" keyboard-4\"\r\n        return <>\r\n            {data.hasSong &&\r\n                <div className=\"upper-right\">\r\n                    {songStore.data.eventType === 'approaching' &&\r\n                        <Score data={approachingScore} />\r\n                    }\r\n\r\n                    <div className=\"slider-wrapper\">\r\n                        <button className=\"song-button\" onClick={() => {\r\n                            this.stopSong()\r\n                            songStore.data = returnStopSong()\r\n                        }\r\n                        }>\r\n                            <FontAwesomeIcon icon={faStop} />\r\n                        </button>\r\n                        <input\r\n                            type=\"range\"\r\n                            className=\"slider\"\r\n                            min={0}\r\n                            onChange={this.handleSliderEvent}\r\n                            max={state.sliderState.size}\r\n                            value={state.sliderState.position}\r\n                        ></input>\r\n                        <button className=\"song-button\" onClick={() => {\r\n                            this.restartSong()\r\n                        }}>\r\n                            <FontAwesomeIcon icon={faSyncAlt} />\r\n                        </button>\r\n                        <select \r\n                            className='slider-select'\r\n                            onChange={(e) => this.handleSpeedChanger(e.target.value)}\r\n                            value={state.speedChanger.name}\r\n                        >\r\n                            <option disabled>Speed</option>\r\n                            {speedChangers.map(e => {\r\n                                return <option value={e.name} key={e.name}>\r\n                                    {e.name}\r\n                                </option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div\r\n                className={keyboardClass}\r\n                style={{\r\n                    transform: `scale(${size})`,\r\n                    marginBottom: size * 30 - 15\r\n                }}\r\n            >\r\n                {data.isLoading \r\n                    ? <div className=\"loading\">Loading...</div> \r\n                    \r\n                    : keyboard.map(note => {\r\n                        let noteImage = layoutImages[keyboard.length][note.index]\r\n                        let noteData = {\r\n                            ...note,\r\n                            approachRate:this.approachRate,\r\n                            instrument: this.props.data.keyboard.instrumentName,\r\n                            isAnimated: songStore.data.eventType === 'approaching' ? false : this.props.data.hasAnimation\r\n                        }\r\n                        return <Note\r\n                            key={note.index}\r\n                            data={noteData}\r\n                            approachingNotes={state.approachingNotes[note.index]}\r\n                            outgoingAnimation={state.outgoingAnimation[note.index]}\r\n                            handleClick={this.handleClick}\r\n                            noteText={getNoteText(data.noteNameType, note.index, data.pitch, keyboard.length)}\r\n                            noteImage={`./assets/icons/keys/${noteImage}.svg`}\r\n                        />\r\n    \r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </>\r\n\r\n\r\n    }\r\n}\r\nfunction Score(props) {\r\n    const { combo, score, correct, wrong} = props.data\r\n    return <div className='approaching-accuracy'>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td className='sc-2'>Accuracy</td>\r\n                    <td className='sc-1'>{(correct / (correct + wrong - 1) * 100 ).toFixed(1)}%</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className='sc-2'>Score</td>\r\n                    <td className='sc-1'>{score}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td className='sc-2'>Combo</td>\r\n                    <td className='sc-1'>{combo}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n\r\n\r\n}\r\nfunction returnStopSong() {\r\n    return {\r\n        song: {},\r\n        eventType: 'stop',\r\n        start: 0\r\n    }\r\n}\r\n\r\nfunction getNoteText(noteNameType, index, pitch, layoutLength) {\r\n    try {\r\n        if (noteNameType === \"Note name\") return keyNames[appName][pitchArr.indexOf(pitch)][index]\r\n        if (noteNameType === \"Keyboard layout\") return layoutData[layoutLength].keyboardLayout[index]\r\n        if (noteNameType === \"Do Re Mi\") return layoutData[layoutLength].mobileLayout[index]\r\n    } catch (e) { }\r\n    return ''\r\n}\r\nexport default Keyboard\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/mainpage.53c2a740.png\";","export default __webpack_public_path__ + \"static/media/composer.69d0b59e.png\";","export default __webpack_public_path__ + \"static/media/songs.4892a692.png\";","import mainPageImg from '../../assets/images/mainpage.png'\r\nimport composerImg from '../../assets/images/composer.png'\r\nimport songsImg from '../../assets/images/songs.png'\r\nimport { faCrosshairs, faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { BsCircle } from 'react-icons/bs'\r\n\r\nexport function HelpTab() {\r\n    return <>\r\n        <div className='help-title'>\r\n            Main page\r\n        </div>\r\n        <div>\r\n            <img src={mainPageImg} className='help-img' alt='tutorial for the main page' />\r\n            <ol>\r\n                <li>Record the keyboard as an audio file</li>\r\n                <li>Current note position, you can change it to reload</li>\r\n                <li>Playback speed</li>\r\n                <li>Approaching circles score</li>\r\n                <li>Approaching circle, click when it's close to the note</li>\r\n            </ol>\r\n        </div>\r\n        <div className='help-title'>\r\n            Songs menu\r\n        </div>\r\n        <div>\r\n            <img src={songsImg} className='help-img' alt='tutorial for songs page' />\r\n            <ol>\r\n                <li>Open composer to create a song</li>\r\n                <li>Import song (as json)</li>\r\n                <li>Play song (click the name)</li>\r\n                <li>Practice the song</li>\r\n                <li>Play with the approaching circles mode</li>\r\n                <li>Download the song (as json)</li>\r\n            </ol>\r\n            <div className=\"column\">\r\n                <div>\r\n                    <FontAwesomeIcon icon={faCrosshairs} /> = practice the song\r\n                </div>\r\n                <div>\r\n                    <BsCircle /> = Approaching circles mode\r\n                </div>\r\n                <div>\r\n                    <FontAwesomeIcon icon={faDownload} /> = download the song\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div className='help-title'>\r\n            Composer\r\n        </div>\r\n        <div>\r\n            <img src={composerImg} className='help-img' alt=\"tutorial for composer\" />\r\n            <ol>\r\n                <li>Go to the next / previous breakpoint</li>\r\n                <li>Timeline of the breakpoints</li>\r\n                <li>Open the tools</li>\r\n                <li>Add 16 columns to the end</li>\r\n                <li>Remove the current selected column</li>\r\n                <li>Add column after the current one</li>\r\n                <li>Change layer (instrument)</li>\r\n                <li>Change column's duration</li>\r\n            </ol>\r\n            <div className='help-title'>\r\n                Composer shortcuts\r\n            </div>\r\n            <div style={{marginTop:'1.5rem'}}>\r\n                The composer has shortcuts for PC users:\r\n            </div>\r\n            <table className='keys-table'>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><Key>A / D</Key></td><td> = move left / right</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Key>1 / 2 / 3 / 4</Key></td><td> = change tempo</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Key>Space bar</Key></td><td> = play / pause song</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Key>Arrow Left</Key></td><td> = go to previous breakpoint</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Key>Arrow Right</Key></td><td> = go to next breakpoint</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Key>Arrow Up</Key></td><td> = select previous layer</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Key>Arrow Down</Key></td><td> = select next layer </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Key>Shift + Note</Key></td><td> = Adds/remove a note in the column </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Key>Q</Key></td><td> = remove current column</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><Key>E</Key></td><td> = add column </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            When playing a song, you can press on the PC keyboard to add notes\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\nfunction Key(props){\r\n    return <div className='keyboard-key'>\r\n        {props.children}\r\n    </div>\r\n}","import React, { Component, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMusic, faTimes, faCog, faTrash, faCrosshairs, faDownload, faInfo, faCompactDisc, faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { FaDiscord, FaGithub} from 'react-icons/fa';\r\nimport { BsCircle } from 'react-icons/bs'\r\nimport { RiPlayListFill } from 'react-icons/ri'\r\nimport \"./menu.css\"\r\n\r\nimport { FileDownloader, LoggerEvent, prepareSongImport, prepareSongDownload} from \"../SongUtils\"\r\nimport { FilePicker } from \"react-file-picker\"\r\nimport { appName } from \"../../appConfig\"\r\nimport {songStore} from './SongStore'\r\nimport { HelpTab } from './HelpTab';\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            selectedMenu: \"Songs\",\r\n            selectedSongType: \"recorded\",\r\n            searchInput:'',\r\n            searchedSongs:[],\r\n            searchStatus: 'Write a song name then search!',\r\n            isPersistentStorage: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.checkPersistentStorage()\r\n\r\n    }\r\n    checkPersistentStorage = async () => {\r\n        if (navigator.storage && navigator.storage.persist) {\r\n            let isPersisted = await navigator.storage.persisted()\r\n            if(!isPersisted) isPersisted = await navigator.storage.persist()\r\n            this.setState({isPersistentStorage: isPersisted})\r\n          }\r\n    }\r\n    handleSearchInput = (text) =>{\r\n        this.setState({\r\n            searchInput: text\r\n        })\r\n    }\r\n    clearSearch = () =>{\r\n        this.setState({\r\n            searchInput: '',\r\n            searchedSongs:[],\r\n            searchStatus: 'Write a song name then search!'\r\n        })\r\n    }\r\n    searchSongs = async () =>{\r\n        const { searchInput, searchStatus } = this.state\r\n        if(searchStatus === \"Searching...\") return\r\n        if(searchInput.trim().length === 0){\r\n            return this.setState({\r\n                searchStatus: 'Please write a non empty name'\r\n            })\r\n        }\r\n        this.setState({\r\n            searchStatus: 'Searching...'\r\n        })\r\n        let fetchedSongs = await fetch('https://sky-music.herokuapp.com/api/songs?search='+encodeURI(searchInput)).then(data => data.json())\r\n        if(fetchedSongs.error){\r\n            this.setState({\r\n                searchStatus: 'Please write a non empty name'\r\n            })\r\n            return new LoggerEvent(\"Error\", fetchedSongs.error).trigger()\r\n        }\r\n        this.setState({\r\n            searchedSongs: fetchedSongs,\r\n            searchStatus: 'success'\r\n        })\r\n    }\r\n    toggleMenu = (override) => {\r\n        if (typeof override !== \"boolean\") override = undefined\r\n        let newState = override !== undefined ? override : !this.state.open\r\n        this.setState({\r\n            open: newState,\r\n        })\r\n    }\r\n    selectSideMenu = (selection) => {\r\n        if (selection === this.state.selectedMenu && this.state.open) {\r\n            return this.setState({\r\n                open: false,\r\n            })\r\n        }\r\n        this.clearSearch()\r\n        this.setState({\r\n            selectedMenu: selection,\r\n            open: true\r\n        })\r\n    }\r\n    changeSelectedSongType = (name) => {\r\n        this.setState({\r\n            selectedSongType: name\r\n        })\r\n    }\r\n    importSong = (file) => {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load',async (event) => {\r\n            try {\r\n                let songsInput = JSON.parse(event.target.result)\r\n                \r\n                if(!Array.isArray(songsInput)) songsInput = [songsInput]\r\n                for(let song of songsInput){\r\n                    song = prepareSongImport(song)\r\n                    await this.props.functions.addSong(song)\r\n                }\r\n            } catch (e) {\r\n                let fileName = file.name\r\n                console.error(e)\r\n                if(fileName?.includes?.(\".mid\")){\r\n                    return new LoggerEvent(\"Error\", \"Midi files should be imported in the composer\").trigger()\r\n                }   \r\n                new LoggerEvent(\"Error\", \"Error importing song\").trigger()\r\n                \r\n            }\r\n        })\r\n        reader.readAsText(file)\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        let songName = song.name\r\n        if(appName === \"Sky\"){\r\n            //adds old format into the sheet\r\n            song = prepareSongDownload(song)\r\n        }\r\n        if(!Array.isArray(song)) song = [song]\r\n        song.forEach(song1 => {\r\n            song1.data.appName = appName\r\n        })\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json,`${songName}.${appName.toLowerCase()}sheet.json`)\r\n        new LoggerEvent(\"Success\", \"Song downloaded\").trigger()\r\n    }\r\n\r\n    downloadAllSongs = () => {\r\n        let toDownload = []\r\n        this.props.data.songs.forEach(song => {\r\n            if (song._id) delete song._id\r\n            if(appName === \"Sky\"){\r\n                song = prepareSongDownload(song)\r\n            }\r\n            Array.isArray(song) ? toDownload.push(...song) : toDownload.push(song)\r\n        })\r\n        let fileDownloader = new FileDownloader()\r\n        let json = JSON.stringify(toDownload)\r\n        let date = new Date().toISOString().split('T')[0]\r\n        fileDownloader.download(json,`${appName}_Backup_${date}.json`)\r\n        new LoggerEvent(\"Success\", \"Song backup downloaded\").trigger()\r\n    }\r\n\r\n    render() {\r\n        let sideClass = this.state.open ? \"side-menu menu-open\" : \"side-menu\"\r\n        const { data, functions } = this.props\r\n        const { handleSettingChange } = functions\r\n        functions.toggleMenu = this.toggleMenu\r\n        functions.downloadSong = this.downloadSong\r\n        let changePage = this.props.functions.changePage\r\n        let songs = data.songs.filter(song => !song.data.isComposedVersion)\r\n        let composedSongs = data.songs.filter(song => song.data.isComposedVersion)\r\n        const { searchStatus , searchedSongs, selectedMenu } = this.state\r\n        let searchedSongFunctions = {\r\n            importSong: functions.addSong,\r\n        }\r\n        return <div className=\"menu-wrapper\">\r\n            <div className=\"menu menu-visible\">\r\n                {this.state.open && <CloseMenu action={this.toggleMenu} />}\r\n                <MenuItem type=\"Help\" action={this.selectSideMenu} className=\"margin-top-auto\">\r\n                    <FontAwesomeIcon icon={faInfo} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Library\" action={this.selectSideMenu}>\r\n                    <RiPlayListFill className='icon'/>\r\n                </MenuItem>\r\n                <MenuItem type=\"Songs\" action={this.selectSideMenu} >\r\n                    <FontAwesomeIcon icon={faMusic} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Settings\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faCog} className=\"icon\" />\r\n                </MenuItem>\r\n\r\n                <MenuItem type=\"Composer\" action={() => changePage(\"Composer\")}>\r\n                    <FontAwesomeIcon icon={faCompactDisc} className=\"icon\" />\r\n                </MenuItem>\r\n            </div>\r\n            <div className={sideClass}>\r\n                <MenuPanel title=\"No selection\" visible={selectedMenu}>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Songs\" visible={selectedMenu}>\r\n                    <div className=\"songs-buttons-wrapper\">\r\n                        <button className=\"genshin-button\"\r\n                            onClick={() => changePage(\"Composer\")}\r\n                        >\r\n                            Compose song\r\n                        </button>\r\n                        <FilePicker\r\n                            onChange={(file) => this.importSong(file)}\r\n                        >\r\n                            <button className=\"genshin-button\">\r\n                                Import song\r\n                            </button>\r\n                        </FilePicker>\r\n\r\n                    </div>\r\n                    <div className=\"tab-selector-wrapper\">\r\n                        <button\r\n                            className={this.state.selectedSongType === \"recorded\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"recorded\")}\r\n                        >\r\n                            Recorded\r\n                        </button>\r\n                        <button\r\n                            className={this.state.selectedSongType === \"composed\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"composed\")}\r\n                        >\r\n                            Composed\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"songs-wrapper\">\r\n                        {this.state.selectedSongType === \"recorded\"\r\n                            ? songs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={functions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                            : composedSongs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={functions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div style={{marginTop:\"auto\", paddingTop:'0.5rem', width:'100%',display:'flex',justifyContent:'flex-end'}}>\r\n                        <button \r\n                            className='genshin-button'\r\n                            style={{marginLeft:'auto'}}\r\n                            onClick={this.downloadAllSongs}\r\n                        >\r\n                            Download all songs (backup)\r\n                        </button>\r\n                    </div>\r\n                </MenuPanel>\r\n\r\n                <MenuPanel title=\"Settings\" visible={selectedMenu}>\r\n                    {Object.entries(data.settings).map(([key, data]) => {\r\n                        return <SettingsRow\r\n                            key={key + data.value}\r\n                            objKey={key}\r\n                            data={data}\r\n                            update={handleSettingChange}\r\n                        >\r\n\r\n                        </SettingsRow>\r\n                    })}\r\n                    <div style={{marginTop:'1rem'}}>\r\n                        {this.state.isPersistentStorage ?\"Storage is persisted\" : \"Storage is not persisted\"}\r\n                    </div>\r\n                    {!checkIfTWA() && <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Support me\r\n                    </a>}\r\n                </MenuPanel>\r\n                \r\n                <MenuPanel title=\"Library\" visible={selectedMenu}>\r\n                    <div>\r\n                        Here you can find songs to learn, they are provided by the sky-music library.\r\n                    </div>\r\n                    <div className='library-search-row' >\r\n                        <input \r\n                            className='library-search-input' \r\n                            placeholder='Song name'\r\n                            onKeyDown={(e) => {\r\n                                if(e.code === \"Enter\") this.searchSongs()\r\n                            }}\r\n                            onInput={(e) => this.handleSearchInput(e.target.value)}\r\n                            value={this.state.searchInput}\r\n                        />\r\n                        <button className='library-search-btn' onClick={this.clearSearch}>\r\n                            <FontAwesomeIcon icon={faTimes}/>\r\n                        </button>\r\n                        <button className='library-search-btn' onClick={this.searchSongs}>\r\n                            <FontAwesomeIcon icon={faSearch}/>\r\n                        </button>\r\n                    </div>\r\n                    <div className='library-search-songs-wrapper'>\r\n                        {searchStatus === \"success\" ?\r\n                            searchedSongs.length > 0 \r\n                                ?   searchedSongs.map(song => \r\n                                        <SearchedSong\r\n                                            key={song.file}\r\n                                            data={song}\r\n                                            functions={searchedSongFunctions}\r\n                                        >\r\n                                            {song.name}\r\n                                        </SearchedSong>)   \r\n                                :   <div className='library-search-result-text'>\r\n                                        No results\r\n                                    </div>\r\n                            :   <div className='library-search-result-text'>\r\n                                    {searchStatus}\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Help\" visible={selectedMenu}>\r\n                    <div className='help-icon-wrapper'>\r\n                        <a href='https://discord.gg/Arsf65YYHq' >\r\n                            <FaDiscord className='help-icon' />\r\n                        </a>\r\n                        <a href='https://github.com/Specy/genshin-music' >\r\n                            <FaGithub className='help-icon' />\r\n                        </a>\r\n                        \r\n                    </div>\r\n                    <div \r\n                        className='go-to-changelog genshin-button'\r\n                        onClick={() => changePage('Changelog')}\r\n                    >\r\n                        Go to changelog\r\n                    </div>\r\n                    <HelpTab />\r\n                    {!checkIfTWA() && <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Support me\r\n                    </a>}\r\n                </MenuPanel>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n//TODO export all those as their own component\r\nfunction MenuPanel(props) {\r\n    let className = props.visible === props.title ? \"menu-panel menu-panel-visible\" : \"menu-panel\"\r\n    return <div className={className}>\r\n        <div className=\"menu-title\">\r\n            {props.title}\r\n        </div>\r\n        <div className=\"panel-content-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\nfunction CloseMenu(props) {\r\n    return <div onClick={() => props.action(false)} className=\"close-menu menu-item\">\r\n        <FontAwesomeIcon icon={faTimes} className=\"icon\" />\r\n    </div>\r\n}\r\nfunction SettingsRow(props) {\r\n    const { data, update, objKey } = props\r\n    const [valueHook, setter] = useState(data.value)\r\n    function handleChange(e) {\r\n        let el = e.target\r\n        let value = data.type === \"checkbox\" ? el.checked : el.value\r\n        if (data.type === \"number\") {\r\n            value = Number(value)\r\n            e.target.value = \"\" //have to do this to remove a react bug that adds a 0 at the start\r\n            if (value < data.threshold[0] || value > data.threshold[1]) {\r\n                return\r\n            }\r\n        }\r\n\r\n        if(el.type === 'checkbox'){\r\n            data.value = value\r\n            let obj = {\r\n                key: objKey,\r\n                data\r\n            }\r\n            update(obj)\r\n        }\r\n        setter(value)\r\n    }\r\n    function sendChange() {\r\n        if (data.value === valueHook) return\r\n        data.value = valueHook\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function sendChangeSelect(e) {\r\n        let value = e.target.value\r\n        data.value = value\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    if (objKey === \"settingVesion\") return null\r\n    return <div className=\"settings-row\">\r\n        <div>\r\n            {data.name}\r\n        </div>\r\n        {data.type === \"select\"\r\n            ? <select value={data.value}\r\n                onChange={sendChangeSelect}\r\n            >\r\n                {data.options.map(e => {\r\n                    return <option value={e} key={e}>{e}</option>\r\n                })}\r\n            </select>\r\n            : <input\r\n                type={data.type}\r\n                placeholder={data.placeholder || \"\"}\r\n                value={valueHook}\r\n                checked={valueHook}\r\n                onChange={handleChange}\r\n                onBlur={sendChange}\r\n            />}\r\n    </div>\r\n}\r\nfunction SongRow(props) {\r\n    let data = props.data\r\n    let deleteSong = props.functions.removeSong\r\n    let toggleMenu = props.functions.toggleMenu\r\n    let downloadSong = props.functions.downloadSong\r\n \r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\" onClick={() => {\r\n            songStore.data = {\r\n                eventType: 'play',\r\n                song: data,\r\n                start: 0\r\n            }\r\n            toggleMenu(false)\r\n        }}>\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => {\r\n                    songStore.data = {\r\n                        eventType: 'practice',\r\n                        song: data,\r\n                        start: 0\r\n                    }\r\n                    toggleMenu(false)\r\n                }}\r\n            >\r\n                <FontAwesomeIcon icon={faCrosshairs} />\r\n            </button>\r\n            \r\n            <button className=\"song-button\" onClick={() => {\r\n                    songStore.data = {\r\n                        eventType: 'approaching',\r\n                        song: data,\r\n                        start: 0\r\n                    }\r\n                    toggleMenu(false)\r\n                }}\r\n            >\r\n                <BsCircle />\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => deleteSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\nclass MenuItem extends Component {\r\n    render() {\r\n        let className = this.props.className ? `menu-item ${this.props.className}` : \"menu-item\"\r\n        return <div\r\n            className={className}\r\n            onClick={() => this.props.action(this.props.type)}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction SearchedSong(props){\r\n    const { functions, data} = props\r\n    const { importSong } = functions\r\n    const download = async function(){\r\n        try{\r\n            let song = await fetch('https://sky-music.herokuapp.com/api/songs?get='+encodeURI(data.file)).then(data => data.json())\r\n            song = prepareSongImport(song)\r\n            importSong(song)\r\n        }catch(e){\r\n            console.error(e)\r\n            new LoggerEvent(\"Error\", \"Error downloading song\").trigger()\r\n        }\r\n    }\r\n    const play = async function(){\r\n        try{\r\n            let song = await fetch('https://sky-music.herokuapp.com/api/songs?get='+encodeURI(data.file)).then(data => data.json())\r\n            song = prepareSongImport(song)\r\n            songStore.data = {\r\n                eventType: 'play',\r\n                song: song,\r\n                start: 0\r\n            }\r\n        }catch(e){\r\n            console.error(e)\r\n            new LoggerEvent(\"Error\", \"Error downloading song\").trigger()\r\n        }\r\n    }\r\n    return <div className=\"song-row\">\r\n    <div className=\"song-name\" onClick={() => {\r\n        play(data)\r\n    }}>\r\n        {data.name}\r\n    </div>\r\n    <div className=\"song-buttons-wrapper\">\r\n        <button className=\"song-button\" onClick={download}>\r\n            <FontAwesomeIcon icon={faDownload} />\r\n        </button>\r\n    </div>\r\n</div>\r\n}\r\nfunction checkIfTWA(){\r\n    let isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n    return isTwa\r\n  }\r\n\r\nexport default Menu","import { isMobile } from \"is-mobile\"\r\nimport {instruments, appName} from \"../appConfig\"\r\nlet ComposerSettings = {\r\n    settingVesion: appName + 14,\r\n    instrument: {\r\n        name: \"Instrument (Layer 1)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    layer2: {\r\n        name: \"Instrument (Layer 2)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    layer3: {\r\n        name: \"Instrument (Layer 3)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    bpm: {\r\n        name: \"Bpm\",\r\n        type: \"number\",\r\n        songSetting: true,\r\n        threshold: [0, 1600],\r\n        value: 220\r\n    },\r\n    beatMarks: {\r\n        name: \"Beat marks\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 3,\r\n        options: [\r\n            3,\r\n            4\r\n        ]\r\n    },\r\n    noteNameType:{\r\n        name: \"Note name type\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: appName === \"Genshin\" \r\n                                ? isMobile() \r\n                                    ? \"Do Re Mi\" \r\n                                    : \"Keyboard layout\"\r\n                                : \"Note name\",\r\n        options: appName === \"Genshin\"\r\n        ? [\r\n            \"Note name\",\r\n            \"Keyboard layout\",\r\n            \"Do Re Mi\"\r\n        ]\r\n        : [\r\n            \"Note name\",\r\n            \"Keyboard layout\"\r\n        ]\r\n    },\r\n    pitch: {\r\n        name: \"Pitch\",\r\n        type: \"select\",\r\n        songSetting: true,\r\n        value: \"C\",\r\n        options: [\r\n            \"C\",\r\n            \"Db\",\r\n            \"D\",\r\n            \"Eb\",\r\n            \"E\",\r\n            \"F\",\r\n            \"Gb\",\r\n            \"G\",\r\n            \"Ab\",\r\n            \"A\",\r\n            \"Bb\",\r\n            \"B\",\r\n        ]\r\n    },\r\n    columnsPerCanvas: {\r\n        name: \"Number of visible columns\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 35,\r\n        options: [\r\n            20,\r\n            25,\r\n            30,\r\n            35,\r\n            40,\r\n            45,\r\n            50\r\n        ]\r\n    },\r\n    caveMode: {\r\n        name: \"Reverb (cave mode)\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    },\r\n    autosave: {\r\n        name: \"Autosave changes\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    },\r\n    backgroundImage:{\r\n        name: \"Background image (url)\",\r\n        type: \"text\",\r\n        songSetting: false,\r\n        value: \"\",\r\n        placeholder: \"Write here\"\r\n    },\r\n    syncTabs:{\r\n        name: \"Autoplay in all tabs (pc only)\",\r\n        type: \"checkbox\",\r\n        songSetting:false,\r\n        value: false\r\n    }\r\n}\r\nlet MainPageSettings = {\r\n    settingVesion:appName + 12,\r\n    keyboardSize: {\r\n        name: \"Keyboard size\",\r\n        type: \"number\",\r\n        songSetting: false,\r\n        value: 100,\r\n        threshold: [0, 200]\r\n    },\r\n    instrument: {\r\n        name: \"Instrument\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        options: instruments\r\n    },\r\n    noteNameType:{\r\n        name: \"Note name type\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: appName === \"Genshin\" \r\n                                ? isMobile() \r\n                                    ? \"Do Re Mi\" \r\n                                    : \"Keyboard layout\"\r\n                                : \"Note name\",\r\n                                \r\n        options: appName === \"Genshin\"\r\n        ? [\r\n            \"Note name\",\r\n            \"Keyboard layout\",\r\n            \"Do Re Mi\"\r\n        ]\r\n        : [\r\n            \"Note name\",\r\n            \"Keyboard layout\"\r\n        ]\r\n    },\r\n    approachSpeed: {\r\n        name: \"Approach Rate (AR)\",\r\n        type: \"number\",\r\n        songSetting: false,\r\n        value: 1500,\r\n        threshold: [0, 5000]\r\n    },\r\n    pitch: {\r\n        name: \"Pitch\",\r\n        type: \"select\",\r\n        songSetting: true,\r\n        value: \"C\",\r\n        options: [\r\n            \"C\",\r\n            \"Db\",\r\n            \"D\",\r\n            \"Eb\",\r\n            \"E\",\r\n            \"F\",\r\n            \"Gb\",\r\n            \"G\",\r\n            \"Ab\",\r\n            \"A\",\r\n            \"Bb\",\r\n            \"B\",\r\n        ]\r\n    },\r\n    caveMode: {\r\n        name: \"Reverb (cave mode)\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    },\r\n    backgroundImage:{\r\n        name: \"Background image (url)\",\r\n        type: \"text\",\r\n        songSetting: false,\r\n        value: \"\",\r\n        placeholder: \"Write here\"\r\n    },\r\n    noteAnimation:{\r\n        name: \"Note animation\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false\r\n    }\r\n}\r\nexport {\r\n    ComposerSettings,\r\n    MainPageSettings\r\n}","import { LoggerEvent } from \"./SongUtils\"\r\n\r\nasync function asyncPrompt(question) {\r\n    return new Promise(resolve => {\r\n        let container = document.createElement(\"div\")\r\n        container.className = \"floating-prompt\"\r\n        let text = document.createElement(\"div\")\r\n        text.innerText = question\r\n        let input = document.createElement(\"input\")\r\n        input.type = \"text\"\r\n        input.placeholder = \"Write here\"\r\n        input.className = \"prompt-input\"\r\n        let row = document.createElement(\"div\")\r\n        let cancel = document.createElement(\"button\")\r\n        let ok = document.createElement(\"button\")\r\n        cancel.className = \"prompt-button\"\r\n        ok.className = \"prompt-button disabled\"\r\n        row.className = \"prompt-row\"\r\n        ok.innerText = \"Ok\"\r\n        cancel.innerText = \"Cancel\"\r\n        row.append(cancel, ok)\r\n        container.append(text, input, row)\r\n        document.body.appendChild(container)\r\n        input.addEventListener(\"input\", () => {\r\n            if (input.value.trim() === \"\") {\r\n                ok.classList.add(\"disabled\")\r\n            } else {\r\n                ok.classList.remove(\"disabled\")\r\n            }\r\n\r\n        })\r\n        cancel.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(null)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n        ok.addEventListener(\"click\", () => {\r\n            if (input.value.trim() === \"Untitled\") {\r\n                input.value = \"\"\r\n                return new LoggerEvent(\"Warning\", '\"Untitled\" is a reserved word, use another').trigger()\r\n            }\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(input.value.trim())\r\n\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n    })\r\n}\r\n\r\nasync function asyncConfirm(question) {\r\n    return new Promise(resolve => {\r\n        let container = document.createElement(\"div\")\r\n        container.className = \"floating-prompt\"\r\n        let text = document.createElement(\"div\")\r\n        text.innerText = question\r\n        let row = document.createElement(\"div\")\r\n        let cancel = document.createElement(\"button\")\r\n        let ok = document.createElement(\"button\")\r\n\r\n        cancel.className = \"prompt-button\"\r\n        ok.className = \"prompt-button\"\r\n        row.className = \"prompt-row\"\r\n        ok.innerText = \"Yes\"\r\n        ok.style.background = '#628c83'\r\n        cancel.style.background = '#a9525a'\r\n        cancel.innerText = \"No\"\r\n        row.append(cancel, ok)\r\n        container.append(text, row)\r\n        document.body.appendChild(container)\r\n        cancel.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(false)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n        ok.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(true)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n    })\r\n}\r\n\r\nexport {\r\n    asyncConfirm,\r\n    asyncPrompt\r\n}","export default __webpack_public_path__ + \"static/media/rotate.e7c0f107.svg\";","import { instrumentsData, layoutData, instruments,audioContext } from \"../appConfig\"\r\nclass Instrument {\r\n    constructor(instrumentName) {\r\n        this.instrumentName = instrumentName === undefined ? instruments[0] : instrumentName\r\n        this.layout = []\r\n        this.buffers = []\r\n        this.loaded = false\r\n        this.deleted = false\r\n        this.volumeNode = audioContext.createGain()\r\n        let instrumentData = instrumentsData[this.instrumentName]\r\n\r\n        this.keyboardLayout = layoutData[instrumentData.notes].keyboardLayout\r\n        this.mobileLayout = layoutData[instrumentData.notes].mobileLayout\r\n        this.keyboardCodes = layoutData[instrumentData.notes].keyboardCodes\r\n        \r\n        this.keyboardLayout.forEach((noteName, i) => {\r\n            let noteNames = {\r\n                keyboard: noteName,\r\n                mobile: this.mobileLayout[i]\r\n            }\r\n            let url = `./assets/audio/${instrumentName}/${i}.mp3`\r\n            this.layout.push(new NoteData(i, noteNames, url))\r\n        })\r\n\r\n        this.volumeNode.gain.value = 0.8\r\n    }\r\n    getNoteFromCode = (code) => {\r\n        let index = this.keyboardLayout.findIndex(e => e === String(code))\r\n        return index !== -1 ? index : null\r\n    }\r\n\r\n    changeVolume = (amount) => {\r\n        let newVolume = Number((amount / 135).toFixed(2))\r\n        if(amount < 5) newVolume = 0\r\n        this.volumeNode.gain.value = newVolume\r\n    }\r\n\r\n    play = (note, pitch) => {\r\n        if(this.deleted) return\r\n        let player = audioContext.createBufferSource()\r\n        player.buffer = this.buffers[note]\r\n        player.connect(this.volumeNode)\r\n        player.playbackRate.value = pitch\r\n        player.start(0)\r\n        player.onended = () => {\r\n            player.stop()\r\n            player.disconnect()\r\n        }\r\n    }\r\n    load = async () => {\r\n        let emptyBuffer = audioContext.createBuffer(2, audioContext.sampleRate, audioContext.sampleRate)\r\n        const requests = this.layout.map(note => {\r\n            return new Promise(resolve => {\r\n                fetch(note.url)\r\n                    .then(result => result.arrayBuffer())\r\n                    .then(buffer => {\r\n                        audioContext.decodeAudioData(buffer, resolve, () => {\r\n                            resolve(emptyBuffer)\r\n                        })\r\n                        .catch(e => {resolve(emptyBuffer)})\r\n                    }).catch(e => {resolve(emptyBuffer)})\r\n            })\r\n        })\r\n        this.buffers = await Promise.all(requests)\r\n        this.loaded = true\r\n        return true\r\n    }\r\n    disconnect = () =>{\r\n        this.volumeNode.disconnect()\r\n    }\r\n    connect = (node) => {\r\n        this.volumeNode.connect(node)\r\n    }\r\n    delete = () => {\r\n        this.disconnect()\r\n        this.deleted = true\r\n        this.buffers = null\r\n    }\r\n}\r\n\r\n\r\n\r\nclass NoteData {\r\n    constructor(index, noteNames, url) {\r\n        this.index = index\r\n        this.noteNames = noteNames\r\n        this.url = url\r\n        this.buffer = new ArrayBuffer(8)\r\n    }\r\n}\r\nexport default Instrument","import { audioContext } from \"../appConfig\";\r\nimport toWav from 'audiobuffer-to-wav'\r\nexport default class AudioRecorder {\r\n    constructor() {\r\n        this.node = audioContext.createMediaStreamDestination()\r\n        this.recorder = new MediaRecorder(this.node.stream)\r\n    }\r\n    start() {\r\n        this.recorder.start()\r\n    }\r\n    stop() {\r\n        return new Promise(resolve => {\r\n            this.recorder.addEventListener('dataavailable', function (e) {\r\n                resolve({\r\n                    data: e.data,\r\n                    toUrl: () => {\r\n                        return URL.createObjectURL(e.data);\r\n                    }\r\n                })\r\n            }, { once: true })\r\n            this.recorder.stop()\r\n        })\r\n    }\r\n\r\n    async download(urlBlob, fileName) {\r\n        const anchor = document.createElement(\"a\")\r\n        const wav = toWav(await blobToAudio(urlBlob))\r\n        var blob = new Blob([new DataView(wav)], {\r\n            type: 'audio/wav'\r\n        })\r\n        anchor.download = fileName\r\n        anchor.href = URL.createObjectURL(blob)\r\n        anchor.click();\r\n    }\r\n}\r\n\r\nfunction blobToAudio(blob) {\r\n    return new Promise(resolve => {\r\n        const audioContext = new AudioContext();\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n            audioContext.decodeAudioData(fileReader.result, (audioBuffer) => {\r\n                resolve(audioBuffer)\r\n            });\r\n        };\r\n        fileReader.readAsArrayBuffer(blob);\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Keyboard from \"./Keyboard\"\r\nimport Menu from \"./Menu\"\r\nimport ZangoDb from \"zangodb\"\r\nimport { Song, Recording, LoggerEvent, prepareSongImport, getPitchChanger } from \"../SongUtils\"\r\nimport { MainPageSettings } from \"../SettingsObj\"\r\nimport { asyncConfirm, asyncPrompt } from \"../AsyncPrompts\"\r\nimport rotateImg from \"../../assets/icons/rotate.svg\"\r\nimport { appName, audioContext } from \"../../appConfig\"\r\nimport Instrument from '../Instrument';\r\nimport { songStore } from './SongStore'\r\nimport AudioRecorder from '../AudioRecorder';\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.db = new ZangoDb.Db(appName, { songs: [] })\r\n\t\tthis.recording = new Recording()\r\n\t\tlet settings = this.getSettings()\r\n\t\tthis.dbCol = {\r\n\t\t\tsongs: this.db.collection(\"songs\")\r\n\t\t}\r\n\t\tthis.state = {\r\n\t\t\tinstrument: new Instrument(),\r\n\t\t\tisLoadingInstrument: true,\r\n\t\t\tisRecording: false,\r\n\t\t\tisRecordingAudio: false,\r\n\t\t\tsongs: [],\r\n\t\t\tsettings: settings,\r\n\t\t\tisDragging: false,\r\n\t\t\tthereIsSong: false\r\n\t\t}\r\n\t\tthis.reverbNode = undefined\r\n\t\tthis.reverbVolumeNode = undefined\r\n\t\tthis.audioContext = audioContext\r\n\t\tthis.recorder = new AudioRecorder()\r\n\t}\r\n\r\n\tinit = async () => {\r\n\t\tconst { settings } = this.state\r\n\t\tawait this.loadInstrument(settings.instrument.value)\r\n\t\tawait this.loadReverb()\r\n\t\tthis.toggleReverbNodes(settings.caveMode.value)\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tdocument.body.addEventListener('dragenter', this.handleDrag)\r\n\t\tdocument.body.addEventListener('dragleave', this.resetDrag)\r\n\t\tdocument.body.addEventListener('dragover', this.handleDragOver)\r\n\t\tdocument.body.addEventListener('drop', this.handleDrop)\r\n\t\tthis.syncSongs()\r\n\t\tthis.init()\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.body.removeEventListener('dragenter', this.handleDrag)\r\n\t\tdocument.body.removeEventListener('dragleave', this.resetDrag)\r\n\t\tdocument.body.removeEventListener('drop', this.handleDrop)\r\n\t\tdocument.body.addEventListener('dragover', this.handleDragOver)\r\n\t\tsongStore.data = {\r\n\t\t\tsong: {},\r\n\t\t\teventType: 'stop',\r\n\t\t\tstart: 0\r\n\t\t}\r\n\t\tthis.audioContext = undefined\r\n\t\tthis.recorder = undefined\r\n\t\tthis.reverbNode = undefined\r\n\t\tthis.reverbVolumeNode = undefined\r\n\t\tthis.state.instrument.delete()\r\n\t}\r\n\tresetDrag = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tisDragging: false\r\n\t\t})\r\n\t}\r\n\thandleDragOver = (e) => {\r\n\t\te.preventDefault()\r\n\t\tthis.setState({\r\n\t\t\tisDragging: true\r\n\t\t})\r\n\t}\r\n\thandleDrag = (e) => {\r\n\t\te.preventDefault()\r\n\t\tthis.setState({\r\n\t\t\tisDragging: true\r\n\t\t})\r\n\t}\r\n\tsetHasSong = (data) => {\r\n\t\tthis.setState({\r\n\t\t\tthereIsSong: data\r\n\t\t})\r\n\t}\r\n\thandleDrop = async (e) => {\r\n\t\tthis.resetDrag()\r\n\t\te.preventDefault()\r\n\t\tlet songs = await Promise.all(Array.from(e.dataTransfer.files).map(file => file.text()))\r\n\t\tfor (let i = 0; i < songs.length; i++) {\r\n\t\t\ttry {\r\n\t\t\t\tlet song = prepareSongImport(JSON.parse(songs[i]))\r\n\t\t\t\tawait this.addSong(song)\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e)\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\ttoggleReverbNodes = (hasReverb) => {\r\n\t\tconst { instrument } = this.state\r\n\t\tif (hasReverb) {\r\n\t\t\tif (!this.reverbNode) return console.log(\"Couldn't connect to reverb\")\r\n\t\t\tinstrument.disconnect()\r\n\t\t\tinstrument.connect(this.reverbNode)\r\n\t\t} else {\r\n\t\t\tinstrument.disconnect()\r\n\t\t\tinstrument.connect(this.audioContext.destination)\r\n\t\t}\r\n\t}\r\n\tgetSettings = () => {\r\n\t\tlet storedSettings = localStorage.getItem(appName + \"_Main_Settings\")\r\n\t\ttry {\r\n\t\t\tstoredSettings = JSON.parse(storedSettings)\r\n\t\t} catch (e) {\r\n\t\t\tstoredSettings = null\r\n\t\t}\r\n\t\tif (storedSettings !== null) {\r\n\t\t\tif (storedSettings.settingVesion !== MainPageSettings.settingVesion) {\r\n\t\t\t\tthis.updateSettings(MainPageSettings)\r\n\t\t\t\treturn MainPageSettings\r\n\t\t\t}\r\n\t\t\treturn storedSettings\r\n\t\t}\r\n\t\treturn MainPageSettings\r\n\t}\r\n\tloadInstrument = async (name) => {\r\n\t\tthis.state.instrument?.delete?.()\r\n\t\tlet newInstrument = new Instrument(name)\r\n\t\tthis.setState({ isLoadingInstrument: true })\r\n\t\tawait newInstrument.load()\r\n\t\tnewInstrument.connect(this.audioContext.destination)\r\n\t\tthis.setState({\r\n\t\t\tinstrument: newInstrument,\r\n\t\t\tisLoadingInstrument: false\r\n\t\t}, () => this.toggleReverbNodes(this.state.settings.caveMode.value))\r\n\t}\r\n\tloadReverb() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tfetch(\"./assets/audio/reverb4.wav\")\r\n\t\t\t\t.then(r => r.arrayBuffer())\r\n\t\t\t\t.then(b => {\r\n\t\t\t\t\tthis.audioContext.decodeAudioData(b, (impulse_response) => {\r\n\t\t\t\t\t\tlet convolver = this.audioContext.createConvolver()\r\n\t\t\t\t\t\tlet gainNode = this.audioContext.createGain()\r\n\t\t\t\t\t\tgainNode.gain.value = 2.5\r\n\t\t\t\t\t\tconvolver.buffer = impulse_response\r\n\t\t\t\t\t\tconvolver.connect(gainNode)\r\n\t\t\t\t\t\tgainNode.connect(this.audioContext.destination)\r\n\t\t\t\t\t\tthis.reverbVolumeNode = gainNode\r\n\t\t\t\t\t\tthis.reverbNode = convolver\r\n\t\t\t\t\t\tresolve()\r\n\t\t\t\t\t})\r\n\t\t\t\t}).catch((e) => {\r\n\t\t\t\t\tconsole.log(\"Error with reverb\", e)\r\n\t\t\t\t})\r\n\t\t})\r\n\r\n\t}\r\n\tplaySound = (note) => {\r\n\t\tconst { state } = this\r\n\t\tconst { settings } = state\r\n\t\tif (note === undefined) return\r\n\t\tif (state.isRecording) this.handleRecording(note)\r\n\t\tthis.state.instrument.play(note.index, getPitchChanger(settings.pitch.value))\r\n\t}\r\n\tupdateSettings = (override) => {\r\n\t\tlet state\r\n\t\tif (override !== undefined) {\r\n\t\t\tstate = override\r\n\t\t} else {\r\n\t\t\tstate = this.state.settings\r\n\t\t}\r\n\t\tlocalStorage.setItem(appName + \"_Main_Settings\", JSON.stringify(state))\r\n\t}\r\n\thandleSettingChange = (setting) => {\r\n\t\tlet settings = this.state.settings\r\n\t\tlet data = setting.data\r\n\t\tsettings[setting.key].value = data.value\r\n\t\tif (setting.key === \"instrument\") {\r\n\t\t\tthis.loadInstrument(data.value)\r\n\t\t}\r\n\t\tif (setting.key === 'caveMode') {\r\n\t\t\tthis.toggleReverbNodes(data.value)\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tsettings: settings,\r\n\t\t}, this.updateSettings)\r\n\t}\r\n\tsyncSongs = async () => {\r\n\t\tlet songs = await this.dbCol.songs.find().toArray()\r\n\t\tthis.setState({\r\n\t\t\tsongs: songs\r\n\t\t})\r\n\t}\r\n\r\n\tsongExists = async (name) => {\r\n\t\treturn await this.dbCol.songs.findOne({ name: name }) !== undefined\r\n\t}\r\n\taddSong = async (song) => {\r\n\t\ttry {\r\n\t\t\tif (await this.songExists(song.name)) {\r\n\t\t\t\treturn new LoggerEvent(\"Warning\", \"A song with this name already exists! \\n\" + song.name).trigger()\r\n\t\t\t}\r\n\t\t\tawait this.dbCol.songs.insert(song)\r\n\t\t\tthis.syncSongs()\r\n\t\t\tnew LoggerEvent(\"Success\", `Song added to the ${song.data.isComposedVersion ? \"Composed\" : \"Recorded\"} tab!`, 4000).trigger()\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(e)\r\n\t\t\treturn new LoggerEvent(\"Error\", 'There was an error importing the song').trigger()\r\n\t\t}\r\n\r\n\t}\r\n\tcomponentDidCatch() {\r\n\t\tnew LoggerEvent(\"Warning\", \"There was an error with the song! Restoring default...\").trigger()\r\n\t\tsongStore.data = {\r\n\t\t\tsong: {}, eventType: 'stop', start: 0\r\n\t\t}\r\n\t}\r\n\tremoveSong = async (name) => {\r\n\t\tlet result = await asyncConfirm(`Are you sure you want to delete the song: \"${name}\" ?`)\r\n\t\tif (result) {\r\n\t\t\tthis.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n\t\t}\r\n\t}\r\n\thandleRecording = (note) => {\r\n\t\tif (this.state.isRecording) {\r\n\t\t\tthis.recording.addNote(note.index)\r\n\t\t}\r\n\t}\r\n\taskForSongName = () => {\r\n\t\treturn new Promise(async resolve => {\r\n\t\t\tlet promptString = \"Write song name, press cancel to ignore\"\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet songName = await asyncPrompt(promptString)\r\n\t\t\t\tif (songName === null) return resolve(null)\r\n\t\t\t\tif (songName !== \"\") {\r\n\t\t\t\t\tif (await this.songExists(songName)) {\r\n\t\t\t\t\t\tpromptString = \"This song already exists: \" + songName\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn resolve(songName)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpromptString = \"Write song name, press cancel to ignore\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n\ttoggleRecord = async (override) => {\r\n\t\tif (typeof override !== \"boolean\") override = undefined\r\n\t\tlet newState = override !== undefined ? override : !this.state.isRecording\r\n\t\tif (!newState && this.recording.notes.length > 0) { //if there was a song recording\r\n\t\t\tlet songName = await this.askForSongName()\r\n\t\t\tlet song = new Song(songName, this.recording.notes)\r\n\t\t\tsong.pitch = this.state.settings.pitch.value\r\n\t\t\tif (songName !== null) this.addSong(song)\r\n\t\t} else {\r\n\t\t\tthis.recording = new Recording()\r\n\t\t}\r\n\t\tthis.state.isRecording = newState\r\n\t\tthis.setState({\r\n\t\t\topen: this.state.isRecording\r\n\t\t})\r\n\t}\r\n\ttoggleRecordAudio = async (override) => {\r\n\t\tif (typeof override !== \"boolean\") override = undefined\r\n\t\tconst { instrument } = this.state\r\n\t\tconst { recorder } = this\r\n\t\tconst hasReverb = this.state.settings.caveMode.value\r\n\t\tconst newState = override !== undefined ? override : !this.state.isRecordingAudio\r\n\t\tif (newState) {\r\n\t\t\tif (hasReverb) {\r\n\t\t\t\tthis.reverbVolumeNode.connect(recorder.node)\r\n\t\t\t} else {\r\n\t\t\t\tinstrument.connect(recorder.node)\r\n\t\t\t}\r\n\t\t\trecorder.start()\r\n\t\t} else {\r\n\t\t\tlet recording = await recorder.stop()\r\n\t\t\tlet fileName = await asyncPrompt(\"Write the song name, press cancel to ignore\")\r\n\t\t\tif (fileName) recorder.download(recording.data, fileName + '.wav')\r\n\t\t\tthis.toggleReverbNodes(hasReverb)\r\n\t\t\tthis.reverbVolumeNode.disconnect()\r\n\t\t\tthis.reverbVolumeNode.connect(audioContext.destination)\r\n\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisRecordingAudio: newState\r\n\t\t})\r\n\t}\r\n\trender() {\r\n\t\tconst { state } = this\r\n\t\tlet keyboardFunctions = {\r\n\t\t\tchangeSliderState: this.changeSliderState,\r\n\t\t\tplaySound: this.playSound,\r\n\t\t\tsetHasSong: this.setHasSong\r\n\t\t}\r\n\t\tlet keyboardData = {\r\n\t\t\tisLoading: state.isLoadingInstrument,\r\n\t\t\tkeyboard: state.instrument,\r\n\t\t\tpitch: state.settings.pitch.value,\r\n\t\t\tkeyboardSize: state.settings.keyboardSize.value,\r\n\t\t\tnoteNameType: state.settings.noteNameType.value,\r\n\t\t\thasSong: state.thereIsSong,\r\n\t\t\thasAnimation: state.settings.noteAnimation.value,\r\n\t\t\tapproachRate: state.settings.approachSpeed.value\r\n\t\t}\r\n\t\tlet menuFunctions = {\r\n\t\t\taddSong: this.addSong,\r\n\t\t\tremoveSong: this.removeSong,\r\n\t\t\tchangePage: this.props.changePage,\r\n\t\t\thandleSettingChange: this.handleSettingChange,\r\n\r\n\t\t}\r\n\t\tlet menuData = {\r\n\t\t\tsongs: state.songs,\r\n\t\t\tsettings: state.settings\r\n\t\t}\r\n\r\n\t\treturn <div className='app bg-image' style={{ backgroundImage: `url(${state.settings.backgroundImage.value})` }}>\r\n\t\t\t{songStore.data.eventType !== 'approaching' &&\r\n\t\t\t\t<div className='record-button'>\r\n\t\t\t\t\t<AppButton\r\n\t\t\t\t\t\tactive={state.isRecordingAudio}\r\n\t\t\t\t\t\tclick={this.toggleRecordAudio}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{state.isRecordingAudio ? \"Finish recording\" : \"Record audio\"}\r\n\t\t\t\t\t</AppButton>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t<div className=\"rotate-screen\">\r\n\t\t\t\t<img src={rotateImg} alt=\"icon for the rotating screen\">\r\n\t\t\t\t</img>\r\n\t\t\t\tFor a better experience, add the website to the home screen, and rotate your device\r\n\t\t\t</div>\r\n\t\t\t{state.isDragging && <div className='drag-n-drop'>\r\n\t\t\t\tDrop file here\r\n\t\t\t</div>}\r\n\t\t\t<Menu functions={menuFunctions} data={menuData} />\r\n\t\t\t<div className=\"right-panel\">\r\n\t\t\t\t<div className=\"upper-right\">\r\n\t\t\t\t\t{!this.state.thereIsSong\r\n\t\t\t\t\t\t&&\r\n\t\t\t\t\t\t<AppButton\r\n\t\t\t\t\t\t\tactive={state.isRecording}\r\n\t\t\t\t\t\t\tclick={this.toggleRecord}\r\n\t\t\t\t\t\t\tstyle={{marginTop: \"-0.5rem\"}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{state.isRecording ? \"Stop\" : \"Record\"}\r\n\t\t\t\t\t\t</AppButton>\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"keyboard-wrapper\">\r\n\t\t\t\t\t<Keyboard\r\n\t\t\t\t\t\tkey={state.instrument.instrumentName}\r\n\t\t\t\t\t\tdata={keyboardData}\r\n\t\t\t\t\t\tfunctions={keyboardFunctions}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t}\r\n}\r\n\r\nfunction checkIfTWA() {\r\n\tlet isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n\treturn isTwa\r\n}\r\n\r\nfunction setIfInTWA() {\r\n\tif (checkIfTWA()) return console.log('inTWA')\r\n\tlet isTwa = document.referrer.includes('android-app://')\r\n\tsessionStorage.setItem('isTwa', isTwa)\r\n}\r\nsetIfInTWA()\r\nfunction AppButton(props) {\r\n\tlet className = \"genshin-button \" + (props.active ? \"selected\" : \"\")\r\n\treturn <button className={className} onClick={props.click} style={{ ...(props.style || {}) }}>\r\n\t\t{props.children}\r\n\t</button>\r\n}\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/addCell.73b6c8e9.svg\";","export default __webpack_public_path__ + \"static/media/removeCell.e266ba1a.svg\";","import { useState, useEffect } from 'react';\r\nfunction useDebounce(value, delay) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    [value, delay]\r\n  );\r\n  return debouncedValue;\r\n}\r\nexport default useDebounce;","import React, { Component, useEffect, useState } from 'react'\r\nimport { FilePicker } from \"react-file-picker\"\r\nimport { Midi } from '@tonejs/midi'\r\nimport { LoggerEvent, pitchArr, ColumnNote, Column, numberToLayer, ComposedSong, groupByIndex, mergeLayers } from '../SongUtils'\r\nimport { appName } from '../../appConfig'\r\nimport { FaInfoCircle } from 'react-icons/fa'\r\nimport useDebounce from './useDebounce'\r\nclass MidiImport extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            fileName: '',\r\n            midi: null,\r\n            bpm: 220,\r\n            offset: 0,\r\n            pitch: 'C',\r\n            accidentals: 0,\r\n            outOfRange: 0,\r\n            totalNotes: 0,\r\n            includeAccidentals: true\r\n        }\r\n    }\r\n    handleFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', (event) => {\r\n            let midi\r\n            try {\r\n                midi = new Midi(event.target.result)\r\n            } catch (e) {\r\n                console.error(e)\r\n            }\r\n            if (!midi) return new LoggerEvent('Error', 'There was an error importing this file', 2000).trigger()\r\n            let bpm = midi.header.tempos[0]?.bpm\r\n            let key = midi.header.keySignatures[0]?.key\r\n            midi.tracks.forEach((track, i) => {\r\n                track.selected = true\r\n                track.layer = 0\r\n                track.name = track.name || `Track n.${i + 1}`\r\n                track.numberOfAccidentals = 0\r\n                track.numberOfOutOfRange = 0\r\n            })\r\n            this.setState({\r\n                midi: midi,\r\n                fileName: file.name,\r\n                bpm: Math.floor(bpm * 4) || 220,\r\n                offset: 0,\r\n                pitch: pitchArr.includes(key) ? key : 'C',\r\n            }, () => { if (this.state.midi !== null) this.convertMidi()})\r\n        })\r\n        reader.readAsArrayBuffer(file)\r\n    }\r\n\r\n    convertMidi = () => {\r\n        const { midi, bpm, offset, includeAccidentals,pitch } = this.state\r\n        let tracks = midi.tracks.filter(track => track.selected)\r\n        let notes = []\r\n        let numberOfAccidentals = 0\r\n        let outOfRange = 0\r\n        let totalNotes = 0\r\n        tracks.forEach(track => {\r\n            track.numberOfAccidentals = 0\r\n            track.numberOfOutOfRange = 0\r\n            track.notes.forEach(midiNote => {\r\n                totalNotes++\r\n                let convertedNote = convertMidiNote(midiNote.midi - offset)\r\n                let note = {\r\n                    time: Math.floor(midiNote.time * 1000),\r\n                    note: convertedNote.note,\r\n                    layer: track.layer\r\n                }\r\n                if(convertedNote.isAccidental){\r\n                    numberOfAccidentals ++\r\n                    track.numberOfAccidentals ++\r\n                }\r\n                if (note.note !== null) {\r\n                    if (includeAccidentals || !convertedNote.isAccidental) {\r\n                        notes.push(note)\r\n                    }\r\n                } else {\r\n                    outOfRange++\r\n                    track.numberOfOutOfRange ++\r\n                }\r\n            })\r\n        })\r\n        notes = notes.sort((a, b) => a.time - b.time)\r\n        let bpmToMs = Math.floor(60000 / bpm)\r\n        let groupedNotes = []\r\n        while (notes.length > 0) {\r\n            let row = [notes.shift()]\r\n            let amount = 0\r\n            for (let i = 0; i < notes.length; i++) {\r\n                if (row[0].time > notes[i].time - bpmToMs / 9) amount++\r\n            }\r\n            groupedNotes.push([...row, ...notes.splice(0, amount)])\r\n        }\r\n        let columns = []\r\n        let previousTime = 0\r\n        groupedNotes.forEach(notes => {\r\n            let note = notes[0]\r\n            if (!note) return\r\n            let elapsedTime = note.time - previousTime\r\n            previousTime = note.time\r\n            let emptyColumns = Math.floor((elapsedTime - bpmToMs) / bpmToMs)\r\n            if (emptyColumns > -1) new Array(emptyColumns).fill(0).forEach(() => columns.push(new Column())) // adds empty columns\r\n            let noteColumn = new Column()\r\n            noteColumn.notes = notes.map(note => {\r\n                return new ColumnNote(note.note, numberToLayer(note.layer))\r\n            })\r\n            columns.push(noteColumn)\r\n        })\r\n        columns.forEach(column => { //merges notes of different layer\r\n            let groupedNotes = groupByIndex(column)\r\n            column.notes = groupedNotes.map(group => {\r\n                group[0].layer = mergeLayers(group)\r\n                return group[0]\r\n            })\r\n        })\r\n        let song = new ComposedSong(\"Untitled\")\r\n        song.columns = columns\r\n        song.bpm = bpm\r\n        song.instruments = this.props.data.instruments\r\n        song.pitch = pitch\r\n        let lastColumn = this.props.data.selectedColumn\r\n        song.selected = lastColumn < song.columns.length ? lastColumn : 0\r\n        if (song.columns.length === 0) {\r\n            return new LoggerEvent(\"Error\", \"There are no notes\", 2000).trigger()\r\n        }\r\n        this.props.functions.loadSong(song)\r\n        this.setState({\r\n            accidentals: numberOfAccidentals,\r\n            totalNotes: totalNotes,\r\n            outOfRange: outOfRange\r\n        })\r\n    }\r\n\r\n    editTrack = (command, data) => {\r\n        let tracks = this.state.midi.tracks\r\n        if (command === 'index') {\r\n\r\n            tracks[data.index].selected = !tracks[data.index].selected\r\n        }\r\n        if (command === 'layer') {\r\n            tracks[data.index].layer = data.layer\r\n        }\r\n\r\n        this.setState({\r\n            midi: this.state.midi\r\n        }, () => { if (this.state.midi !== null) this.convertMidi() })\r\n    }\r\n    changeOffset = (value) => {\r\n        value = parseInt(value)\r\n        if (!Number.isInteger(value)) value = 0\r\n        if(this.state.offset === value) return\r\n        this.setState({\r\n            offset: value\r\n        }, () => { if (this.state.midi !== null) this.convertMidi() })\r\n    }\r\n    changePitch = (value) => {\r\n        this.props.functions.changePitch(value)\r\n        this.setState({\r\n            pitch: value\r\n        })\r\n    }\r\n    toggleAccidentals = () => {\r\n        this.setState({\r\n            includeAccidentals: !this.state.includeAccidentals\r\n        }, () => { if (this.state.midi !== null) this.convertMidi() })\r\n    }\r\n    changeBpm = (value) => {\r\n        value = parseInt(value)\r\n        if (!Number.isInteger(value)) value = 0\r\n        if(this.state.bpm === value) return\r\n        this.setState({\r\n            bpm: value\r\n        }, () => { if (this.state.midi !== null) this.convertMidi() })\r\n    }\r\n    render() {\r\n        const { handleFile, editTrack, state, changeBpm, changeOffset, changePitch } = this\r\n        const { fileName, midi, bpm, offset, pitch, accidentals, outOfRange, totalNotes, includeAccidentals } = state\r\n        const { functions } = this.props\r\n        const { changeMidiVisibility } = functions\r\n        return <div className='floating-midi'>\r\n            <div\r\n                className='midi-row separator-border'\r\n                style={{ width: '100%' }}\r\n            >\r\n                <FilePicker onChange={handleFile}>\r\n                    <button className=\"midi-btn\">\r\n                        Click to load midi file\r\n                    </button>\r\n                </FilePicker>\r\n                <div style={{ margin: '0 0.5rem', maxWidth: '8rem', textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n                    {fileName}\r\n                </div>\r\n                <button\r\n                    className='midi-btn'\r\n                    style={{ marginLeft: 'auto' }}\r\n                    onClick={() => changeMidiVisibility(false)}\r\n                >\r\n                    Close\r\n                </button>\r\n            </div>\r\n            <table className='separator-border' style={{ width: \"100%\" }}>\r\n                <tr>\r\n                    <td>\r\n                        <div style={{ marginRight: '0.5rem' }}>Bpm:</div>\r\n                    </td>\r\n                    <td style={{ display: 'flex', justifyContent: 'flex-end', alignItems:\"center\" }}>\r\n                    <NumberInput\r\n                            value={bpm}\r\n                            changeValue={changeBpm}\r\n                            delay={600}\r\n                            step={5}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <div style={{ marginRight: '0.5rem' }}>Scale notes by: </div>\r\n                    </td>\r\n                    <td>\r\n                        <NumberInput\r\n                            value={offset}\r\n                            changeValue={changeOffset}\r\n                            delay={600}\r\n                            step={1}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <div style={{ marginRight: '0.5rem' }}>Pitch:</div>\r\n                    </td>\r\n                    <td style={{ display: 'flex', justifyContent: 'flex-end', alignItems:\"center\" }}>\r\n                        <select\r\n                            className='midi-select'\r\n                            value={pitch}\r\n                            onChange={(event) => changePitch(event.target.value)}\r\n                            style={{ backgroundColor: '#576377', width: '5rem' }}\r\n                        >\r\n                            <option value=\"C\">C</option>\r\n                            <option value=\"Db\">Db</option>\r\n                            <option value=\"D\">D</option>\r\n                            <option value=\"Eb\">Eb</option>\r\n                            <option value=\"E\">E</option>\r\n                            <option value=\"F\">F</option>\r\n                            <option value=\"Gb\">Gb</option>\r\n                            <option value=\"G\">G</option>\r\n                            <option value=\"Ab\">Ab</option>\r\n                            <option value=\"A\">A</option>\r\n                            <option value=\"Bb\">Bb</option>\r\n                            <option value=\"B\">B</option>\r\n                        </select>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <div style={{ marginRight: '0.5rem' }}>Include accidentals:</div>\r\n                    </td>\r\n                    <td style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                        <input type='checkbox'\r\n                            checked={includeAccidentals}\r\n                            onChange={this.toggleAccidentals}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            {midi !== null && <div className='midi-column separator-border' style={{ width: '100%' }}>\r\n                <div className='midi-column' style={{ width: '100%' }}>\r\n                    <div>Select midi tracks</div>\r\n                    {midi?.tracks.map((track, i) =>\r\n                        <Track\r\n                            data={track}\r\n                            key={i}\r\n                            index={i}\r\n                            editTrack={editTrack}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            }\r\n            {midi !== null && <table>\r\n                <tr>\r\n                    <td>Total notes: </td>\r\n                    <td />\r\n                    <td>{totalNotes}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Accidentals: </td>\r\n                    <td />\r\n                    <td>{accidentals}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Out of range: </td>\r\n                    <td />\r\n                    <td>{outOfRange}</td>\r\n                </tr>\r\n            </table>\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction Track(props) {\r\n    const { data, index, editTrack } = props\r\n    const [dataShown, setDataShown] = useState(false)\r\n    return <div className='midi-track-column'>\r\n        <div className='midi-track-wrapper'>\r\n            <div className='midi-track-center'>\r\n                <input type='checkbox' onChange={() => editTrack(\"index\", { index: index })} checked={data.selected} />\r\n                {data.name} ({data.notes.length})\r\n            </div>\r\n            <div className='midi-track-center'>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    {data.instrument.family}\r\n                </div>\r\n                <select\r\n                    onChange={(event) => editTrack('layer', { index: index, layer: Number(event.target.value) })}\r\n                    value={data.layer}\r\n                    className='midi-select'\r\n                >\r\n                    <option value='0'>Layer 1</option>\r\n                    <option value='1'>Layer 2</option>\r\n                    <option value='2'>Layer 3</option>\r\n                </select>\r\n\r\n                <FaInfoCircle\r\n                    size={22}\r\n                    color={dataShown ? \"rgb(207, 122, 130)\" : \"white\"}\r\n                    onClick={() => setDataShown(!dataShown)}\r\n                    cursor='pointer'\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n        <div className='midi-track-data' style={{ display: dataShown ? \"flex\" : \"none\" }}>\r\n            <div className='midi-track-data-row'>\r\n                <div>Instrument:</div>\r\n                <div>{data.instrument.name}</div>\r\n            </div>\r\n            <div className='midi-track-data-row'>\r\n                <div>Number of notes:</div>\r\n                <div>{data.notes.length}</div>\r\n            </div>\r\n            <div className='midi-track-data-row'>\r\n                <div>Accidentals:</div>\r\n                <div>{data.numberOfAccidentals}</div>\r\n            </div>\r\n            <div className='midi-track-data-row'>\r\n                <div>Out of range:</div>\r\n                <div>{data.numberOfOutOfRange}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MidiImport\r\n\r\nfunction NumberInput(props) {\r\n    const { changeValue, value, delay = 500, step = 1 } = props\r\n    const [elementValue, setElementValue] = useState(value)\r\n    const debounced = useDebounce(elementValue, delay) \r\n    useEffect(() => {\r\n        changeValue(debounced)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [debounced]);\r\n    useEffect(() => {\r\n        setElementValue(value)\r\n    }, [value])\r\n    return <div style={{ display: 'flex', justifyContent: 'flex-end' }} >\r\n        <button\r\n            onClick={() => setElementValue(elementValue - step)}\r\n            className='midi-btn-small'\r\n        >-</button>\r\n        <input\r\n            type=\"text\"\r\n            value={elementValue}\r\n            onChange={(e) => setElementValue(e.target.value)}\r\n            className='midi-input'\r\n            style={{ margin: '0 0.3rem' }}\r\n        />\r\n        <button\r\n            onClick={() => setElementValue(elementValue + step)}\r\n            className='midi-btn-small'\r\n        >+</button>\r\n    </div>\r\n}\r\n\r\nfunction convertMidiNote(midiNote) {\r\n    let note = null\r\n    let isAccidental = false\r\n    if (appName === 'Sky') {\r\n        switch (midiNote) {\r\n            case 60: note = 0; break;\r\n            case 61: note = 0; isAccidental = true; break;\r\n            case 62: note = 1; break;\r\n            case 63: note = 1; isAccidental = true; break;\r\n            case 64: note = 2; break;\r\n            case 65: note = 3; break;\r\n            case 66: note = 3; isAccidental = true; break;\r\n            case 67: note = 4; break;\r\n            case 68: note = 4; isAccidental = true; break;\r\n            case 69: note = 5; break;\r\n            case 70: note = 5; isAccidental = true; break;\r\n            case 71: note = 6; break;\r\n            case 72: note = 7; break;\r\n            case 73: note = 7; isAccidental = true; break;\r\n            case 74: note = 8; break;\r\n            case 75: note = 8; isAccidental = true; break;\r\n            case 76: note = 9; break;\r\n            case 77: note = 10; break;\r\n            case 78: note = 10; isAccidental = true; break;\r\n            case 79: note = 11; break;\r\n            case 80: note = 11; isAccidental = true; break;\r\n            case 81: note = 12; break;\r\n            case 82: note = 12; isAccidental = true; break;\r\n            case 83: note = 13; break;\r\n            case 84: note = 14; break;\r\n            default: note = null;\r\n        }\r\n    }\r\n    if (appName === 'Genshin') {\r\n        switch (midiNote) {\r\n            case 48: note = 14; break;\r\n            case 49: note = 14; isAccidental = true; break;\r\n            case 50: note = 15; break;\r\n            case 51: note = 15; isAccidental = true; break;\r\n            case 52: note = 16; break;\r\n            case 53: note = 17; break;\r\n            case 54: note = 17; isAccidental = true; break;\r\n            case 55: note = 18; break;\r\n            case 56: note = 18; isAccidental = true; break;\r\n            case 57: note = 19; break;\r\n            case 58: note = 19; isAccidental = true; break;\r\n            case 59: note = 20; break;\r\n            case 60: note = 7; break;\r\n            case 61: note = 7; isAccidental = true; break;\r\n            case 62: note = 8; break;\r\n            case 63: note = 8; isAccidental = true; break;\r\n            case 64: note = 9; break;\r\n            case 65: note = 10; break;\r\n            case 66: note = 10; isAccidental = true; break;\r\n            case 67: note = 11; break;\r\n            case 68: note = 11; isAccidental = true; break;\r\n            case 69: note = 12; break;\r\n            case 70: note = 12; isAccidental = true; break;\r\n            case 71: note = 13; break;\r\n            case 72: note = 0; break;\r\n            case 73: note = 0; isAccidental = true; break;\r\n            case 74: note = 1; break;\r\n            case 75: note = 1; isAccidental = true; break;\r\n            case 76: note = 2; break;\r\n            case 77: note = 3; break;\r\n            case 78: note = 3; isAccidental = true; break;\r\n            case 79: note = 4; break;\r\n            case 80: note = 4; isAccidental = true; break;\r\n            case 81: note = 5; break;\r\n            case 82: note = 5; isAccidental = true; break;\r\n            case 83: note = 6; break;\r\n            default: note = null;\r\n        }\r\n    }\r\n    return {\r\n        note: note,\r\n        isAccidental: isAccidental\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nclass ComposerTools extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let className = data.visible ? \"floating-tools tools-visible\" : \"floating-tools\"\r\n        return <div className={className}>\r\n            <div className=\"tools-row\">\r\n                <div>\r\n                    Scroll to the left / right to select the columns\r\n                </div>\r\n                <button onClick={functions.toggleTools}>\r\n                    Close\r\n                </button>\r\n            </div>\r\n            <div className=\"tools-buttons-wrapper\">\r\n                <div className='tools-half'>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.copyColumns('all')\r\n                        }}\r\n                        className={data.copiedColumns.length !== 0 ? \"tools-button-highlighted\" : \"\"}\r\n                    >\r\n                        Copy\r\n                    </button>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.copyColumns(data.layer)\r\n                        }}\r\n                        className={data.copiedColumns.length !== 0 ? \"tools-button-highlighted\" : \"\"}\r\n                    >\r\n                        Copy layer {data.layer}\r\n                    </button>\r\n                </div>\r\n                <div className='tools-half'>\r\n                    <button\r\n                        disabled={data.copiedColumns.length === 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.pasteColumns(false)\r\n                        }}\r\n                    >\r\n                        Paste\r\n                </button>\r\n                    <button\r\n                        disabled={data.copiedColumns.length === 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.pasteColumns(true)\r\n                        }}\r\n                    >\r\n                        Insert\r\n                </button>\r\n                </div>\r\n                <div className='tools-half'>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.eraseColumns('all')\r\n                        }}\r\n                    >\r\n                        Erase\r\n                    </button>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.eraseColumns(data.layer)\r\n                        }}\r\n                    >\r\n                        Erase layer {data.layer}\r\n                    </button>\r\n                </div>\r\n\r\n                <button\r\n                    disabled={data.copiedColumns.length !== 0}\r\n                    onClick={functions.deleteColumns}\r\n                >\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerTools","import React, { Component } from 'react'\r\nimport { cssClasses, appName , instrumentsData} from \"../../appConfig\" \r\nclass ComposerNote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    shouldComponentUpdate(next, prev) {\r\n        let canRender = false\r\n        canRender = canRender ||this.props.layers !== next.layers || this.props.noteText !== next.noteText\r\n        canRender = canRender || this.props.instrument !== next.instrument\r\n        return canRender\r\n    }\r\n    render() {\r\n        const {props} = this\r\n        const { data, layers,instrument } = props\r\n        let className = cssClasses.noteComposer\r\n        if (layers[0] === \"1\") className += \" layer-1\"\r\n        if (layers[1] === \"1\") className += \" layer-2\"\r\n        if (layers[2] === \"1\") className += \" layer-3\"\r\n        let layer3Class = \"Sky\" ? \"layer-3-ball-bigger\" : \"layer-3-ball\"\r\n        let effects = instrumentsData[instrument]?.effects || {}\r\n        return <button onPointerDown={() => this.props.clickAction(data)} className=\"button-hitbox\">\r\n            <div className={className} >\r\n                <img\r\n                    draggable=\"false\"\r\n                    alt={data.noteNames.mobile}\r\n                    src={props.noteImage}\r\n                    style={effects}\r\n                >\r\n                  \r\n                </img>\r\n                <div className={layer3Class}>\r\n                </div>\r\n                <div className={appName === \"Sky\" ? \"note-name-sky\" : \"note-name\"}>\r\n                    {props.noteText}\r\n                </div>\r\n            </div>\r\n        </button>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerNote","import React, { Component } from 'react'\r\n\r\nclass MultiSwitch extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let props = this.props\r\n        return <>\r\n            {props.options.map(e => {\r\n                return <button\r\n                    style={{ backgroundColor: e === props.selected ? props.selectedColor : \"\" }}\r\n                    className={props.buttonsClass}\r\n                    onClick={() => props.onSelect(e)}\r\n                    key={e}\r\n                >\r\n                    {e}\r\n                </button>\r\n            })}\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MultiSwitch\r\n\r\n","import React, { Component } from 'react'\r\nimport ComposerNote from \"./ComposerNote\"\r\nimport MultiSwitch from \"./MultiSwitch\"\r\nimport { appName, keyNames, pitchArr , layoutImages,layoutData } from \"../../appConfig\"\r\nclass ComposerKeyboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let notesIndexes = data.currentColumn.notes.map((e) => e.index)\r\n        let hiddenSideMenu = data.isPlaying ? \" hidden\" : \"\"\r\n        let keyboardClass = \"keyboard\"\r\n        if (data.keyboard.layout.length === 15) keyboardClass += \" keyboard-5\"\r\n        if (data.keyboard.layout.length === 8) keyboardClass += \" keyboard-4\"\r\n        return <div>\r\n            <div className={keyboardClass}>\r\n            {data.keyboard.layout.length === 0 ? <div className=\"loading\">Loading...</div> : null}\r\n                {data.keyboard.layout.map((note, i) => {\r\n                    let index = notesIndexes.indexOf(i)\r\n                    let noteText = \"\"\r\n                    let noteImage = \"\"\r\n                    try{    \r\n                        noteImage = layoutImages[data.keyboard.layout.length][note.index]  \r\n                        if(data.noteNameType === \"Note name\") noteText = keyNames[appName][pitchArr.indexOf(data.pitch)][note.index]\r\n                        if(data.noteNameType === \"Keyboard layout\") noteText = layoutData[data.keyboard.layout.length].keyboardLayout[note.index]\r\n                        if(data.noteNameType === \"Do Re Mi\") noteText = layoutData[data.keyboard.layout.length].mobileLayout[note.index]\r\n                    }catch(e){}\r\n                    return <ComposerNote\r\n                        key={note.index}\r\n                        layers={index >= 0 ? data.currentColumn.notes[index].layer : \"000\"}\r\n                        data={note}\r\n                        noteText={noteText}\r\n                        instrument={data.keyboard.instrumentName}\r\n                        noteImage={`./assets/icons/keys/${noteImage}.svg`}\r\n                        clickAction={functions.handleClick}\r\n                    />\r\n                })}\r\n            </div>\r\n            <div className={\"bottom-right-wrapper\" + hiddenSideMenu}>\r\n                <div className={\"layer-buttons-wrapper\"}>\r\n                    <div className=\"bottom-right-text\">\r\n                        Layer\r\n                    </div>\r\n                    <MultiSwitch\r\n                        buttonsClass={\"layer-button\"}\r\n                        selectedColor={\"#63aea7\"}\r\n                        options={[1, 2, 3]}\r\n                        onSelect={functions.changeLayer}\r\n                        selected={data.layer}\r\n                    />\r\n                </div>\r\n                <div className=\"tempo-changers-wrapper\">\r\n                    <div className=\"bottom-right-text\">\r\n                        Tempo\r\n                    </div>\r\n                    {data.TempoChangers.map((e) => {\r\n                        return <button\r\n                            key={e.id}\r\n                            onClick={() => functions.handleTempoChanger(e)}\r\n                            style={{ backgroundColor: \"#\" + e.color.toString(16) }}\r\n                        >\r\n                            {e.text}\r\n                        </button>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerKeyboard","import { TempoChangers } from \"../SongUtils\"\r\nimport * as PIXI from \"pixi.js\"\r\nimport {notesPerColumn } from \"../../appConfig\"\r\nlet noteData = {\r\n    background: \"#d3bd8e\",\r\n    border: \"#de4545\",\r\n    center: \"#de4545\"\r\n}\r\n\r\nlet horizontalLineBreak = notesPerColumn / 3\r\nlet standards = [\r\n    {\r\n        color: 0x515c6f //lighter\r\n    },\r\n    {\r\n        color: 0x485363 //darker\r\n    },\r\n    {\r\n        color: 0x1a968b //selected\r\n    },\r\n    {\r\n        color: 0xd6722f\r\n    }\r\n]\r\nlet notes = [\"000\", \"001\", \"010\", \"011\", \"100\", \"101\", \"110\", \"111\"]\r\nlet breakpoints = [\r\n    {\r\n        type: \"short\",\r\n        color: \"#282875\"\r\n    },\r\n    {\r\n        type: \"long\",\r\n        color: \"#282875\"\r\n    }\r\n]\r\nclass ComposerCache {\r\n    constructor(width, height, margin = 4, timelineHeight = 30) {\r\n        this.width = width\r\n        this.height = height\r\n        this.cache = {\r\n            columns: [],\r\n            notes: {},\r\n            standard: [],\r\n            columnsLarger: [],\r\n            standardLarger: [],\r\n            breakpoints: []\r\n        }\r\n        this.notesFigures = []\r\n        this.timelineHeight = timelineHeight\r\n        this.margin = margin\r\n        this.noteWidth = this.width\r\n        this.noteHeight = this.height / notesPerColumn\r\n        this.app = new PIXI.Application({\r\n            width: width,\r\n            height: height,\r\n        })\r\n        this.generate()\r\n    }\r\n    generate = () => {\r\n\r\n        TempoChangers.forEach(tempoChanger => {\r\n            let canvas = drawColumn(tempoChanger, this, 1)\r\n            this.cache.columns.push(canvas.toDataURL())\r\n        })\r\n        standards.forEach(standardColumn => {\r\n            let canvas = drawColumn(standardColumn, this, 1)\r\n            this.cache.standard.push(canvas.toDataURL())\r\n        })\r\n        standards.forEach(standardColumn => {\r\n            let canvas = drawColumn(standardColumn, this, 3)\r\n            this.cache.standardLarger.push(canvas.toDataURL())\r\n        })\r\n        notes.forEach(note => {\r\n            let roundNess = this.noteWidth > 20 ? 4 : 2\r\n            let canvas = document.createElement(\"canvas\")\r\n            canvas.height = this.noteHeight\r\n            canvas.width = this.noteWidth\r\n            let ctx = canvas.getContext(\"2d\")\r\n            if (note[0] === \"1\") {\r\n                ctx.fillStyle = noteData.background\r\n                roundRect(\r\n                    ctx,\r\n                    this.margin / 2,\r\n                    this.margin / 2,\r\n                    this.noteWidth - this.margin - 1,\r\n                    this.noteHeight - this.margin - 1,\r\n                    roundNess,\r\n                    true,\r\n                    false\r\n                )\r\n            }\r\n            if (note[1] === \"1\") {\r\n                ctx.strokeStyle = noteData.border\r\n                ctx.lineWidth = 2\r\n                roundRect(\r\n                    ctx,\r\n                    this.margin / 2,\r\n                    this.margin / 2,\r\n                    this.noteWidth - this.margin - 1,\r\n                    this.noteHeight - this.margin - 1,\r\n                    roundNess,\r\n                    false,\r\n                    true\r\n                )\r\n            }\r\n            if (note[2] === \"1\") {\r\n                ctx.beginPath()\r\n                ctx.fillStyle = noteData.center\r\n                let ballHeight = this.noteHeight / 4\r\n                ctx.arc(this.noteWidth / 2 - 0.5, this.noteHeight / 2 - 0.5, ballHeight, 0, 2 * Math.PI);\r\n                ctx.fill()\r\n            }\r\n            this.cache.notes[note] = canvas.toDataURL()\r\n        })\r\n        TempoChangers.forEach(tempoChanger => {\r\n            let canvas = drawColumn(tempoChanger, this, 2)\r\n            this.cache.columnsLarger.push(canvas.toDataURL())\r\n        })\r\n        breakpoints.forEach(breakpoint => {\r\n            let canvas = document.createElement(\"canvas\")\r\n            if (breakpoint.type === \"short\") {\r\n                let size = this.timelineHeight / 6\r\n                canvas.height = this.timelineHeight\r\n                canvas.width = size * 2\r\n                let ctx = canvas.getContext(\"2d\")\r\n                ctx.fillStyle = breakpoint.color\r\n                ctx.arc(size, this.timelineHeight / 2, size, 0, 2 * Math.PI);\r\n                ctx.fill()\r\n                this.cache.breakpoints.push(canvas.toDataURL())\r\n            } else {\r\n                canvas.height = this.height\r\n                canvas.width = this.width\r\n                let ctx = canvas.getContext(\"2d\")\r\n                ctx.fillStyle = breakpoint.color\r\n                /*\r\n               ctx.strokeStyle = breakpoint.color\r\n               ctx.lineWidth = 3\r\n                ctx.strokeRect(1,1,this.width - 3,this.height - 2)\r\n                */\r\n                ctx.beginPath();\r\n                ctx.moveTo(0, this.height)\r\n                ctx.lineTo(this.noteWidth / 2, this.height)\r\n                ctx.lineTo(0, this.height - this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.width, this.height)\r\n                ctx.lineTo(this.noteWidth / 2, this.height)\r\n                ctx.lineTo(this.width, this.height - this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(0, 0)\r\n                ctx.lineTo(this.noteWidth / 2, 0)\r\n                ctx.lineTo(0, this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.width, 0)\r\n                ctx.lineTo(this.noteWidth / 2, 0)\r\n                ctx.lineTo(this.width, this.noteHeight)\r\n                ctx.fill();\r\n\r\n                this.cache.breakpoints.push(canvas.toDataURL())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction drawColumn(tempoChanger, self, borderWidth) {\r\n    let canvas = document.createElement(\"canvas\")\r\n    canvas.height = self.height\r\n    canvas.width = self.width\r\n    let ctx = canvas.getContext(\"2d\")\r\n    ctx.fillStyle = \"#\" + tempoChanger.color.toString(16)\r\n    ctx.fillRect(0, 0, self.width, self.height)\r\n    ctx.strokeStyle = borderWidth === 2 ? \"black\" : \"#333333\"\r\n    ctx.lineWidth = borderWidth\r\n    ctx.beginPath()\r\n    ctx.moveTo(self.width, 0)\r\n    ctx.lineTo(self.width, self.height)\r\n    ctx.stroke()\r\n    ctx.strokeStyle = \"#333333\"\r\n    for (let i = 1; i < 3; i++) {\r\n        ctx.lineWidth = 1\r\n        let y = self.noteHeight * horizontalLineBreak * i\r\n        ctx.moveTo(0, y)\r\n        ctx.lineTo(self.width, y)\r\n    }\r\n    ctx.stroke()\r\n    return canvas\r\n}\r\n\r\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\r\n    if (typeof stroke === 'undefined') {\r\n        stroke = true;\r\n    }\r\n    if (typeof radius === 'undefined') {\r\n        radius = 5;\r\n    }\r\n    if (typeof radius === 'number') {\r\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\r\n    } else {\r\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\r\n        for (var side in defaultRadius) {\r\n            radius[side] = radius[side] || defaultRadius[side];\r\n        }\r\n    }\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + radius.tl, y);\r\n    ctx.lineTo(x + width - radius.tr, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n    ctx.lineTo(x + width, y + height - radius.br);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\r\n    ctx.lineTo(x + radius.bl, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n    ctx.lineTo(x, y + radius.tl);\r\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n    ctx.closePath();\r\n    if (fill) {\r\n        ctx.fill();\r\n    }\r\n    if (stroke) {\r\n        ctx.stroke();\r\n    }\r\n\r\n}\r\nexport {\r\n    ComposerCache\r\n}","import React, { Component } from 'react'\r\nimport { Stage, Container, Graphics, Sprite } from '@inlet/react-pixi';\r\nimport { ComposerCache } from \"./ComposerCache\"\r\nimport { faStepBackward, faStepForward, faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"./Composer.css\"\r\nimport isMobile from \"is-mobile\"\r\nimport { composerNotePositions, notesPerColumn, appName } from \"../../appConfig\"\r\nlet NumOfColumnsPerCanvas = 35\r\n\r\nclass ComposerCanvas extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let sizes = document.body.getBoundingClientRect()\r\n        this.sizes = sizes\r\n        NumOfColumnsPerCanvas = Number(this.props.data.settings.columnsPerCanvas.value)\r\n        let width = nearestEven(sizes.width * 0.82)\r\n        let height = nearestEven(sizes.height * 0.45)\r\n\r\n        if (window.screen.width < sizes.height) {\r\n            width = nearestEven(sizes.height * 0.82)\r\n            height = nearestEven(sizes.width * 0.45)\r\n        }\r\n        if(appName === \"Sky\") height = nearestEven(height * 0.95)\r\n        this.state = {\r\n            width: width,\r\n            height: height,\r\n            column: {\r\n                width: calcMinColumnWidth(nearestEven(width)),\r\n                height: height\r\n            },\r\n            timelineHeight: isMobile() ? 25 : 30,\r\n            currentBreakpoint: -1\r\n        }\r\n        this.canvasRef = React.createRef()\r\n        let margin = isMobile() ? 1 : 4\r\n        this.cache = new ComposerCache(this.state.column.width, height, margin, this.state.timelineHeight).cache\r\n        this.stageSelected = false\r\n        this.sliderSelected = false\r\n        this.stagePreviousPositon = 0\r\n        this.throttleStage = 0\r\n    }\r\n    resetPointerDown = (e) => {\r\n        this.stageSelected = false\r\n        this.sliderSelected = false\r\n        this.stagePreviousPositon = 0\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"pointerup\", this.resetPointerDown)\r\n        window.addEventListener(\"keydown\", this.handleKeyboard)\r\n        this.canvasRef.current._canvas.addEventListener(\"wheel\", this.handleWheel)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"pointerup\", this.resetPointerDown)\r\n        window.removeEventListener(\"keydown\", this.handleKeyboard)\r\n        this.canvasRef.current._canvas.removeEventListener(\"wheel\", this.handleWheel)\r\n    }\r\n    handleKeyboard = (event) => {\r\n        let key = event.code\r\n        switch (key) {\r\n            case \"ArrowRight\": this.handleBreakpoints(1)\r\n                break;\r\n            case \"ArrowLeft\": this.handleBreakpoints(-1)\r\n                break;\r\n            default : \r\n                break;\r\n        }\r\n    }\r\n    handleWheel = (e) => {\r\n        if (e.deltaY < 0) {\r\n            this.props.functions.selectColumn(this.props.data.selected - 1, true)\r\n        } else {\r\n            this.props.functions.selectColumn(this.props.data.selected + 1, true)\r\n        }\r\n    }\r\n    handleClick = (e, type) => {\r\n        let x = e.data.global.x\r\n        if (type === \"click\") {\r\n            let totalWidth = this.state.column.width * this.props.data.columns.length\r\n\r\n            let relativePos = Math.floor(x / this.state.width * totalWidth / this.state.column.width)\r\n            this.props.functions.selectColumn(relativePos)\r\n        }\r\n        if (type === \"up\") {\r\n            this.sliderSelected = false\r\n        }\r\n        if (type === \"down\") {\r\n            this.sliderSelected = true\r\n        }\r\n        if (type === \"downStage\") {\r\n            this.stagePreviousPositon = x\r\n            this.stageSelected = true\r\n        }\r\n    }\r\n    handleStageSlide = (e) => {\r\n        let x = e.data.global.x\r\n        if (this.stageSelected === true) {\r\n            this.throttleStage++\r\n            if (this.throttleStage < 5) return\r\n            this.throttleStage = 0\r\n            let isMovingLeft = this.stagePreviousPositon < x\r\n            let amount = Math.ceil(Math.abs(this.stagePreviousPositon - x) / 8)\r\n            if (amount > 4) amount = 4\r\n            let toAdd = isMovingLeft ? -1 : 1\r\n            this.stagePreviousPositon = x\r\n            let finalPos = this.props.data.selected + toAdd * amount\r\n            if (this.props.data.selected === finalPos) return\r\n            if (finalPos < 0) finalPos = 0\r\n            if (finalPos > this.props.data.columns.length) finalPos = this.props.data.columns.length - 1\r\n            this.props.functions.selectColumn(finalPos, true)\r\n        }\r\n    }\r\n    handleBreakpoints = (direction) => {\r\n        let selectedColumn = this.props.data.selected\r\n        let columns = this.props.data.columns\r\n        let breakpoint\r\n        let breakpoints = this.props.data.breakpoints\r\n        if (direction === 1) {//right\r\n            breakpoint = breakpoints.filter((v) => v > selectedColumn).sort((a, b) => a - b)\r\n        } else {\r\n            breakpoint = breakpoints.filter((v) => v < selectedColumn).sort((a, b) => b - a)\r\n        }\r\n        if (breakpoint.length >= 0) {\r\n            if (columns.length >= breakpoint[0] && breakpoint[0] >= 0) {\r\n                this.props.functions.selectColumn(breakpoint[0])\r\n            }\r\n        }\r\n\r\n    }\r\n    handleSlide = (e) => {\r\n        if (this.sliderSelected) {\r\n            this.throttleStage++\r\n            if (this.throttleStage < 4) return\r\n            this.throttleStage = 0\r\n            let totalWidth = this.state.column.width * this.props.data.columns.length\r\n            let x = e.data.global.x\r\n            let relativePos = Math.floor(x / this.state.width * totalWidth / this.state.column.width)\r\n            this.props.functions.selectColumn(relativePos, true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let s = this.state\r\n        let pixiOptions = {\r\n            backgroundColor: 0x495466,\r\n        }\r\n        const { data, functions } = this.props\r\n        let sizes = this.state.column\r\n        let xPos = (data.selected - NumOfColumnsPerCanvas / 2 + 1) * - sizes.width\r\n        let timelineHeight = this.state.timelineHeight\r\n        let counter = 0\r\n        let switcher = false\r\n        let cache = this.cache\r\n        let beatMarks = Number(data.settings.beatMarks.value)\r\n        let counterLimit = beatMarks === 0 ? 11 : 4 * beatMarks - 1\r\n        let relativeColumnWidth = this.state.width / data.columns.length\r\n        let stageSize = Math.floor(relativeColumnWidth * (NumOfColumnsPerCanvas + 1))\r\n        if (stageSize > this.state.width) stageSize = this.state.width\r\n        let stagePos = relativeColumnWidth * data.selected - (NumOfColumnsPerCanvas / 2 - 1) * relativeColumnWidth\r\n        return <div className=\"canvas-wrapper\" style={{ width: s.width + 6 }}>\r\n            <Stage\r\n                width={s.width}\r\n                height={s.height}\r\n                raf={false}\r\n                renderOnComponentChange={true}\r\n                options={pixiOptions}\r\n                key={this.state.width}\r\n                ref={this.canvasRef}\r\n            >\r\n                <Container\r\n                    anchor={[0.5, 0.5]}\r\n                    x={xPos}\r\n                    interactive={true}\r\n                    pointerdown={(e) => this.handleClick(e, \"downStage\")}\r\n                    pointermove={(e) => this.handleStageSlide(e)}\r\n                >\r\n                    {data.columns.map((column, i) => {\r\n                        if (counter > counterLimit) {\r\n                            switcher = !switcher\r\n                            counter = 0\r\n                        }\r\n                        counter++\r\n                        if (!isVisible(i, data.selected)) return null\r\n                        let tempoChangersCache = (i + 1) % 4 === 0 ? cache.columnsLarger : cache.columns\r\n                        let standardCache = (i + 1) % 4 === 0 ? cache.standardLarger : cache.standard\r\n                        let standardBg = standardCache[Number(switcher)] // boolean is 1 or 0\r\n                        let background = column.tempoChanger === 0 ? standardBg : tempoChangersCache[column.tempoChanger]\r\n                        return <Column\r\n                            cache={cache}\r\n                            key={i}\r\n                            data={column}\r\n                            index={i}\r\n                            sizes={sizes}\r\n                            backgroundCache={background}\r\n                            isToolsSelected={data.toolsColumns.includes(i)}\r\n                            click={functions.selectColumn}\r\n                            isSelected={i === data.selected}\r\n                            isBreakpoint={data.breakpoints.includes(i)}\r\n                        />\r\n\r\n                    })}\r\n\r\n                </Container>\r\n            </Stage>\r\n            <div className=\"timeline-wrapper\" style={{ height: this.state.timelineHeight }}>\r\n                <div className=\"timeline-button\" onClick={() => this.handleBreakpoints(-1)}>\r\n                    <FontAwesomeIcon icon={faStepBackward} />\r\n                </div>\r\n                <div className=\"timeline-button\" onClick={() => this.handleBreakpoints(1)}>\r\n                    <FontAwesomeIcon icon={faStepForward} />\r\n                </div>\r\n                <Stage\r\n                    width={s.width}\r\n                    height={timelineHeight}\r\n                    options={{ antialias: true, autoDensity: true,backgroundColor: 0x515c6f }}\r\n                    raf={false}\r\n                    renderOnComponentChange={true}\r\n                >\r\n                    <Container\r\n                        width={this.state.width}\r\n                        height={this.state.timelineHeight}\r\n                        interactive={true}\r\n                        pointertap={(e) => this.handleClick(e, \"click\")}\r\n                        pointerdown={(e) => this.handleClick(e, \"down\")}\r\n                        pointerup={(e) => this.handleClick(e, \"up\")}\r\n                        pointermove={this.handleSlide}\r\n                    >\r\n                        <Graphics draw={(e) => { fillX(e, this.state.width, this.state.timelineHeight) }}/>\r\n                        {data.breakpoints.map(breakpoint => {\r\n                            return <Sprite\r\n                                image={cache.breakpoints[0]}\r\n                                key={breakpoint}\r\n                                x={relativeColumnWidth * breakpoint}\r\n                            >\r\n                            </Sprite>\r\n                        })}\r\n                    </Container>\r\n\r\n                    <Graphics draw={(e) => drawStage(e, stageSize, this.state.timelineHeight)} x={stagePos} y={2} />\r\n\r\n\r\n                </Stage>\r\n                <div className=\"timeline-button\" onClick={functions.toggleBreakpoint}>\r\n                    <FontAwesomeIcon icon={data.breakpoints.includes(data.selected) ? faMinusCircle : faPlusCircle} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction fillX(g, width, height) {\r\n    g.clear()\r\n    g.beginFill(0x515c6f, 1)\r\n    g.drawRect(0, 0, width, height)\r\n}\r\nfunction drawStage(g, width, height) {\r\n    g.clear()\r\n    g.lineStyle(3, 0x1a968b, 0.8)\r\n    g.drawRoundedRect(0, 0, width - 2, height - 4, 6)\r\n}\r\n\r\nfunction Column(props) {\r\n    let { data, index, sizes, click, cache, backgroundCache, isBreakpoint, isSelected, isToolsSelected } = props\r\n    return <Container\r\n        pointertap={() => click(index)}\r\n        interactive={true}\r\n        x={sizes.width * index}\r\n    >\r\n        <Sprite\r\n            image={backgroundCache}\r\n            interactiveChildren={false}\r\n        >\r\n            {isSelected || isToolsSelected ? <Sprite\r\n                image={isToolsSelected && !isSelected? cache.standard[3] : cache.standard[2]}\r\n                alpha={isToolsSelected ?0.4 : 0.6}\r\n                zIndex={1}\r\n            >\r\n            </Sprite> : null}\r\n            {isBreakpoint ? <Sprite\r\n                image={cache.breakpoints[1]}\r\n            >\r\n            </Sprite> : null}\r\n        </Sprite>\r\n        {data.notes.map((note) => {\r\n            return <Sprite\r\n                key={note.index}\r\n                image={cache.notes[note.layer]}\r\n                y={composerNotePositions[note.index] * sizes.height / notesPerColumn}\r\n            >\r\n            </Sprite>\r\n        })}\r\n\r\n    </Container>\r\n}\r\nfunction calcMinColumnWidth(parentWidth) {\r\n    return nearestEven(parentWidth / NumOfColumnsPerCanvas)\r\n}\r\nfunction nearestEven(num) {\r\n    return 2 * Math.round(num / 2);\r\n}\r\nfunction isVisible(pos, currentPos) {\r\n    let threshold = NumOfColumnsPerCanvas / 2 + 2\r\n    let boundaries = [currentPos - threshold, currentPos + threshold]\r\n    return boundaries[0] < pos && pos < boundaries[1]\r\n}\r\nexport default ComposerCanvas","import React, { Component, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSave, faMusic, faTimes, faCog, faTrash, faCompactDisc, faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport \"../mainPage/menu.css\"\r\n\r\nimport { FileDownloader, LoggerEvent, ComposerSongSerialization, prepareSongDownload } from \"../SongUtils\"\r\nimport { appName } from '../../appConfig'\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            selectedMenu: \"Settings\",\r\n            selectedSongType: \"composed\",\r\n        }    \r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"keydown\", this.handleKeyboard)\r\n    }\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"keydown\", this.handleKeyboard)\r\n    }\r\n    handleKeyboard = (event) => {\r\n        let key = event.code\r\n        if (document.activeElement.tagName === \"INPUT\") return\r\n\r\n        switch (key) {\r\n            case \"Escape\": {\r\n                if(this.state.open) this.props.functions.toggleMenuVisible()\r\n                this.setState({ open: false })\r\n                break\r\n            }\r\n            default: break;\r\n        }\r\n    }\r\n    toggleMenu = (override) => {\r\n        if (typeof override !== \"boolean\") override = undefined\r\n        let newState = override !== undefined ? override : !this.state.open\r\n        this.setState({\r\n            open: newState,\r\n        })\r\n        if (newState === false) {\r\n            this.props.functions.toggleMenuVisible()\r\n        }\r\n    }\r\n    changeSelectedSongType = (name) => {\r\n        this.setState({\r\n            selectedSongType: name\r\n        })\r\n    }\r\n    selectSideMenu = (selection) => {\r\n        if (selection === this.state.selectedMenu && this.state.open) {\r\n            return this.setState({\r\n                open: false,\r\n            })\r\n        }\r\n        this.setState({\r\n            selectedMenu: selection,\r\n            open: true\r\n        })\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        if (song.data.isComposedVersion) {\r\n            song = ComposerSongSerialization(song)\r\n        }\r\n        let songName = song.name\r\n        if (appName === \"Sky\") {\r\n            //adds old format into the sheet\r\n            song = prepareSongDownload(song)\r\n        }\r\n        if (!Array.isArray(song)) song = [song]\r\n        song.forEach(song1 => {\r\n            song1.data.appName = appName\r\n        })\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json, `${songName}.${appName.toLowerCase()}sheet.json`)\r\n        new LoggerEvent(\"Success\", \"Song downloaded\").trigger()\r\n    }\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let sideClass = this.state.open ? \"side-menu menu-open\" : \"side-menu\"\r\n        let selectedMenu = this.state.selectedMenu\r\n        const { loadSong, removeSong, updateSong, changePage, handleSettingChange, changeVolume, createNewSong, changeMidiVisibility } = functions\r\n        let songFunctions = {\r\n            loadSong: loadSong,\r\n            removeSong: removeSong,\r\n            toggleMenu: this.toggleMenu,\r\n            downloadSong: this.downloadSong\r\n        }\r\n        let songs = data.songs.filter(song => !song.data?.isComposedVersion)\r\n        let composedSongs = data.songs.filter(song => song.data?.isComposedVersion)\r\n        let hasUnsaved = data.hasChanges ? \"margin-top-auto not-saved\" : \"margin-top-auto\"\r\n        let menuClass = data.menuOpen ? \"menu menu-visible\" : \"menu\"\r\n        return <div className=\"menu-wrapper\">\r\n            <div className={menuClass}>\r\n                <CloseMenu action={this.toggleMenu} />\r\n                <MenuItem type=\"Save\" action={() => updateSong(data.currentSong)} className={hasUnsaved}>\r\n                    <FontAwesomeIcon icon={faSave} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Songs\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faMusic} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Settings\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faCog} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Composer\" action={() => changePage(\"\")} className=\"inverted\">\r\n                    <FontAwesomeIcon icon={faCompactDisc} className=\"icon\" />\r\n                </MenuItem>\r\n            </div>\r\n            <div className={sideClass}>\r\n                <MenuPanel title=\"No selection\" visible={selectedMenu}>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Songs\" visible={selectedMenu}>\r\n                    <div className=\"songs-buttons-wrapper\">\r\n                        <button className=\"genshin-button\" onClick={() => { changeMidiVisibility(true); this.toggleMenu() }}>\r\n                            Create from MIDI\r\n                        </button>\r\n                        <button className=\"genshin-button\" onClick={createNewSong}>\r\n                            Create new song\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"tab-selector-wrapper\">\r\n                        <button\r\n                            className={this.state.selectedSongType === \"recorded\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"recorded\")}\r\n                        >\r\n                            Recorded\r\n                        </button>\r\n                        <button\r\n                            className={this.state.selectedSongType === \"composed\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"composed\")}\r\n                        >\r\n                            Composed\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"songs-wrapper\" style={{marginBottom: '0.5rem'}}>\r\n                        {this.state.selectedSongType === \"recorded\"\r\n                            ? songs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={songFunctions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n\r\n                            : composedSongs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={songFunctions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n                    <div className=\"songs-buttons-wrapper\" style={{marginTop: 'auto'}}>\r\n                        <button \r\n                            className={`genshin-button record-btn ${data.isRecordingAudio ? \"selected\" : \"\"}`}\r\n                            onClick={() => functions.startRecordingAudio(!data.isRecordingAudio)}\r\n                        >\r\n                                {data.isRecordingAudio ? \"Stop recording audio\" : \"Start recording audio\"}\r\n                        </button>\r\n                    </div>\r\n\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Settings\" visible={selectedMenu}>\r\n                    {Object.entries(data.settings).map(([key, data]) => {\r\n                        return <SettingsRow\r\n                            key={key + data.value}\r\n                            objKey={key}\r\n                            data={data}\r\n                            changeVolume={changeVolume}\r\n                            update={handleSettingChange}\r\n                        >\r\n\r\n                        </SettingsRow>\r\n                    })}\r\n                    {!checkIfTWA() && <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Support me\r\n                    </a>}\r\n                </MenuPanel>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction MenuPanel(props) {\r\n    let className = props.visible === props.title ? \"menu-panel menu-panel-visible\" : \"menu-panel\"\r\n    return <div className={className}>\r\n        <div className=\"menu-title\">\r\n            {props.title}\r\n        </div>\r\n        <div className=\"panel-content-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\nfunction CloseMenu(props) {\r\n    return <div onClick={() => props.action(false)} className=\"close-menu menu-item\">\r\n        <FontAwesomeIcon icon={faTimes} className=\"icon\" />\r\n    </div>\r\n}\r\n\r\nfunction SongRow(props) {\r\n    const { data, functions } = props\r\n    const { removeSong, toggleMenu, loadSong, downloadSong } = functions\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\" onClick={() => {\r\n            loadSong(data)\r\n            toggleMenu(false)\r\n        }}>\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => removeSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nfunction SettingsRow(props) {\r\n    const { data, update, objKey, changeVolume } = props\r\n    const [valueHook, setter] = useState(data.value)\r\n    const [volumeHook, setterVolume] = useState(data.volume)\r\n    function handleChange(e) {\r\n        let el = e.target\r\n        let value = data.type === \"checkbox\" ? el.checked : el.value\r\n        if (data.type === \"number\") {\r\n            value = Number(value)\r\n            e.target.value = \"\" //have to do this to remove a react bug that adds a 0 at the start\r\n            if (value < data.threshold[0] || value > data.threshold[1]) {\r\n                return\r\n            }\r\n        }\r\n        if(el.type === 'checkbox'){\r\n            data.value = value\r\n            let obj = {\r\n                key: objKey,\r\n                data\r\n            }\r\n            update(obj)\r\n        }\r\n        setter(value)\r\n    }\r\n    function sendChange() {\r\n        if (data.value === valueHook) return\r\n        data.value = valueHook\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function sendChangeSelect(e) {\r\n        let value = e.target.value\r\n        data.value = value\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function handleVolume(e) {\r\n        setterVolume(Number(e.target.value))\r\n    }\r\n    function sendVolumeChange() {\r\n        changeVolume({\r\n            key: objKey,\r\n            value: volumeHook\r\n        })\r\n    }\r\n    if (objKey === \"settingVesion\") return null\r\n    return <div className=\"settings-row\">\r\n        <div>\r\n            {data.name}\r\n        </div>\r\n        {data.type === \"select\"\r\n            ? <select value={data.value}\r\n                onChange={sendChangeSelect}\r\n            >\r\n                {data.options.map(e => {\r\n                    return <option value={e} key={e}>{e}</option>\r\n                })}\r\n            </select>\r\n            : null\r\n        }\r\n        {[\"number\", \"text\", \"checkbox\"].includes(data.type) ?\r\n            <input\r\n                type={data.type}\r\n                value={valueHook}\r\n                checked={valueHook}\r\n                onChange={handleChange}\r\n                onBlur={sendChange}\r\n            />\r\n            : null\r\n        }\r\n        {data.type === \"instrument\"\r\n            ? <div className=\"instrument-picker\">\r\n                <select value={data.value}\r\n                    onChange={sendChangeSelect}\r\n                >\r\n                    {data.options.map(e => {\r\n                        return <option value={e} key={e}>{e}</option>\r\n                    })}\r\n                </select>\r\n\r\n                <input\r\n                    type=\"range\"\r\n                    min={1}\r\n                    max={100}\r\n                    value={volumeHook}\r\n                    onChange={handleVolume}\r\n                    onPointerUp={sendVolumeChange}\r\n                />\r\n            </div>\r\n            : null\r\n        }\r\n    </div>\r\n}\r\n\r\nfunction checkIfTWA() {\r\n    let isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n    return isTwa\r\n}\r\n\r\nclass MenuItem extends Component {\r\n    render() {\r\n        let className = this.props.className ? `menu-item ${this.props.className}` : \"menu-item\"\r\n        return <div\r\n            className={className}\r\n            onClick={() => this.props.action(this.props.type)}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n}\r\nexport default Menu","import React, { Component } from 'react'\r\nimport ZangoDb from \"zangodb\"\r\nimport { faPlay, faPlus, faPause, faBars, faChevronLeft, faChevronRight, faTools } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport rotateImg from \"../../assets/icons/rotate.svg\"\r\nimport addCell from \"../../assets/icons/addCell.svg\"\r\nimport removeCell from \"../../assets/icons/removeCell.svg\"\r\nimport { appName, audioContext } from \"../../appConfig\"\r\n\r\nimport MidiImport from \"./MidiParser\"\r\nimport ComposerTools from \"./ComposerTools\"\r\nimport ComposerKeyboard from \"./ComposerKeyboard\"\r\nimport ComposerCanvas from \"./ComposerCanvas\"\r\nimport Menu from \"./Menu\"\r\n\r\nimport { asyncConfirm, asyncPrompt } from \"../AsyncPrompts\"\r\nimport { ComposerSettings } from \"../SettingsObj\"\r\nimport Instrument from \"../Instrument\"\r\nimport {\r\n    ComposedSong, LoggerEvent, ColumnNote, Column, TempoChangers,\r\n    ComposerSongSerialization, ComposerSongDeSerialization, getPitchChanger, RecordingToComposed, delayMs\r\n} from \"../SongUtils\"\r\nimport AudioRecorder from '../AudioRecorder'\r\n\r\nclass Composer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.db = new ZangoDb.Db(appName, { songs: [] })\r\n        this.dbCol = {\r\n            songs: this.db.collection(\"songs\")\r\n\r\n        }\r\n        let settings = this.getSettings()\r\n        this.playbackInterval = undefined\r\n        this.audioContext = audioContext\r\n        this.reverbNode = undefined\r\n        this.reverbVolumeNode = undefined\r\n        this.recorder = new AudioRecorder()\r\n\r\n        this.state = {\r\n            instrument: new Instrument(),\r\n            layers: [new Instrument(), new Instrument()],\r\n            songs: [],\r\n            isPlaying: false,\r\n            song: new ComposedSong(\"Untitled\"),\r\n            settings: settings,\r\n            menuOpen: false,\r\n            layer: 1,\r\n            toolsColumns: [],\r\n            toolsVisible: false,\r\n            midiVisible: false,\r\n            isRecordingAudio: false\r\n        }\r\n        this.copiedColums = []\r\n        this.changes = 0\r\n        this.broadcastChannel = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.init()\r\n        window.addEventListener(\"keydown\", this.handleKeyboard)\r\n        this.broadcastChannel = window.BroadcastChannel ? new BroadcastChannel(appName + '_composer') : {}\r\n        this.broadcastChannel.onmessage = (event) => {\r\n            if (!this.state.settings.syncTabs.value) return\r\n            if (!['play', 'stop'].includes(event?.data)) return\r\n            this.togglePlay(event.data === 'play')\r\n        }\r\n        if (window.location.hostname !== \"localhost\") {\r\n            window.addEventListener(\"beforeunload\", (event) => {\r\n                event.preventDefault()\r\n                event.returnValue = ''\r\n            })\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyboard)\r\n        const {instrument, layers} = this.state\r\n        this.broadcastChannel?.close?.()\r\n        const instruments = [instrument, layers[0], layers[1]]\r\n        instruments.forEach(instrument => instrument.delete())\r\n        this.reverbNode = undefined\r\n        this.reverbVolumeNode = undefined\r\n        this.audioContext = undefined   \r\n        let state = this.state\r\n        state.isPlaying = false\r\n    }\r\n    init = async () => {\r\n        this.syncSongs()\r\n\r\n        const { settings } = this.state\r\n        const promises = [\r\n            this.loadInstrument(settings.instrument.value, 1),\r\n            this.loadInstrument(settings.layer2.value, 2),\r\n            this.loadInstrument(settings.layer3.value, 3)\r\n        ]\r\n        await Promise.all(promises)\r\n        await this.loadReverb()\r\n        this.setupAudioDestination(settings.caveMode.value)\r\n    }\r\n    componentDidCatch() {\r\n        this.setState({\r\n            song: new ComposedSong(\"Untitled\")\r\n        })\r\n        new LoggerEvent(\"Warning\", \"There was an error with the song! Restoring default...\").trigger()\r\n    }\r\n    handleAutoSave = () => {\r\n        this.changes++\r\n        if (this.changes > 5 && this.state.settings.autosave.value) {\r\n            if (this.state.song.name !== \"Untitled\") {\r\n                this.updateSong(this.state.song)\r\n            }\r\n\r\n        }\r\n    }\r\n    loadReverb() {\r\n        return new Promise(resolve => {\r\n            fetch(\"./assets/audio/reverb4.wav\")\r\n                .then(r => r.arrayBuffer())\r\n                .then(b => {\r\n                    this.audioContext.decodeAudioData(b, (impulse_response) => {\r\n                        let convolver = this.audioContext.createConvolver()\r\n                        let gainNode = this.audioContext.createGain()\r\n                        gainNode.gain.value = 2.5\r\n                        convolver.buffer = impulse_response\r\n                        convolver.connect(gainNode)\r\n                        gainNode.connect(this.audioContext.destination)\r\n                        this.reverbNode = convolver\r\n                        this.reverbVolumeNode = gainNode\r\n                        resolve()\r\n                    })\r\n                }).catch((e) => {\r\n                    console.log(\"Error with reverb\", e)\r\n                })\r\n        })\r\n    }\r\n    getSettings = () => {\r\n        let storedSettings = localStorage.getItem(appName + \"_Composer_Settings\")\r\n        try {\r\n            storedSettings = JSON.parse(storedSettings)\r\n        } catch (e) {\r\n            storedSettings = null\r\n        }\r\n        if (storedSettings !== null) {\r\n            if (storedSettings.settingVesion !== ComposerSettings.settingVesion) {\r\n                this.updateSettings(ComposerSettings)\r\n                return ComposerSettings\r\n            }\r\n            return storedSettings\r\n        }\r\n        return ComposerSettings\r\n    }\r\n\r\n    updateSettings = (override) => {\r\n        let state\r\n        if (override !== undefined) {\r\n            state = override\r\n        } else {\r\n            state = this.state.settings\r\n        }\r\n        localStorage.setItem(appName + \"_Composer_Settings\", JSON.stringify(state))\r\n    }\r\n\r\n    handleSettingChange = (setting) => {\r\n        const { state } = this\r\n        let settings = state.settings\r\n        let data = setting.data\r\n        settings[setting.key].value = data.value\r\n        if (data.songSetting) {\r\n            state.song[setting.key] = data.value\r\n        }\r\n        if (setting.key === \"instrument\") this.loadInstrument(data.value, 1)\r\n        if (setting.key === \"layer2\") this.loadInstrument(data.value, 2)\r\n        if (setting.key === \"layer3\") this.loadInstrument(data.value, 3)\r\n        if (setting.key === \"caveMode\") this.setupAudioDestination(data.value)\r\n        this.setState({\r\n            settings: settings,\r\n            song: this.state.song\r\n        }, () => {\r\n            this.updateSettings()\r\n        })\r\n    }\r\n\r\n    loadInstrument = async (name, layer) => {\r\n        const { settings } = this.state\r\n        if (layer === 1) {\r\n            this.state.instrument.delete()\r\n            let newInstrument = new Instrument(name)\r\n            await newInstrument.load()\r\n            newInstrument.changeVolume(settings.instrument.volume)\r\n            this.setState({\r\n                instrument: newInstrument\r\n            })\r\n        } else {\r\n            let newInstrument = new Instrument(name)\r\n            let layers = this.state.layers\r\n            layers[layer-2].delete()\r\n            layers[layer - 2] = newInstrument\r\n            await newInstrument.load()\r\n            newInstrument.changeVolume(settings[`layer${layer}`]?.volume)\r\n            this.setState({\r\n                layers: layers\r\n            })\r\n        }\r\n        this.setupAudioDestination(settings.caveMode.value)\r\n    }\r\n    changeVolume = (obj) => {\r\n        let settings = this.state.settings\r\n        if (obj.key === \"instrument\") {\r\n            settings.instrument.volume = obj.value\r\n            this.state.instrument.changeVolume(obj.value)\r\n        }\r\n        if (obj.key === \"layer2\") {\r\n            settings.layer2.volume = obj.value\r\n            this.state.layers[0].changeVolume(obj.value)\r\n        }\r\n        if (obj.key === \"layer3\") {\r\n            settings.layer3.volume = obj.value\r\n            this.state.layers[1].changeVolume(obj.value)\r\n        }\r\n        this.setState({\r\n            settings: settings\r\n        }, () => this.updateSettings())\r\n    }\r\n    setupAudioDestination = (hasReverb) => {\r\n        const { instrument, layers } = this.state\r\n        const instruments = [instrument, layers[0], layers[1]]\r\n        instruments.forEach(ins => {\r\n            if (hasReverb) {\r\n                if (!this.reverbNode) return console.log(\"Couldn't connect to reverb\")\r\n                ins.disconnect()\r\n                ins.connect(this.reverbNode)\r\n            } else {\r\n                ins.disconnect()\r\n                ins.connect(this.audioContext.destination)\r\n            }\r\n        })\r\n    }\r\n    startRecordingAudio =async (override) => { //will record untill the song stops\r\n        if(!override){\r\n            this.setState({ isRecordingAudio: false })\r\n            return this.togglePlay(false)\r\n        }\r\n        const { instrument, layers } = this.state\r\n        const instruments = [instrument, layers[0], layers[1]]\r\n        const hasReverb = this.state.settings.caveMode.value\r\n        const { recorder } = this\r\n        if (hasReverb) {\r\n            this.reverbVolumeNode.connect(recorder.node)\r\n        } else {\r\n            instruments.forEach(instrument => {\r\n                instrument.connect(recorder.node)\r\n            })\r\n        }\r\n        recorder.start()\r\n        this.setState({ isRecordingAudio: true })\r\n        await this.togglePlay(true) //wait till song finishes\r\n        let recording = await recorder.stop()\r\n        this.setState({ isRecordingAudio: false })\r\n        let fileName = await asyncPrompt(\"Write the song name, press cancel to ignore\")\r\n        if (fileName)  recorder.download(recording.data, fileName + '.wav')\r\n        this.reverbVolumeNode.disconnect()\r\n        this.reverbVolumeNode.connect(audioContext.destination)\r\n        this.setupAudioDestination(hasReverb)\r\n    }\r\n    handleKeyboard = (event) => {\r\n        if (document.activeElement.tagName === \"INPUT\") return\r\n        const { instrument,layer,layers,isPlaying } = this.state\r\n        let key = event.code\r\n        const shouldEditKeyboard = isPlaying || event.shiftKey\r\n        if (shouldEditKeyboard) {\r\n            let letter = key?.replace(\"Key\", \"\")\r\n            let note = instrument.getNoteFromCode(letter)\r\n            if (note !== null) this.handleClick(instrument.layout[note])\r\n            switch (key) {\r\n                case \"Space\": {\r\n                    this.togglePlay()\r\n                    if (!this.state.settings.syncTabs.value) break;\r\n                    this.broadcastChannel?.postMessage?.(\"stop\")\r\n                    break;\r\n                }\r\n                default: break;\r\n            }\r\n        } else {\r\n            switch (key) {\r\n                case \"KeyD\": this.selectColumn(this.state.song.selected + 1); break;\r\n                case \"KeyA\": this.selectColumn(this.state.song.selected - 1); break;\r\n                case \"Digit1\": this.handleTempoChanger(TempoChangers[0]); break;\r\n                case \"Digit2\": this.handleTempoChanger(TempoChangers[1]); break;\r\n                case \"Digit3\": this.handleTempoChanger(TempoChangers[2]); break;\r\n                case \"Digit4\": this.handleTempoChanger(TempoChangers[3]); break;\r\n                case \"Space\": {\r\n                    this.togglePlay()\r\n                    if (!this.state.settings.syncTabs.value) break;\r\n                    this.broadcastChannel?.postMessage?.(\"play\")\r\n                    break;\r\n                }\r\n                case \"ArrowUp\":{\r\n                    let nextLayer = layer - 1\r\n                    if(nextLayer > 0) this.changeLayer(nextLayer)\r\n                    break;\r\n                }   \r\n                case \"ArrowDown\":{\r\n                    let nextLayer = layer + 1\r\n                    if(nextLayer < layers.length + 2) this.changeLayer(nextLayer)\r\n                    break;\r\n                }\r\n                case \"KeyQ\": this.removeColumns(1, this.state.song.selected); break;\r\n                case \"KeyE\": this.addColumns(1, this.state.song.selected); break;\r\n                default: break;\r\n            }\r\n        }\r\n\r\n    }\r\n    playSound = (instrument, index) => {\r\n        try {\r\n            let note = instrument.layout[index]\r\n            if (note === undefined) return\r\n            instrument.play(note.index, getPitchChanger(this.state.settings.pitch.value))\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n    changePitch = (value) => {\r\n        const { settings } = this.state\r\n        settings.pitch.value = value\r\n        this.setState({\r\n            settings: settings\r\n        }, () => this.updateSettings())\r\n    }\r\n    handleClick = (note) => {\r\n        let column = this.state.song.columns[this.state.song.selected]\r\n        let index = column.notes.findIndex((n) => {\r\n            return note.index === n.index\r\n        })\r\n        let layerIndex = this.state.layer - 1\r\n        if (index < 0) { //if it doesn't exist, create a new one\r\n            let columnNote = new ColumnNote(note.index)\r\n            columnNote.layer = replaceAt(columnNote.layer, layerIndex, \"1\")\r\n            column.notes.push(columnNote)\r\n        } else { //if it exists, toggle the current layer and if it's 000 delete it\r\n            let currentNote = column.notes[index]\r\n            currentNote.layer = replaceAt(currentNote.layer, layerIndex, currentNote.layer[layerIndex] === \"0\" ? \"1\" : \"0\")\r\n            if (currentNote.layer === \"000\") column.notes.splice(index, 1)\r\n        }\r\n        this.setState({\r\n            song: this.state.song\r\n        })\r\n        this.handleAutoSave()\r\n        let instrument = this.state.instrument\r\n        if (this.state.layer > 1) {\r\n            instrument = this.state.layers[this.state.layer - 2]\r\n        }\r\n        this.playSound(instrument, note.index)\r\n    }\r\n    syncSongs = async () => {\r\n        let songs = await this.dbCol.songs.find().toArray()\r\n        songs = songs.map(song => {\r\n            if (song.data.isComposedVersion) {\r\n                return ComposerSongDeSerialization(song)\r\n            }\r\n            return song\r\n        })\r\n        this.setState({\r\n            composedSongs: songs,\r\n            songs: songs\r\n        })\r\n    }\r\n    addSong = async (song) => {\r\n        if (await this.songExists(song.name)) {\r\n            return new LoggerEvent(\"Warning\", \"A song with this name already exists! \\n\" + song.name).trigger()\r\n        }\r\n        await this.dbCol.songs.insert(ComposerSongSerialization(song))\r\n        this.syncSongs()\r\n    }\r\n    updateSong = async (song) => {\r\n        if (song.name === \"Untitled\") {\r\n            let name = await this.askForSongName()\r\n            if (name === null) return\r\n            song.name = name\r\n            return this.addSong(song)\r\n\r\n        }\r\n        return new Promise(async resolve => {\r\n            let settings = this.state.settings\r\n            if (await this.songExists(song.name)) {\r\n                song.instruments[0] = settings.instrument.value\r\n                song.instruments[1] = settings.layer2.value\r\n                song.instruments[2] = settings.layer3.value\r\n                await this.dbCol.songs.update({ name: song.name }, ComposerSongSerialization(song))\r\n                console.log(\"song saved:\", song.name)\r\n                this.changes = 0\r\n                this.syncSongs()\r\n            } else {\r\n                if (song.name.includes(\"- Composed\")) {\r\n                    let name = await this.askForSongName(\"Write composed song name, press cancel to ignore\")\r\n                    if (name === null) return resolve()\r\n                    song.name = name\r\n                    await this.dbCol.songs.insert(ComposerSongSerialization(song))\r\n                    this.syncSongs()\r\n                    return resolve()\r\n                }\r\n                console.log(\"song doesn't exist\")\r\n                song.name = \"Untitled\"\r\n                this.updateSong(song)\r\n            }\r\n            resolve()\r\n        })\r\n    }\r\n    askForSongName = (question) => {\r\n        return new Promise(async resolve => {\r\n            let promptString = question || \"Write song name, press cancel to ignore\"\r\n            while (true) {\r\n                let songName = await asyncPrompt(promptString)\r\n                if (songName === null) return resolve(null)\r\n                if (songName !== \"\") {\r\n                    if (await this.songExists(songName)) {\r\n                        promptString = \"This song already exists: \" + songName\r\n                    } else {\r\n                        return resolve(songName)\r\n                    }\r\n                } else {\r\n                    promptString =question || \"Write song name, press cancel to ignore\"\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n    askForSongUpdate = () => {\r\n        return new Promise(async resolve => {\r\n            let result = await asyncConfirm(`You have unsaved changes to the song: \"${this.state.song.name}\" do you want to save now?`)\r\n            resolve(result)\r\n        })\r\n    }\r\n    songExists = async (name) => {\r\n        return await this.dbCol.songs.findOne({ name: name }) !== undefined\r\n    }\r\n    createNewSong = async () => {\r\n        if (this.state.song.name !== \"Untitled\" && this.changes > 0) {\r\n            let wantsToSave = await this.askForSongUpdate()\r\n            if (wantsToSave) {\r\n                await this.updateSong(this.state.song)\r\n            }\r\n        }\r\n        let name = await this.askForSongName(\"Write new song name, press cancel to ignore\")\r\n        if (name === null) return\r\n        let song = new ComposedSong(name)\r\n        this.changes = 0\r\n        this.setState({\r\n            song: song\r\n        }, () => this.addSong(song))\r\n    }\r\n    removeSong = async (name) => {\r\n        let confirm = await asyncConfirm(\"Are you sure you want to delete the song: \" + name)\r\n        if (confirm) this.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n    }\r\n\r\n    loadSong = async (song) => {\r\n        const state = this.state\r\n        song = JSON.parse(JSON.stringify(song)) //lose reference\r\n        if (!song.data.isComposedVersion) {\r\n            song = RecordingToComposed(song)\r\n            song.name += \" - Composed\"\r\n        }\r\n        if (this.changes !== 0) {\r\n            let confirm = state.settings.autosave.value && state.song.name !== \"Untitled\"\r\n            if (!confirm && state.song.columns.length > 0) {\r\n                confirm = await asyncConfirm(`You have unsaved changes to the song: \"${state.song.name}\" do you want to save? UNSAVED CHANGES WILL BE LOST`)\r\n            }\r\n            if (confirm) await this.updateSong(state.song)\r\n        }\r\n\r\n        let settings = this.state.settings\r\n        settings.bpm.value = song.bpm\r\n        settings.pitch.value = song.pitch\r\n        if (settings.instrument.value !== song.instruments[0]) {\r\n            this.loadInstrument(song.instruments[0], 1)\r\n            settings.instrument.value = song.instruments[0]\r\n        }\r\n        if (settings.layer2.value !== song.instruments[1]) {\r\n            this.loadInstrument(song.instruments[1], 2)\r\n            settings.layer2.value = song.instruments[1]\r\n        }\r\n        if (settings.layer3.value !== song.instruments[2]) {\r\n            this.loadInstrument(song.instruments[2], 3)\r\n            settings.layer3.value = song.instruments[2]\r\n        }\r\n        this.changes = 0\r\n        console.log(\"song loaded\")\r\n        this.setState({\r\n            song: song,\r\n            settings: settings,\r\n            toolsColumns: []\r\n        })\r\n    }\r\n\r\n    addColumns = (amount = 1, position = \"end\") => {\r\n        return new Promise(resolve => {\r\n            let columns = new Array(amount).fill().map(() => new Column())\r\n            let songColumns = this.state.song.columns\r\n            if (position === \"end\") {\r\n                songColumns.push(...columns)\r\n            } else {\r\n                songColumns.splice(position + 1, 0, ...columns)\r\n            }\r\n            if (amount === 1) this.selectColumn(this.state.song.selected + 1)\r\n            this.handleAutoSave()\r\n            this.setState({\r\n                song: this.state.song\r\n            }, resolve)\r\n        })\r\n\r\n    }\r\n    removeColumns = (amount, position) => {\r\n        let song = this.state.song\r\n        if (song.columns.length < 16) return\r\n        let indexes = new Array(amount).fill().map((e, i) => position + i)\r\n        indexes.forEach(index => {\r\n            if (song.breakpoints.includes(index)) this.toggleBreakpoint(index)\r\n        })\r\n        song.columns.splice(position, amount)\r\n        if (song.columns.length <= song.selected) this.selectColumn(song.selected - 1)\r\n        this.handleAutoSave()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    //----------------------------------------------//\r\n\r\n    togglePlay = async (override) => {\r\n        return new Promise(resolve => {\r\n            let newState = typeof override === \"boolean\" ? override : !this.state.isPlaying\r\n            this.setState({\r\n                isPlaying: newState\r\n            }, async () => {\r\n                if (this.state.isPlaying) this.selectColumn(this.state.song.selected)\r\n                let pastError = 0\r\n                let previousTime = new Date().getTime()\r\n                while (this.state.isPlaying) {\r\n                    const { song, settings } = this.state\r\n                    let tempoChanger = TempoChangers[song.columns[song.selected].tempoChanger]\r\n                    let msPerBPM = Math.floor(60000 / settings.bpm.value * tempoChanger.changer) + pastError\r\n                    previousTime = new Date().getTime()\r\n                    await delayMs(msPerBPM)\r\n                    if (!this.state.isPlaying) break\r\n                    this.handleTick()\r\n                    pastError = previousTime + msPerBPM - new Date().getTime()\r\n                }\r\n                resolve()\r\n            })\r\n        }) \r\n    }\r\n\r\n\r\n    handleTick = () => {\r\n        let newIndex = this.state.song.selected + 1\r\n        if (this.state.isPlaying && newIndex > this.state.song.columns.length - 1) {\r\n            return this.togglePlay(false)\r\n        }\r\n        this.selectColumn(this.state.song.selected + 1)\r\n\r\n    }\r\n    toggleMenuVisible = () => {\r\n        this.setState({\r\n            menuOpen: !this.state.menuOpen\r\n        })\r\n    }\r\n    toggleBreakpoint = (override) => {\r\n        let song = this.state.song\r\n        let index = typeof override === \"number\" ? override : song.selected\r\n        let indexOfBreakpoint = song.breakpoints.indexOf(index)\r\n        if (indexOfBreakpoint >= 0 && song.columns.length > index) {\r\n            song.breakpoints.splice(indexOfBreakpoint, 1)\r\n        } else if (song.columns.length > index) {\r\n            song.breakpoints.push(index)\r\n        }\r\n        this.validateBreakpoints()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    handleTempoChanger = (changer) => {\r\n        let song = this.state.song\r\n        song.columns[this.state.song.selected].tempoChanger = changer.id\r\n        this.handleAutoSave()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    changePage = async (page) => {\r\n        if (this.changes !== 0) {\r\n            if (this.state.settings.autosave.value) {\r\n                await this.updateSong(this.state.song)\r\n            } else {\r\n                let confirm = await asyncConfirm(`You have unsaved changes to the song: \"${this.state.song.name}\" do you want to save? UNSAVED CHANGES WILL BE LOST`)\r\n                if (confirm) {\r\n                    await this.updateSong(this.state.song)\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.props.changePage(page)\r\n    }\r\n    selectColumn = (index, ignoreAudio) => {\r\n        const state = this.state\r\n        let song = state.song\r\n        if (index < 0 || index > song.columns.length - 1) return\r\n        let currentColumn = state.song.columns[index]\r\n        song.selected = index\r\n        let toolsColumns = state.toolsColumns\r\n        if (state.toolsVisible && this.copiedColums.length === 0) {\r\n            toolsColumns.push(index)\r\n            let min = Math.min(...toolsColumns)\r\n            let max = Math.max(...toolsColumns)\r\n            toolsColumns = new Array(max - min + 1).fill().map((e, i) => min + i)\r\n        }\r\n        this.setState({\r\n            song: song,\r\n            toolsColumns: toolsColumns\r\n        })\r\n\r\n        if (ignoreAudio) return\r\n        currentColumn.notes.forEach(note => {\r\n            if (note.layer[0] === \"1\") this.playSound(state.instrument, note.index)\r\n            if (note.layer[1] === \"1\") this.playSound(state.layers[0], note.index)\r\n            if (note.layer[2] === \"1\") this.playSound(state.layers[1], note.index)\r\n        })\r\n    }\r\n    changeLayer = (layer) => {\r\n        this.setState({\r\n            layer: layer\r\n        })\r\n    }\r\n    //-----------------------TOOLS---------------------//\r\n    toggleTools = () => {\r\n        this.setState({\r\n            toolsVisible: !this.state.toolsVisible,\r\n            toolsColumns: this.state.toolsVisible ? [] : [this.state.song.selected]\r\n        })\r\n        this.copiedColums = []\r\n    }\r\n    copyColumns = (layer) => {\r\n        this.copiedColums = []\r\n        this.state.toolsColumns.forEach((index) => {\r\n            let column = this.state.song.columns[index]\r\n            if (column !== undefined) this.copiedColums.push(column)\r\n        })\r\n        this.copiedColums = JSON.parse(JSON.stringify(this.copiedColums)) // removing reference\r\n        if (layer !== 'all') {\r\n            this.copiedColums = this.copiedColums.map(column => {\r\n                column.notes = column.notes.filter(e => e.layer[layer - 1] === '1')\r\n                column.notes = column.notes.map(e => {\r\n                    e.layer = '000'\r\n                    e.layer = replaceAt(e.layer, layer - 1, '1')\r\n                    return e\r\n                })\r\n                return column\r\n            })\r\n        }\r\n        this.setState({\r\n            toolsColumns: []\r\n        })\r\n    }\r\n    pasteColumns = async (insert) => {\r\n        let song = this.state.song\r\n        let copiedColumns = JSON.parse(JSON.stringify(this.copiedColums))\r\n        if (!insert) {\r\n            song.columns.splice(song.selected, 0, ...copiedColumns)\r\n        } else {\r\n            copiedColumns.forEach((copiedColumn, i) => {\r\n                let column = song.columns[song.selected + i]\r\n                if (column !== undefined) {\r\n                    copiedColumn.notes.forEach(copiedNote => {\r\n                        let index = column.notes.findIndex(note => copiedNote.index === note.index)\r\n                        if (index < 0) {\r\n                            column.notes.push(copiedNote)\r\n                        } else {\r\n                            for (let j = 0; j < 3; j++) {\r\n                                if (copiedNote.layer[j] === '1') {\r\n                                    column.notes[index].layer = replaceAt(column.notes[index].layer, j, 1)\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    eraseColumns = (layer) => {\r\n        let song = this.state.song\r\n        if (layer === 'all') {\r\n            this.state.toolsColumns.forEach(columnIndex => {\r\n                let column = song.columns[columnIndex]\r\n                if (column !== undefined) song.columns[columnIndex].notes = []\r\n            })\r\n        } else {\r\n            this.state.toolsColumns.forEach(columnIndex => {\r\n                let column = song.columns[columnIndex]\r\n                if (column !== undefined) {\r\n                    song.columns[columnIndex].notes.forEach(note => {\r\n                        note.layer = replaceAt(note.layer, layer - 1, '0')\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    validateBreakpoints = () => {\r\n        let breakpoints = this.state.song.breakpoints.filter(breakpoint => breakpoint < this.state.song.columns.length)\r\n        let song = this.state.song\r\n        song.breakpoints = breakpoints\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    deleteColumns = async () => {\r\n        let song = this.state.song\r\n        song.columns = song.columns.filter((e, i) => !this.state.toolsColumns.includes(i))\r\n        if (song.selected > song.columns.length - 1) song.selected = song.columns.length - 1\r\n        if (song.selected <= 0) song.selected = 0\r\n        if (song.columns.length === 0) await this.addColumns(12, 0)\r\n        this.setState({\r\n            song: song,\r\n            toolsColumns: []\r\n        }, this.validateBreakpoints)\r\n    }\r\n    changeMidiVisibility = (visibility) => {\r\n        this.setState({\r\n            midiVisible: visibility\r\n        })\r\n    }\r\n    render() {\r\n\r\n        const { state } = this\r\n        const { midiVisible } = state\r\n        let song = state.song\r\n        let menuData = {\r\n            songs: state.songs,\r\n            currentSong: state.song,\r\n            settings: state.settings,\r\n            hasChanges: this.changes,\r\n            menuOpen: state.menuOpen,\r\n            isRecordingAudio: state.isRecordingAudio\r\n        }\r\n        let menuFunctions = {\r\n            loadSong: this.loadSong,\r\n            removeSong: this.removeSong,\r\n            createNewSong: this.createNewSong,\r\n            changePage: this.changePage,\r\n            updateSong: this.updateSong,\r\n            handleSettingChange: this.handleSettingChange,\r\n            toggleMenuVisible: this.toggleMenuVisible,\r\n            changeVolume: this.changeVolume,\r\n            changeMidiVisibility: this.changeMidiVisibility,\r\n            startRecordingAudio: this.startRecordingAudio\r\n        }\r\n        let keyboardFunctions = {\r\n            handleClick: this.handleClick,\r\n            handleTempoChanger: this.handleTempoChanger,\r\n            changeLayer: this.changeLayer\r\n        }\r\n        let keyboardData = {\r\n            keyboard: state.instrument,\r\n            currentColumn: state.song.columns[state.song.selected],\r\n            TempoChangers: TempoChangers,\r\n            layer: state.layer,\r\n            pitch: state.settings.pitch.value,\r\n            isPlaying: state.isPlaying,\r\n            noteNameType: state.settings.noteNameType.value,\r\n        }\r\n        let canvasFunctions = {\r\n            selectColumn: this.selectColumn,\r\n            toggleBreakpoint: this.toggleBreakpoint\r\n        }\r\n        let canvasData = {\r\n            columns: song.columns,\r\n            selected: song.selected,\r\n            settings: state.settings,\r\n            breakpoints: state.song.breakpoints,\r\n            toolsColumns: state.toolsColumns\r\n        }\r\n        let toolsData = {\r\n            visible: this.state.toolsVisible,\r\n            copiedColumns: this.copiedColums,\r\n            layer: this.state.layer\r\n        }\r\n        let toolsFunctions = {\r\n            toggleTools: this.toggleTools,\r\n            eraseColumns: this.eraseColumns,\r\n            deleteColumns: this.deleteColumns,\r\n            copyColumns: this.copyColumns,\r\n            pasteColumns: this.pasteColumns\r\n        }\r\n        let midiParserFunctions = {\r\n            loadSong: this.loadSong,\r\n            changeMidiVisibility: this.changeMidiVisibility,\r\n            changePitch: this.changePitch,\r\n        }\r\n        let midiParserData = {\r\n            instruments: [state.instrument, ...state.layers].map(layer => layer.instrumentName),\r\n            selectedColumn: song.selected,\r\n\r\n        }\r\n        return <div className=\"app bg-image\" style={{ backgroundImage: `url(${state.settings.backgroundImage.value})` }}>\r\n            {midiVisible && <MidiImport functions={midiParserFunctions} data={midiParserData} />}\r\n            <div className=\"hamburger\" onClick={this.toggleMenuVisible}>\r\n                <FontAwesomeIcon icon={faBars} />\r\n\r\n            </div>\r\n            <div className=\"rotate-screen\">\r\n                <img src={rotateImg} alt=\"a rotating screen\">\r\n                </img>\r\n                For a better experience, add the website to the home screen, and rotate your device\r\n            </div>\r\n\r\n            <div className=\"right-panel-composer\">\r\n\r\n                <div className=\"column fill-x\">\r\n\r\n                    <div className=\"top-panel-composer\">\r\n                        <div className=\"buttons-composer-wrapper\">\r\n                            <div className=\"tool\" onClick={() => this.selectColumn(song.selected + 1)}>\r\n                                <FontAwesomeIcon icon={faChevronRight} />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.selectColumn(song.selected - 1)}>\r\n                                <FontAwesomeIcon icon={faChevronLeft} />\r\n                            </div>\r\n\r\n                            <div className=\"tool\" onClick={this.togglePlay}>\r\n                                <FontAwesomeIcon icon={this.state.isPlaying ? faPause : faPlay} />\r\n                            </div>\r\n                        </div>\r\n                        <ComposerCanvas\r\n                            key={this.state.settings.columnsPerCanvas.value}\r\n                            functions={canvasFunctions}\r\n                            data={canvasData}\r\n                        />\r\n                        <div className=\"buttons-composer-wrapper-right\">\r\n\r\n                            <div className=\"tool\" onClick={() => this.addColumns(1, song.selected)}>\r\n                                <img src={addCell} className=\"tool-icon\" alt=\"Add a new cell\" />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.removeColumns(1, song.selected)}>\r\n                                <img src={removeCell} className=\"tool-icon\" alt=\"Remove a cell\" />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.addColumns(this.state.settings.beatMarks.value * 4, \"end\")}>\r\n                                <FontAwesomeIcon icon={faPlus} />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={this.toggleTools}>\r\n                                <FontAwesomeIcon icon={faTools} />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <ComposerKeyboard\r\n                    functions={keyboardFunctions}\r\n                    data={keyboardData}\r\n                />\r\n            </div>\r\n            <Menu\r\n                data={menuData}\r\n                functions={menuFunctions}\r\n            />\r\n            <ComposerTools\r\n                data={toolsData}\r\n                functions={toolsFunctions}\r\n            />\r\n            <div className=\"song-info\">\r\n                <div>\r\n                    {song.name}\r\n                </div>\r\n                <div>\r\n                    {formatMillis(calculateLength(this.state.song, this.state.song.selected))}\r\n                    /\r\n                    {formatMillis(calculateLength(this.state.song, this.state.song.columns.length))}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\nfunction formatMillis(millis) {\r\n    let minutes = Math.floor(millis / 60000);\r\n    let seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return (\r\n        seconds === 60 \r\n        ? (minutes+1) + \":00\" \r\n        : minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds\r\n    )\r\n}\r\nfunction calculateLength(song, end) {\r\n    let columns = song.columns\r\n    let bpmPerMs = Math.floor(60000 / song.bpm)\r\n    let totalLength = 0\r\n    columns.forEach((column, i) => {\r\n        if (i > end) return\r\n        totalLength += bpmPerMs * TempoChangers[column.tempoChanger].changer\r\n    })\r\n    return totalLength\r\n}\r\n\r\nfunction replaceAt(string, index, replacement) {\r\n    if (index >= string.length) {\r\n        return string.valueOf();\r\n    }\r\n\r\n    return string.substring(0, index) + replacement + string.substring(index + 1);\r\n}\r\nexport default Composer\r\n\r\n","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport ZangoDb from \"zangodb\"\r\nimport { FileDownloader, LoggerEvent } from \"./SongUtils\"\r\nimport { asyncConfirm } from \"./AsyncPrompts\"\r\nimport { appName } from \"../appConfig\"\r\nclass ErrorPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.db = new ZangoDb.Db(appName, { songs: [] })\r\n        this.dbCol = {\r\n            songs: this.db.collection(\"songs\")\r\n\r\n        }\r\n        this.state = {\r\n            songs: []\r\n        }\r\n        this.syncSongs()\r\n    }\r\n    syncSongs = async () => {\r\n        let songs = await this.dbCol.songs.find().toArray()\r\n        this.setState({\r\n            songs: songs\r\n        })\r\n    }\r\n    deleteSong = async (name) => {\r\n        if (await asyncConfirm(\"Are you sure you want to delete the song: \" + name)) {\r\n            this.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n        }\r\n\r\n    }\r\n    deleteAllSongs = async () =>{\r\n        if (await asyncConfirm(\"Are you sure you want to delete ALL SONGS?\")) {\r\n            this.dbCol.songs.remove({}, this.syncSongs)\r\n        }\r\n    }\r\n    resetSettings = () => {\r\n        localStorage.removeItem(appName+\"_Composer_Settings\")\r\n        localStorage.removeItem(appName+\"_Main_Settings\")\r\n        new LoggerEvent(\"Success\", \"Settings have been reset\").trigger()\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json, `${song.name}.${appName.toLowerCase()}sheet.json`)\r\n    }\r\n    render() {\r\n        return <div className=\"error-page app\">\r\n            <div className=\"error-text-wrapper\">\r\n                There seems to be an error. <br />\r\n                Here you can download or delete your songs,\r\n                try to find what song caused the error and remove it.\r\n            </div>\r\n            <div className=\"error-buttons-wrapper\">\r\n                <button className=\"genshin-button\" onClick={this.resetSettings}>\r\n                    Reset settings\r\n                </button>\r\n                <button className=\"genshin-button\" onClick={this.deleteAllSongs}>\r\n                    Delete all songs\r\n                </button>\r\n            </div>\r\n            <div className=\"error-songs-wrapper\">\r\n                {this.state.songs.map(song => {\r\n                    return <SongRow\r\n                        data={song}\r\n                        functions={\r\n                            {\r\n                                deleteSong: this.deleteSong,\r\n                                downloadSong: this.downloadSong\r\n                            }\r\n                        }\r\n                    >\r\n\r\n                    </SongRow>\r\n                })}\r\n            </div>\r\n            <button\r\n                className=\"error-go-back genshin-button\"\r\n                onClick={() => this.props.changePage(\"\")}\r\n            >\r\n                Go back to main page\r\n            </button>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction SongRow(props) {\r\n    let data = props.data\r\n    let deleteSong = props.functions.deleteSong\r\n    let downloadSong = props.functions.downloadSong\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\">\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => deleteSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ErrorPage","import React, { Component } from 'react'\r\nimport './Changelog.css'\r\nimport {MdKeyboardReturn } from 'react-icons/md'\r\nclass Changelogpage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return <div className='changelog-page'>\r\n            <div className='changelog-page-title'>\r\n                Changelog\r\n            </div>\r\n            <div \r\n                className='absolute-changelog-btn'\r\n                onClick={() => this.props.changePage(\"\")}\r\n            >\r\n                <MdKeyboardReturn size={25}/>\r\n            </div>\r\n            {changelogs.map(e => <ChangelogRow\r\n                data={e}\r\n                key={e.version}\r\n            />)}\r\n            <div className='changelog-ending'>\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction ChangelogRow(props) {\r\n    const { version, title, changes, date } = props.data\r\n    return <div className='changelog-wrapper'>\r\n\r\n        <div className='changelog-title'>\r\n            <div className='clt-1'>\r\n                {version}\r\n            </div>\r\n            <div className='clt-2'>\r\n                {date}\r\n            </div>\r\n        </div>\r\n        <div className='changelog-list'>\r\n            <div className='cll-1'>\r\n                {title}\r\n            </div>\r\n            <ul>\r\n                {changes.map((e, i) =>\r\n                    <li key={i}>\r\n                        {e.split('$l').map((item, i,arr) => {\r\n                            if(i === 0){\r\n                                return <div key={i}>{item}</div>\r\n                            }\r\n                            return <p key={i} className='cll-new-line'>\r\n                                {item}\r\n                            </p>\r\n                        })}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n\r\n    </div>\r\n}\r\nconst changelogs = [\r\n    {\r\n        version: '2.0',\r\n        title: 'Approaching circles',\r\n        date: '2021 - 28/11',\r\n        changes: [\r\n            `Added Approaching cirlces mode, a new way to learn a song, or a way to challange yourself.\r\n            You can find it in the main page, next to the practice button`,\r\n            `Rewrite of the main page to increase overall performance`,\r\n            `Added changelog page`,\r\n            `Added audio recording feature in main page and composer`,\r\n            `Added tabs autoplay (composer) on pc as a setting`,\r\n            `Added note animations when pressing the note`,\r\n            `Added possibility to change background image from URL`,\r\n            `Updated info page`,\r\n            `In the composer you can now press shift + note name to add a note`,\r\n            `In the composer you can press up/down keys to change layer`,\r\n            `While in the composer on PC, you can now add new notes by simply pressing the PC keyboard while in \"playing\" mode`\r\n        ]\r\n    }, {\r\n        version: '1.7',\r\n        title: 'Zither',\r\n        date: '2021 - 20/10',\r\n        changes: [\r\n            '(For genshin) Added Zither',\r\n            'Added back \"do re mi\" format'\r\n        ]\r\n    }, {\r\n        version: '1.6',\r\n        title: 'Performance tweaks',\r\n        date: '2021 - 17/10',\r\n        changes: [\r\n            'Performance of composer improved by 2x',\r\n            'Added note names for genshin (made it a setting)',\r\n            'Fixed instrument volume bug',\r\n            'Fixed keyboard layout issues',\r\n            'Fixed other small bugs'\r\n        ]\r\n    }, {\r\n        version: '1.5',\r\n        title: 'MIDI import',\r\n        date: '2021 - 14/10',\r\n        changes: [\r\n            `Added to both Sky and Genshin music nightly the MIDI import feature $l\r\n            - Music track selection (select or deselect which tracks to include) $l\r\n            - Instrument track selection (select what instrument to give to each track) $l\r\n            - Track info (get info on how successful your parsing was, accidentals and notes out of range) $l\r\n            - Change note offset (in case that the song is outside of the octaves available) \r\n            `\r\n        ]\r\n    }, {\r\n        version: '1.4',\r\n        title: 'Song library',\r\n        date: '2021 - 28/08',\r\n        changes: [\r\n            'Added song library integration, directly import songs from the app (700+ songs)',\r\n            'Bug fixes'\r\n        ]\r\n    }, {\r\n        version: '1.3',\r\n        title: 'New audio files',\r\n        date: '2021 - 25/08',\r\n        changes: [\r\n            'Changed audio files',\r\n            'Added ocarina',\r\n            'Removed support button in TWA',\r\n            'Bug fixes'\r\n        ]\r\n    }, {\r\n        version: '1.2',\r\n        title: 'Bug fixes and PWA',\r\n        date: '2021 - 18/08',\r\n        changes: [\r\n            \"(For sky) Fixed bug where sheets couldn't be imported in sky studio\",\r\n            'Changed app install to more modern approach with description and images'\r\n        ]\r\n    }, {\r\n        version: '1.1',\r\n        title: 'Sheets compatibility',\r\n        date: '2021 - 07/08',\r\n        changes: [\r\n            '(For sky) Added backwards compatibility for sheets, now sheets made in sky music nightly can be imported into sky music and sky studio (with some losses)',\r\n            'Bug fixes',\r\n            'General improvement in performance'\r\n        ]\r\n    }, {\r\n        version: '1.0',\r\n        title: 'Release',\r\n        date: '2021 - 22/05',\r\n        changes: [\r\n            '3 Instruments composition',\r\n            'Better performance than previous version',\r\n            'Better practice tool',\r\n            'Better interface',\r\n            'Breakpoints for the composer',\r\n            'New features for both composer and main page',\r\n            'Feature rich customisability to make learning and composition easier'\r\n        ]\r\n    }\r\n]\r\n\r\nexport default Changelogpage","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/mainPage/App';\r\nimport Composer from \"./Components/Composer/Composer\"\r\nimport ErrorPage from \"./Components/ErrorPage\"\r\nimport Changelogpage from './Components/ChangelogPage'\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport \"./Components/mainPage/App.css\"\r\nimport { HashRouter, Route, Redirect } from \"react-router-dom\";\r\nimport { LoggerEvent, delayMs } from \"./Components/SongUtils\"\r\nimport { appName, appVersion } from \"./appConfig\"\r\nlet pages = [\"\", \"Composer\", \"ErrorPage\", \"Changelog\"]\r\nlet updateChecked = false\r\nclass Index extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tlet path = window.location.href.split(\"/\")\r\n\t\tpath = path.length === 0 ? \"\" : path = path[path.length - 1]\r\n\t\tif (!pages.includes(path)) path = \"\"\r\n\t\tlet hasVisited = localStorage.getItem(appName + \"_Visited\")\r\n\t\thasVisited = hasVisited === null ? false : Boolean(hasVisited)\r\n\t\tthis.state = {\r\n\t\t\tfloatingMessage: {\r\n\t\t\t\ttimestamp: 0,\r\n\t\t\t\tvisible: false,\r\n\t\t\t\ttext: \"Text\",\r\n\t\t\t\ttitle: \"Title\"\r\n\t\t\t},\r\n\t\t\tupdateChecked: false,\r\n\t\t\thasPersistentStorage: navigator.storage && navigator.storage.persist,\r\n\t\t\tselectedPage: path,\r\n\t\t\thasVisited: hasVisited\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\twindow.addEventListener('logEvent', this.logEvent);\r\n\t\tthis.checkUpdate()\t\r\n\t}\r\n\tchangePage = (page) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedPage: page\r\n\t\t})\r\n\t}\r\n\tcomponentDidCatch() {\r\n\t\tthis.setState({\r\n\t\t\tselectedPage: \"ErrorPage\"\r\n\t\t})\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\twindow.removeEventListener('logEvent', this.logEvent);\r\n\t}\r\n\taskForStorage = async () => {\r\n\t\ttry {\r\n\t\t\tif (navigator.storage && navigator.storage.persist) {\r\n\t\t\t\tlet result = await navigator.storage.persist()\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tnew LoggerEvent(\"Success\", \"Storage permission allowed\").trigger()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnew LoggerEvent(\"Warning\", \"Storage permission refused, if you weren't prompt, your browser denied it for you. Don't worry, it will still work fine\", 6000).trigger()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e)\r\n\t\t\tnew LoggerEvent(\"Error\", \"There was an error with setting up persistent storage\").trigger()\r\n\t\t}\r\n\t\tthis.closeWelcomeScreen()\r\n\t}\r\n\tcloseWelcomeScreen = () => {\r\n\t\tlocalStorage.setItem(appName + \"_Visited\", true)\r\n\t\tthis.setState({\r\n\t\t\thasVisited: true\r\n\t\t})\r\n\t}\r\n\thideMessage = () => {\r\n\t\tlet state = this.state\r\n\t\tstate.floatingMessage.visible = false\r\n\t\tthis.setState({\r\n\t\t\tfloatingMessage: state.floatingMessage\r\n\t\t})\r\n\t}\r\n\tcheckUpdate = async () => {\r\n\t\tawait delayMs(1500) //wait for page to render\r\n\t\tif (updateChecked) return\r\n\t\tlet currentVersion = appVersion\r\n\t\tlet updateMessage =\r\n\t\t\t`   - Added Approaching circles mode, a new way to learn a song\r\n\t\t\t\t- Better performance in the main page\r\n\t\t\t\t- On pc, you can now add notes with your keyboard while playing\r\n\t\t\t\t- Added changelog page\r\n\t\t\t\tMore info in the changelog page (Info tab)`\r\n\t\tlet storedVersion = localStorage.getItem(appName + \"_Version\")\r\n\t\tif (!this.state.hasVisited) {\r\n\t\t\treturn localStorage.setItem(appName + \"_Version\", currentVersion)\r\n\t\t}\r\n\r\n\t\tif (currentVersion !== storedVersion) {\r\n\t\t\tnew LoggerEvent(\"Update V\" + currentVersion, updateMessage, 6000).trigger()\r\n\t\t\tlocalStorage.setItem(appName + \"_Version\", currentVersion)\r\n\t\t}\r\n\t\tupdateChecked = true\r\n\t\tif(!this.state.hasVisited) return\r\n\t\tif (navigator.storage && navigator.storage.persist) {\r\n\t\t\tlet isPersisted = await navigator.storage.persisted()\r\n\t\t\tif (!isPersisted) isPersisted = await navigator.storage.persist()\r\n\t\t\tconsole.log(isPersisted ? \"Storage Persisted\" : \"Storage Not persisted\")\r\n\t\t}\r\n\t}\r\n\r\n\tlogEvent = (error) => {\r\n\t\terror = error.detail\r\n\t\terror.timestamp = new Date().getTime()\r\n\t\tif (typeof error !== \"object\") return\r\n\t\tthis.setState({\r\n\t\t\tfloatingMessage: {\r\n\t\t\t\ttimestamp: error.timestamp,\r\n\t\t\t\tvisible: true,\r\n\t\t\t\ttext: error.text,\r\n\t\t\t\ttitle: error.title\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (this.state.floatingMessage.timestamp !== error.timestamp) return\r\n\t\t\tthis.setState({\r\n\t\t\t\tfloatingMessage: {\r\n\t\t\t\t\ttimestamp: 0,\r\n\t\t\t\t\tvisible: false,\r\n\t\t\t\t\ttext: \"\",\r\n\t\t\t\t\ttitle: \"\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, error.timeout)\r\n\t}\r\n\trender() {\r\n\t\tlet floatingMessage = this.state.floatingMessage\r\n\t\tlet floatingMessageClass = floatingMessage.visible ? \"floating-message floating-message-visible\" : \"floating-message\"\r\n\t\treturn <div className=\"index\">\r\n\t\t\t<div className={floatingMessageClass} onClick={this.hideMessage}>\r\n\t\t\t\t<div className=\"floating-message-title\">\r\n\t\t\t\t\t{floatingMessage.title}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"floating-message-text\">\r\n\t\t\t\t\t{floatingMessage.text}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{!this.state.hasVisited ?\r\n\t\t\t\t<div className=\"welcome-message\">\r\n\t\t\t\t\t<div className='welcome-overflow'>\r\n\t\t\t\t\t\t<div className={\"welcome-message-title\"}>Welcome to {appName} music {appName === \"Sky\" ? \"nightly\" : \"\"}</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tThis is a webapp which is run in your browser, if you currently are on one, please add\r\n\t\t\t\t\t\t\tthe website to the homescreen to have a fullscreen view and a more \"app\" feel.\r\n\t\t\t\t\t\t\t<br /><br />\r\n\t\t\t\t\t\t\t<div className=\"red-text\">WARNING</div>: Clearing your browser cache / storage might also delete your songs, make sure to\r\n\t\t\t\t\t\t\tmake a backup sometimes.\r\n\t\t\t\t\t\t\t<br /><br />\r\n\t\t\t\t\t\t\t{this.state.hasPersistentStorage ?\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"red-text\">WARNING</div>: To prevent your browser from automatically clearing the app storage, click the \"confirm\" button below, if asked,\r\n\t\t\t\t\t\t\t\t\tallow permission to keep the website data (Persistent storage). If it doesn't work, the program will try to request it again at every launch.\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"welcome-message-button-wrapper\">\r\n\t\t\t\t\t\t<button className=\"welcome-message-button\" onClick={this.askForStorage}>\r\n\t\t\t\t\t\t\tConfirm\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> : null\r\n\t\t\t}\r\n\t\t\t<HashRouter>\r\n\t\t\t\t<Redirect to={\"/\" + this.state.selectedPage}></Redirect>\r\n\t\t\t\t{this.state.selectedPage === \"ErrorPage\"\r\n\t\t\t\t\t? <Route exact path={\"/ErrorPage\"}>\r\n\t\t\t\t\t\t<ErrorPage changePage={this.changePage} />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t: <>\r\n\t\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t\t<App changePage={this.changePage} />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route exact path=\"/Composer\">\r\n\t\t\t\t\t\t\t<Composer changePage={this.changePage} />\r\n\t\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t\t<Route exact path=\"/Changelog\">\r\n\t\t\t\t\t\t\t<Changelogpage changePage={this.changePage} />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t</HashRouter>\r\n\t\t</div>\r\n\t}\r\n}\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Index />\r\n\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\nfunction checkIfTWA() {\r\n\tlet isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n\treturn isTwa\r\n}\r\n\r\nfunction setIfInTWA() {\r\n\tif (checkIfTWA()) return console.log('inTWA')\r\n\tlet isTwa = document.referrer.includes('android-app://')\r\n\tsessionStorage.setItem('isTwa', isTwa)\r\n}\r\n\r\nsetIfInTWA()\r\nserviceWorkerRegistration.register();\r\n\r\n\r\n\r\n"],"sourceRoot":""}