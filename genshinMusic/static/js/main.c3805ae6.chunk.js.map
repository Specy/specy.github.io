{"version":3,"sources":["appConfig.js","Components/SongUtils.js","Components/Instrument.js","Components/mainPage/Note.js","Components/mainPage/Keyboard.js","assets/images/mainpage.png","assets/images/composer.png","Components/mainPage/Menu.js","Components/SettingsObj.js","Components/AsyncPrompts.js","assets/icons/rotate.svg","Components/mainPage/App.js","assets/icons/addCell.svg","assets/icons/removeCell.svg","Components/Composer/useDebounce.js","Components/Composer/MidiParser.js","Components/Composer/ComposerTools.js","Components/Composer/ComposerNote.js","Components/Composer/MultiSwitch.js","Components/Composer/ComposerKeyboard.js","Components/Composer/ComposerCache.js","Components/Composer/ComposerCanvas.js","Components/Composer/Menu.js","Components/Composer/Composer.js","Components/ErrorPage.js","serviceWorkerRegistration.js","index.js"],"names":["appName","process","console","log","cssClasses","noteComposer","note","instruments","notesPerColumn","instrumentsData","Lyre","notes","DunDun","Bells","Trumpet","Contrabass","Drum","Flute","Guitar","HandPan","ToyUkulele","Harp","Horn","Piano","Pipa","Kalimba","WinterPiano","Xylophone","Ocarina","layoutData","keyboardLayout","split","mobileLayout","keyboardCodes","keyNames","pitchArr","composerNotePositions","reverse","importNotePositions","skyImages","Recording","init","start","Date","getTime","addNote","index","length","push","this","Song","name","data","version","bpm","pitch","isComposed","isComposedVersion","Object","entries","forEach","entry","LoggerEvent","title","text","timeout","trigger","window","dispatchEvent","event","undefined","CustomEvent","detail","PlayingSong","timestamp","FileDownloader","type","download","file","dataType","encodeURIComponent","el","document","createElement","style","body","appendChild","setAttribute","click","remove","TempoChangers","id","changer","color","ComposedSong","breakpoints","columns","selected","Array","fill","e","column","Column","tempoChanger","ComposerSongDeSerialization","song","obj","columnObj","ColumnNote","ComposerToRecording","recordedSong","bpmPerMs","Math","floor","totalTime","ComposerSongSerialization","columnArr","map","layer","prepareSongDownload","finalSong","JSON","parse","stringify","oldFormatNotes","convertedNotes","noteObj","key","time","l","composedToOldFormat","recordedToOldFormat","pitchLevel","indexOf","songNotes","bitsPerPage","isEncrypted","prepareSongImport","isArray","includes","getSongType","Error","result","filter","self","findIndex","n","genshinLayout","Number","RecordingToComposed","oldSkyToNewFormat","instrument","newSkyFormatToGenshin","bpmToMs","composed","converted","grouped","threshold","row","shift","amount","i","splice","groupByNotes","combinations","columnNote","difference","paddingColumns","finalPadding","col","getPitchChanger","pow","toFixed","NoteData","noteNames","url","buffer","ArrayBuffer","Instrument","instrumentName","getNoteFromCode","code","String","setBuffers","bufferArray","layout","changeVolume","gain","value","load","audioContext","a","createGain","emptyBuffer","createBuffer","sampleRate","requests","Promise","resolve","fetch","then","arrayBuffer","decodeAudioData","catch","all","buffers","instrumentNameTemp","GainNode","instrumentData","keyboard","mobile","Note","props","state","className","clicked","toBeClicked","toBeClickedNext","noteText","isMobile","animation","transition","fadeTime","svgUrl","skyImg","skyText","onPointerDown","preventDefault","clickAction","draggable","alt","src","Component","Keyboard","handleKeyboard","repeat","activeElement","tagName","keyCode","handleClick","handlePlayEvent","setState","playTimestamp","playSong","handlePracticeEvent","practiceSong","loadInstrument","newInstrument","songLength","chunks","chunk","delay","startTime","j","songToPractice","setSlider","size","position","changeSliderPosition","sliderState","functions","changeSliderState","previous","delayMs","playSound","stopSong","indexClicked","isRecording","handleRecording","setTimeout","source","createBufferSource","playbackRate","settings","caveMode","connect","reverbAudioContext","destination","AudioContext","webkitAudioContext","loadReverb","addEventListener","removeEventListener","audioCtx","r","b","impulse_response","convolver","createConvolver","gainNode","keyboardSize","keyboardClass","transform","marginBottom","find","ms","workerTimers","Menu","handleSearchInput","searchInput","clearSearch","searchedSongs","searchStatus","searchSongs","search","trim","encodeURI","json","fetchedSongs","error","toggleMenu","override","newState","open","selectSideMenu","selection","selectedMenu","changeSelectedSongType","selectedSongType","importSong","reader","FileReader","target","addSong","readAsText","downloadSong","_id","songName","song1","toLowerCase","sideClass","handleSettingChange","changePage","songs","composedSongs","searchedSongFunctions","CloseMenu","action","icon","faInfo","faMusic","faCog","faCompactDisc","MenuPanel","visible","onClick","onChange","SongRow","SettingsRow","objKey","update","checkIfTWA","href","rel","placeholder","onInput","faTimes","faSearch","SearchedSong","mainPageImg","faCrosshairs","faDownload","composerImg","marginLeft","Key","children","useState","valueHook","setter","options","checked","onBlur","deleteSong","removeSong","faTrash","MenuItem","play","sessionStorage","getItem","ComposerSettings","settingVesion","songSetting","volume","layer2","layer3","beatMarks","columnsPerCanvas","autosave","MainPageSettings","asyncPrompt","question","container","innerText","input","cancel","ok","append","classList","add","asyncConfirm","background","App","resetDrag","isDragging","handleDragOver","handleDrag","handleDrop","from","dataTransfer","files","getSettings","storedSettings","localStorage","updateSettings","setItem","setting","syncSongs","dbCol","toArray","keyboardData","oldState","practicingSong","thereIsSong","songExists","findOne","insert","recording","handleSliderEvent","playingSong","lastPlayedSong","askForSongName","promptString","toggleRecord","eventData","db","ZangoDb","Db","collection","keyboardFunctions","menuFunctions","menuData","rotateImg","faStop","min","max","faSyncAlt","GenshinButton","active","isTwa","referrer","setIfInTWA","useDebounce","debouncedValue","setDebouncedValue","useEffect","handler","clearTimeout","Track","editTrack","dataShown","setDataShown","textAlign","family","cursor","display","numberOfAccidentals","numberOfOutOfRange","MidiImport","fileName","midi","offset","accidentals","outOfRange","totalNotes","includeAccidentals","handleFile","Midi","header","tempos","keySignatures","tracks","track","convertMidi","readAsArrayBuffer","midiNote","convertedNote","isAccidental","convertMidiNote","sort","groupedNotes","previousTime","elapsedTime","emptyColumns","noteColumn","number","numberToLayer","groupByIndex","group","final","join","mergeLayers","lastColumn","selectedColumn","loadSong","command","changeOffset","parseInt","isInteger","changePitch","toggleAccidentals","changeBpm","changeMidiVisibility","width","margin","maxWidth","textOverflow","overflow","marginRight","justifyContent","NumberInput","changeValue","step","backgroundColor","elementValue","setElementValue","debounced","ComposerTools","toggleTools","disabled","copiedColumns","currentTarget","blur","copyColumns","pasteColumns","eraseColumns","deleteColumns","ComposerNote","next","prev","layers","MultiSwitch","selectedColor","buttonsClass","onSelect","ComposerKeyboard","notesIndexes","currentColumn","hiddenSideMenu","isPlaying","changeLayer","handleTempoChanger","toString","noteData","horizontalLineBreak","standards","ComposerCache","height","timelineHeight","generate","canvas","drawColumn","cache","toDataURL","standardColumn","standard","standardLarger","roundNess","noteWidth","noteHeight","ctx","getContext","fillStyle","roundRect","strokeStyle","lineWidth","beginPath","ballHeight","arc","PI","columnsLarger","breakpoint","moveTo","lineTo","notesFigures","app","PIXI","borderWidth","fillRect","stroke","y","x","radius","tl","tr","br","bl","defaultRadius","side","quadraticCurveTo","closePath","NumOfColumnsPerCanvas","ComposerCanvas","resetPointerDown","stageSelected","sliderSelected","stagePreviousPositon","handleBreakpoints","handleWheel","deltaY","selectColumn","global","totalWidth","relativePos","handleStageSlide","throttleStage","isMovingLeft","ceil","abs","toAdd","finalPos","direction","v","handleSlide","sizes","getBoundingClientRect","parentWidth","nearestEven","screen","currentBreakpoint","canvasRef","React","createRef","current","_canvas","s","xPos","counter","switcher","counterLimit","relativeColumnWidth","stageSize","stagePos","ref","anchor","interactive","pointerdown","pointermove","pos","currentPos","boundaries","isVisible","tempoChangersCache","standardBg","backgroundCache","isToolsSelected","toolsColumns","isSelected","isBreakpoint","faStepBackward","faStepForward","antialias","autoDensity","pointertap","pointerup","draw","g","clear","beginFill","drawRect","image","lineStyle","drawRoundedRect","toggleBreakpoint","faMinusCircle","faPlusCircle","interactiveChildren","alpha","zIndex","positions","num","round","toggleMenuVisible","updateSong","createNewSong","songFunctions","hasUnsaved","hasChanges","menuClass","menuOpen","currentSong","faSave","volumeHook","setterVolume","sendChangeSelect","onPointerUp","Composer","handleAutoSave","changes","togglePlay","removeColumns","addColumns","layerIndex","replaceAt","currentNote","askForSongUpdate","confirm","songColumns","pastError","msPerBPM","handleTick","newIndex","indexOfBreakpoint","validateBreakpoints","page","ignoreAudio","toolsVisible","copiedColums","copiedColumn","copiedNote","columnIndex","visibility","midiVisible","playbackInterval","location","hostname","returnValue","canvasFunctions","canvasData","toolsData","toolsFunctions","midiParserFunctions","midiParserData","faBars","faChevronRight","faChevronLeft","faPause","faPlay","addCell","removeCell","faPlus","faTools","formatMillis","calculateLength","millis","minutes","seconds","end","totalLength","string","replacement","valueOf","substring","ErrorPage","deleteAllSongs","resetSettings","removeItem","isLocalhost","Boolean","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","pages","Index","selectedPage","askForStorage","storage","persist","closeWelcomeScreen","hasVisited","hideMessage","floatingMessage","checkUpdate","currentVersion","storedVersion","logEvent","path","hasPersistentStorage","floatingMessageClass","to","exact","ReactDOM","render","StrictMode","getElementById","URL","origin","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c3805ae6.chunk.js","sourcesContent":["const appName = process.env.REACT_APP_NAME || [\"Sky\",\"Genshin\"][1]\r\nconsole.log(\"App name:\",appName)\r\nconst cssClasses = {\r\n    noteComposer: appName === \"Genshin\" ? \"note-composer\" : \"note-composer-sky\",\r\n    note: appName === \"Genshin\" ? \"note\" : \"note-sky\"\r\n}\r\nconst instruments = appName === \"Genshin\" ? [\r\n    \"Lyre\",\r\n    \"DunDun\"\r\n    ]:[\r\n        \"Piano\",\r\n        \"Contrabass\",\r\n        \"Guitar\",\r\n        \"Harp\",\r\n        \"Horn\",\r\n        \"Trumpet\",\r\n        \"Pipa\",\r\n        \"WinterPiano\",\r\n        \"Xylophone\",\r\n        \"Flute\",\r\n        \"Ocarina\",\r\n        \"ToyUkulele\",\r\n        \"Drum\",\r\n        \"Bells\",\r\n        \"DunDun\",\r\n        \"HandPan\",\r\n        \"Kalimba\"\r\n    ]\r\nconst notesPerColumn = appName === \"Genshin\" ? 21 : 15\r\nconst instrumentsData = {\r\n    Lyre: {\r\n        notes: 21\r\n    },\r\n    DunDun: {\r\n        notes: 8\r\n    },\r\n    Bells: {\r\n        notes: 8\r\n    },\r\n    Trumpet:{\r\n        notes: 15\r\n    },\r\n    Contrabass: {\r\n        notes: 15\r\n    },\r\n    Drum: {\r\n        notes: 8\r\n    },\r\n    Flute: {\r\n        notes: 15\r\n    },\r\n    Guitar: {\r\n        notes: 15\r\n    },\r\n    HandPan: {\r\n        notes: 8\r\n    },\r\n    ToyUkulele:{\r\n        notes:15\r\n    },\r\n    Harp: {\r\n        notes: 15\r\n    },\r\n    Horn: {\r\n        notes: 15\r\n    },\r\n    Piano: {\r\n        notes: 15\r\n    },\r\n    Pipa: {\r\n        notes: 15\r\n    },\r\n    Kalimba: {\r\n        notes: 15\r\n    },\r\n    WinterPiano: {\r\n        notes: 15\r\n    },\r\n    Xylophone: {\r\n        notes: 15\r\n    },\r\n    Ocarina:{\r\n        notes:15\r\n    }\r\n}\r\n\r\n\r\nconst layoutData = {\r\n    21: {\r\n        keyboardLayout: (\"Q W E R T Y U \" +\r\n            \"A S D F G H J \" +\r\n            \"Z X C V B N M\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa so la ti \" +\r\n            \"do re mi fa so la ti \" +\r\n            \"do re mi fa so la ti\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 84 89 85 \" +\r\n            \"65 83 68 70 71 72 74 \" +\r\n            \"90 88 67 86 66 78 77\").split(\" \")\r\n    },\r\n    8: {\r\n        keyboardLayout: (\"Q W E R \" +\r\n            \"A S D F\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa \" +\r\n            \"do re mi fa\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 \" +\r\n        \"65 83 68 70\").split(\" \")\r\n    },\r\n    15: {\r\n        keyboardLayout: (\"Q W E R T \" +\r\n            \"A S D F G \" +\r\n            \"Z X C V B\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa so \" +\r\n            \"do re mi fa so \" +\r\n            \"do re mi fa so\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 84 \" +\r\n            \"65 83 68 70 71 \" +\r\n            \"90 88 67 86 66\").split(\" \")\r\n    }\r\n}\r\n\r\nconst keyNames = {\r\n    0: [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\"],\r\n    1: [\"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\"],\r\n    2: [\"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\"],\r\n    3: [\"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\"],\r\n    4: [\"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\"],\r\n    5: [\"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\"],\r\n    6: [\"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\"],\r\n    7: [\"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\"],\r\n    8: [\"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\"],\r\n    9: [\"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\"],\r\n    10: [\"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\"],\r\n    11: [\"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\"]\r\n}\r\nconst pitchArr = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"] \r\n\r\nconst composerNotePositions =  appName === \"Genshin\" ? [14, 15, 16, 17, 18, 19, 20, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6].reverse() : [15,16,17,18,19,20,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14].reverse()\r\n\r\nconst importNotePositions = appName === \"Genshin\" ? [14, 15, 16, 17, 18, 19, 20, 7, 8, 9, 10, 11, 12, 13, 0] :  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]\r\n\r\nconst skyImages = {\r\n    15: \"dmcr dm cr dm cr cr dm dmcr dm cr cr dm cr dm dmcr\".split(\" \"),\r\n    8: \"cr dm cr dm cr dm cr dm\".split(\" \"),\r\n    21: \"do re mi fa so la ti do re mi fa so la ti do re mi fa so la ti\".split(\" \")\r\n}\r\nexport {\r\n    instruments,\r\n    instrumentsData,\r\n    composerNotePositions,\r\n    importNotePositions,\r\n    appName,\r\n    layoutData,\r\n    cssClasses,\r\n    notesPerColumn,\r\n    keyNames,\r\n    pitchArr,\r\n    skyImages\r\n}","import { importNotePositions, appName, instruments } from \"../appConfig\"\r\nclass Recording {\r\n  constructor() {\r\n    this.start = new Date().getTime()\r\n    this.notes = []\r\n  }\r\n  init = () => {\r\n    this.start = new Date().getTime() - 100\r\n    console.log(\"Started new recording\")\r\n  }\r\n  addNote = (index) => {\r\n    if (this.notes.length === 0) this.init()\r\n    let currentTime = new Date().getTime()\r\n    let note = [index, currentTime - this.start]\r\n    this.notes.push(note)\r\n  }\r\n}\r\nclass Song {\r\n  constructor(name, notes = [], data = {}) {\r\n    this.name = name\r\n    this.version = 1\r\n    this.notes = notes\r\n    this.bpm = 220\r\n    this.pitch = \"C\"\r\n    this.data = {\r\n      isComposed: false,\r\n      isComposedVersion: false,\r\n      appName: appName\r\n    }\r\n    Object.entries(data).forEach((entry) => {\r\n      this.data[entry[0]] = entry[1]\r\n    })\r\n  }\r\n}\r\nclass LoggerEvent {\r\n  constructor(title, text, timeout) {\r\n    this.title = title\r\n    this.timeout = timeout\r\n    this.text = text\r\n    if (timeout === undefined) this.timeout = 3000\r\n    this.event = new CustomEvent(\"logEvent\", {\r\n      detail: {\r\n        title: this.title,\r\n        text: this.text,\r\n        timeout: this.timeout\r\n      }\r\n    })\r\n  }\r\n  trigger = () => {\r\n    window.dispatchEvent(this.event)\r\n  }\r\n}\r\nclass NoteData {\r\n  constructor(index, noteNames, url) {\r\n    this.index = index\r\n    this.noteNames = noteNames\r\n    this.url = url\r\n    this.buffer = new ArrayBuffer(8)\r\n    this.clicked = false\r\n  }\r\n}\r\nclass PlayingSong {\r\n  constructor(notes) {\r\n    this.timestamp = new Date().getTime()\r\n    this.notes = notes\r\n  }\r\n}\r\nclass FileDownloader {\r\n  constructor(type) {\r\n    if (type === undefined) type = \"text/json\"\r\n    this.dataType = \"data:\" + type + \";charset=utf-8,\"\r\n  }\r\n  download = (file, name) => {\r\n    let data = this.dataType + encodeURIComponent(file)\r\n    var el = document.createElement(\"a\")\r\n    el.style = \"display:none\"\r\n    document.body.appendChild(el)\r\n    el.setAttribute(\"href\", data)\r\n    el.setAttribute(\"download\", name)\r\n    el.click();\r\n    el.remove();\r\n  }\r\n}\r\n\r\nlet TempoChangers = [\r\n  {\r\n    id: 0,\r\n    text: \"1\",\r\n    changer: 1,\r\n    color: 0x515c6f\r\n  }, {\r\n    id: 1,\r\n    text: \"1/2\",\r\n    changer: 1 / 2,\r\n    color: 0x517553\r\n  }, {\r\n    id: 2,\r\n    text: \"1/4\",\r\n    changer: 1 / 4,\r\n    color: 0x434c7d\r\n  }, {\r\n    id: 3,\r\n    text: \"1/8\",\r\n    changer: 1 / 8,\r\n    color: 0x774D6D\r\n  }\r\n]\r\nclass ComposedSong {\r\n  constructor(name, notes = [], data = {}) {\r\n    data.isComposed = true\r\n    data.isComposedVersion = true\r\n    this.version = 1\r\n    this.data = data\r\n    this.name = name\r\n    this.bpm = 220\r\n    this.pitch = \"C\"\r\n    this.notes = notes\r\n    this.instruments = [instruments[0], instruments[0], instruments[0]]\r\n    this.breakpoints = [0]\r\n    this.columns = []\r\n    this.selected = 0\r\n    new Array(100).fill().forEach((e) => {\r\n      let column = new Column()\r\n      column.tempoChanger = 0\r\n      this.columns.push(column)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nfunction ComposerSongDeSerialization(song) {\r\n  let obj = {\r\n    data: song.data,\r\n    name: song.name,\r\n    bpm: song.bpm ?? 220,\r\n    pitch: song.pitch ?? \"C\",\r\n    instruments: song.instruments || [instruments[0], instruments[0], instruments[0]],\r\n    breakpoints: song.breakpoints ?? [],\r\n    notes: [],\r\n    selected: 0,\r\n    columns: []\r\n  }\r\n  song.columns.forEach(column => {\r\n    let columnObj = new Column()\r\n    columnObj.tempoChanger = column[0]\r\n    column[1].forEach(note => {\r\n      columnObj.notes.push(new ColumnNote(note[0], note[1]))\r\n    })\r\n    obj.columns.push(columnObj)\r\n  })\r\n  return obj\r\n}\r\nfunction ComposerToRecording(song) {\r\n  let recordedSong = new Song(song.name)\r\n  let bpmPerMs = Math.floor(60000 / song.bpm)\r\n  let totalTime = 100\r\n  song.columns.forEach(column => {\r\n    column[1].forEach(note => {\r\n      recordedSong.notes.push([note[0], totalTime])\r\n    })\r\n    totalTime += Math.floor(bpmPerMs * TempoChangers[column[0]].changer)\r\n  })\r\n  return recordedSong\r\n}\r\nfunction ComposerSongSerialization(song) {\r\n  let obj = {\r\n    data: song.data,\r\n    name: song.name,\r\n    bpm: song.bpm,\r\n    pitch: song.pitch,\r\n    breakpoints: song.breakpoints,\r\n    instruments: song.instruments,\r\n    columns: []\r\n  }\r\n  obj.data.appName = appName\r\n  /*\r\n      notes = [tempoChanger,notes] ----> note = [index,layer]\r\n      tempoChanger = Number\r\n  */\r\n  song.columns.forEach(column => {\r\n    let columnArr = [column.tempoChanger]\r\n    let notes = column.notes.map(note => {\r\n      return [note.index, note.layer]\r\n    })\r\n    columnArr[1] = notes\r\n    obj.columns.push(columnArr)\r\n  })\r\n  return obj\r\n}\r\nfunction prepareSongDownload(song){\r\n  let finalSong = JSON.parse(JSON.stringify(song)) //lose reference\r\n  let oldFormatNotes = {}\r\n  if(finalSong.data?.isComposedVersion){\r\n    oldFormatNotes = composedToOldFormat(finalSong)\r\n  }else{\r\n    oldFormatNotes = recordedToOldFormat(finalSong)\r\n  }\r\n  finalSong.isComposed = finalSong.data.isComposedVersion\r\n  finalSong.pitchLevel = pitchArr.indexOf(finalSong.pitch)\r\n  finalSong.songNotes = oldFormatNotes\r\n  finalSong.bitsPerPage = 16\r\n  finalSong.isEncrypted = false\r\n  return [finalSong] //for compatibility, add back to an array, it will be ignored when importing\r\n  //from this app\r\n}\r\n\r\nfunction prepareSongImport(song){\r\n  //TODO add multi songs in the same file\r\n  if (Array.isArray(song) && song.length > 0) song = song[0]\r\n  let type = getSongType(song)\r\n  if (type === \"none\") {\r\n      new LoggerEvent(\"Error\", \"Invalid song\").trigger()\r\n      throw new Error(\"Error Invalid song\")\r\n  }\r\n  if (type === \"oldSky\") {\r\n      song = oldSkyToNewFormat(song)\r\n  }\r\n  if(appName === 'Sky' && song.data?.appName !== 'Sky'){\r\n      new LoggerEvent(\"Error\", \"Invalid song\").trigger()\r\n      throw new Error(\"Error Invalid song\")\r\n  }\r\n  if(appName === 'Genshin' && song.data?.appName === 'Sky'){\r\n      song = newSkyFormatToGenshin(song)\r\n  }\r\n  return song\r\n}\r\n\r\nfunction composedToOldFormat(song){\r\n  let convertedNotes = []\r\n  let bpmPerMs = Math.floor(60000 / song.bpm)\r\n  let totalTime = 100\r\n  song.columns.forEach(column => {\r\n    column[1].forEach(note => {\r\n      let layer = 1\r\n      if(note[1] === '111') layer = 3\r\n      if(note[1] === '011') layer = 2\r\n      if(note[1] === '101') layer = 3\r\n      if(note[1] === '001') layer = 2\r\n      if(note[1] === '110') layer = 3\r\n      if(note[1] === '010') layer = 2\r\n      if(note[1] === '100') layer = 1\r\n      let noteObj = {\r\n        key:(layer > 2 ? 2 : layer)+'Key'+note[0],\r\n        time:totalTime\r\n      }\r\n      if(layer > 2) noteObj.l = 3\r\n      convertedNotes.push(noteObj)\r\n    })\r\n    totalTime += Math.floor(bpmPerMs * TempoChangers[column[0]].changer)\r\n  })\r\n  return convertedNotes\r\n}\r\n\r\nfunction recordedToOldFormat(song){\r\n  let convertedNotes = []\r\n  song.notes.forEach(note =>{\r\n    convertedNotes.push({\r\n      time: note[1],\r\n      key: \"1Key\"+note[0]\r\n    })\r\n  })\r\n  return convertedNotes\r\n}\r\nfunction getSongType(song) {\r\n  try {\r\n    if (song.data === undefined) {\r\n      //oldSky format\r\n      if(song.songNotes !== undefined && song.pitchLevel !== undefined){\r\n        return \"oldSky\"\r\n      }\r\n    } else {\r\n      //current format\r\n      if (song.data.isComposedVersion) {\r\n        if (typeof song.name !== \"string\") return \"none\"\r\n        if (typeof song.bpm !== \"number\") return \"none\"\r\n        if (!pitchArr.includes(song.pitch)) return \"none\"\r\n        if (Array.isArray(song.breakpoints)) {\r\n          if (song.breakpoints.length > 0) {\r\n            if (typeof song.breakpoints[0] !== \"number\") return \"none\"\r\n          }\r\n        } else {\r\n          return \"none\"\r\n        }\r\n        if (Array.isArray(song.columns)) {\r\n          if (song.columns.length > 0) {\r\n            let column = song.columns[0]\r\n            if (typeof column[0] !== \"number\") return \"none\"\r\n          }\r\n        } else {\r\n          return \"none\"\r\n        }\r\n        return \"newComposed\"\r\n      } else {\r\n        if (typeof song.name !== \"string\") return \"none\"\r\n        if (typeof song.bpm !== \"number\") return \"none\"\r\n        if (!pitchArr.includes(song.pitch)) return \"none\"\r\n        return \"newRecorded\"\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e)\r\n    return \"none\"\r\n  }\r\n  return \"none\"\r\n}\r\nlet genshinLayout = importNotePositions\r\n\r\nfunction newSkyFormatToGenshin(song){\r\n  if(song.data.isComposedVersion){\r\n    song.instruments = song.instruments.map(instrument => 'Lyre')\r\n    song.columns.forEach(column =>{\r\n      column[1] = column[1].map(note => {\r\n        return [genshinLayout[note[0]] , note[1]]\r\n      })\r\n\r\n    })\r\n  }\r\n  if(!song.data.isComposedVersion){\r\n    song.notes = song.notes.map(note => {\r\n      note[0] = genshinLayout[note[0]]\r\n      return note\r\n    })\r\n  }\r\n  return song\r\n}\r\n\r\nfunction oldSkyToNewFormat(song) {\r\n  let result = new Song(\"Error\")\r\n  try {\r\n    result = new Song(song.name)\r\n    result.bpm = song.bpm || 220\r\n    result.pitch = (pitchArr[song.pitchLevel || 0]) || \"C\"\r\n    //remove duplicate notes\r\n    song.songNotes = song.songNotes.filter((note, index, self) =>\r\n      index === self.findIndex((n) => {\r\n        return n.key.split('Key')[1] === note.key.split('Key')[1] && n.time === note.time\r\n      })\r\n    )\r\n    let songNotes = song.songNotes\r\n    songNotes.forEach(note => {\r\n      let data = note.key.split(\"Key\")\r\n      result.notes.push([genshinLayout[data[1]], note.time, note.l ?? Number(data[0])])\r\n    })\r\n\r\n    if ([true, \"true\"].includes(song.isComposed)) {\r\n      result = ComposerSongSerialization(RecordingToComposed(result))\r\n    } else {\r\n      result.notes = result.notes.map(e => [e[0], e[1]])\r\n    }\r\n\r\n\r\n  } catch (e) {\r\n    console.log(e)\r\n    return new Song(\"Error importing\")\r\n  }\r\n  return result\r\n}\r\nfunction RecordingToComposed(song) {\r\n  let bpmToMs = Math.floor(60000 / song.bpm)\r\n  let composed = new ComposedSong(song.name, [])\r\n  composed.bpm = song.bpm\r\n  composed.pitch = song.pitch\r\n  let notes = song.notes\r\n  //remove duplicates\r\n\r\n  let converted = []\r\n  let grouped = groupByNotes(notes, bpmToMs / 9)\r\n  let combinations = [bpmToMs, Math.floor(bpmToMs / 2), Math.floor(bpmToMs / 4), Math.floor(bpmToMs / 8)]\r\n  for (let i = 0; i < grouped.length; i++) {\r\n    let column = new Column()\r\n    column.notes = grouped[i].map(note => {\r\n      let columnNote = new ColumnNote(note[0])\r\n      if (note[2] === 0) columnNote.layer = \"100\"\r\n      if (note[2] === 1) columnNote.layer = \"100\"\r\n      if (note[2] === 2) columnNote.layer = \"010\"\r\n      if (note[2] === 3) columnNote.layer = \"110\"\r\n      if (note[2] === undefined) columnNote.layer = \"100\"\r\n      return columnNote\r\n    })\r\n    let next = grouped[i + 1] || [[0, 0, 0]]\r\n    let difference = next[0][1] - grouped[i][0][1]\r\n    let paddingColumns = []\r\n    while (difference >= combinations[3]) {\r\n      if (difference / combinations[0] >= 1) {\r\n        difference -= combinations[0]\r\n        paddingColumns.push(0)\r\n      } else if (difference / combinations[1] >= 1) {\r\n        difference -= combinations[1]\r\n        paddingColumns.push(1)\r\n      } else if (difference / combinations[2] >= 1) {\r\n        difference -= combinations[2]\r\n        paddingColumns.push(2)\r\n      } else if (difference / combinations[3] >= 1) {\r\n        difference -= combinations[3]\r\n        paddingColumns.push(3)\r\n      }\r\n    }\r\n    let finalPadding = []\r\n    column.tempoChanger = paddingColumns.shift() || 0\r\n    paddingColumns = paddingColumns.forEach((col, i) => {\r\n      let column = new Column()\r\n      column.tempoChanger = col\r\n      finalPadding.push(column)\r\n    })\r\n    converted.push(column, ...finalPadding)\r\n  }\r\n  composed.columns = converted\r\n  return composed\r\n}\r\nclass Column {\r\n  constructor() {\r\n    this.notes = []\r\n    this.tempoChanger = 0\r\n\r\n  }\r\n}\r\nfunction groupByNotes(notes, threshold) {\r\n  let result = []\r\n  while (notes.length > 0) {\r\n    let row = [notes.shift()]\r\n    let amount = 0\r\n    for (let i = 0; i < notes.length; i++) {\r\n      if (row[0][1] > notes[i][1] - threshold) amount++\r\n    }\r\n    result.push([...row, ...notes.splice(0, amount)])\r\n  }\r\n  return result\r\n}\r\nclass ColumnNote {\r\n  constructor(index, layer = \"000\") {\r\n    this.index = index\r\n    this.layer = layer\r\n  }\r\n}\r\nlet pitchArr = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"]\r\nfunction getPitchChanger(pitch) {\r\n  let index = pitchArr.indexOf(pitch)\r\n  if (index < 0) index = 0\r\n  return Number(Math.pow(2, index / 12).toFixed(4))\r\n}\r\nfunction numberToLayer(number){\r\n  let layer = \"100\"\r\n  if (number === 0) layer = \"100\"\r\n  if (number === 1) layer = \"010\"\r\n  if (number === 2) layer = \"001\"\r\n  return layer\r\n}\r\nfunction mergeLayers(notes){\r\n  let final = \"000\".split(\"\")\r\n  notes.forEach(notes => {\r\n    notes.layer.split(\"\").forEach((e, i) => {\r\n      if(e === \"1\") final[i] = \"1\"\r\n    })\r\n  })\r\n  return final.join(\"\")\r\n}\r\nfunction groupByIndex(column){\r\n  let notes = []\r\n  column.notes.forEach(note => {\r\n      if(notes[note.index]){\r\n          notes[note.index].push(note)\r\n      }else{\r\n          notes[note.index] = [note]\r\n      }\r\n  })\r\n  return notes.filter(e => Array.isArray(e))\r\n}\r\n\r\nexport {\r\n  Recording,\r\n  Song,\r\n  NoteData,\r\n  FileDownloader,\r\n  LoggerEvent,\r\n  PlayingSong,\r\n  ComposedSong,\r\n  ColumnNote,\r\n  Column,\r\n  TempoChangers,\r\n  ComposerSongSerialization,\r\n  ComposerSongDeSerialization,\r\n  ComposerToRecording,\r\n  getPitchChanger,\r\n  getSongType,\r\n  oldSkyToNewFormat,\r\n  RecordingToComposed,\r\n  prepareSongDownload,\r\n  newSkyFormatToGenshin,\r\n  prepareSongImport,\r\n  pitchArr,\r\n  groupByNotes,\r\n  numberToLayer,\r\n  mergeLayers,\r\n  groupByIndex\r\n}","import { instrumentsData, layoutData, instruments } from \"../appConfig\"\r\nclass Instrument {\r\n    constructor(instrumentName) {\r\n        this.instrumentName = instrumentName\r\n        let instrumentNameTemp = instrumentName === undefined ? instruments[0] : instrumentName\r\n        this.layout = []\r\n        this.gain = GainNode\r\n        let instrumentData = instrumentsData[instrumentNameTemp]\r\n        this.keyboardLayout = layoutData[instrumentData.notes].keyboardLayout\r\n\r\n        this.mobileLayout = layoutData[instrumentData.notes].mobileLayout\r\n        this.keyboardCodes = layoutData[instrumentData.notes].keyboardCodes\r\n        let i = 0\r\n        if (instrumentName === undefined) return\r\n        for (const noteName of this.keyboardLayout) {\r\n            let noteNames = {\r\n                keyboard: noteName,\r\n                mobile: this.mobileLayout[i]\r\n            }\r\n            let url = `./assets/audio/${instrumentName}/${i}.mp3`\r\n            let note = new NoteData(i, noteNames, url)\r\n            this.layout.push(note)\r\n            i++\r\n        }\r\n\r\n    }\r\n    getNoteFromCode = (code) => {\r\n        let index = this.keyboardCodes.findIndex(e => e === String(code))\r\n        return index !== -1 ? index : null\r\n    }\r\n    setBuffers = (bufferArray) => {\r\n        bufferArray.forEach((buffer, i) => {\r\n            this.layout[i].buffer = buffer\r\n        })\r\n    }\r\n    changeVolume = (amount) => {\r\n        this.gain.gain.value = amount / 100\r\n    }\r\n    load = async (audioContext) => {\r\n        this.gain = audioContext.createGain()\r\n        this.gain.gain.value = 1\r\n        let emptyBuffer = audioContext.createBuffer(2, audioContext.sampleRate, audioContext.sampleRate)\r\n        //thanks safari, i have to do this ugly thing\r\n        const requests = this.layout.map(e => {\r\n            return new Promise(resolve => {\r\n                fetch(e.url)\r\n                    .then(result => result.arrayBuffer())\r\n                    .then(buffer => {\r\n                        audioContext.decodeAudioData(buffer, resolve, () => {\r\n                            resolve(emptyBuffer)\r\n                        })\r\n                            .catch(e => {\r\n                                resolve(emptyBuffer)\r\n                            })\r\n                    }).catch(e => {\r\n                        resolve(emptyBuffer)\r\n                    })\r\n            })\r\n        })\r\n        let buffers = await Promise.all(requests)\r\n        this.setBuffers(buffers)\r\n        return true\r\n    }\r\n}\r\n\r\n\r\n\r\nclass NoteData {\r\n    constructor(index, noteNames, url) {\r\n        this.index = index\r\n        this.noteNames = noteNames\r\n        this.url = url\r\n        this.buffer = new ArrayBuffer(8)\r\n    }\r\n}\r\nexport default Instrument\r\n","import React, { Component } from 'react'\r\nimport isMobile from \"is-mobile\"\r\nimport { cssClasses, appName} from \"../../appConfig\"\r\n\r\nclass Note extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        const { props } = this\r\n        let data = props.data\r\n        let className = data.clicked ? (cssClasses.note + \" click-event\") : cssClasses.note\r\n        let toBeClicked = props.toBeClicked ? \" note-red\" : \"\"\r\n        let toBeClickedNext = props.toBeClickedNext ? \" note-border-click\" : \"\"\r\n        className += toBeClicked + toBeClickedNext\r\n        let noteText = isMobile() ? data.noteNames.mobile : data.noteNames.keyboard\r\n        let animation = { transition: `all ${props.fadeTime}s` }\r\n        let svgUrl = `./assets/icons/keys/${data.noteNames.mobile}.svg`\r\n        if(appName === \"Sky\") svgUrl = `./assets/icons/keys/${props.skyImg}.svg`\r\n        if(appName === \"Sky\") noteText = props.skyText\r\n        return <button\r\n            onPointerDown={(e) => {\r\n                e.preventDefault()\r\n                props.clickAction(data)\r\n            }}\r\n            className=\"button-hitbox\"\r\n\r\n        >\r\n            <div className={className} style={animation}>\r\n                <img\r\n                    draggable=\"false\"\r\n                    alt={data.noteNames.mobile}\r\n                    src={svgUrl}>\r\n\r\n                </img>\r\n                <div className={appName === \"Sky\" ? \"note-name-sky\" : \"note-name\"}>\r\n                    {noteText}\r\n                </div>\r\n            </div>\r\n        </button>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Note","import React, { Component } from 'react'\r\nimport \"./Keyboard.css\"\r\nimport { getPitchChanger } from \"../SongUtils\"\r\nimport Instrument from \"../Instrument\"\r\nimport Note from \"./Note\"\r\nimport * as workerTimers from 'worker-timers';\r\nimport { keyNames, pitchArr , skyImages} from \"../../appConfig\"\r\nclass Keyboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            instrument: new Instrument(),\r\n            audioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            reverbAudioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            playTimestamp: new Date().getTime(),\r\n            songToPractice: [],\r\n            sliderState: {\r\n                position: 0,\r\n                size: 0\r\n            }\r\n        }\r\n        console.log(\"created\")\r\n        this.loadInstrument(props.data.instrument)\r\n        try {\r\n            this.loadReverb()\r\n        } catch(e) {\r\n            console.log(\"Error with reverb0\",e)\r\n        }\r\n    }\r\n    handleKeyboard = (event) => {\r\n        if(event.repeat) return\r\n        if (document.activeElement.tagName === \"INPUT\") return\r\n        let index = this.state.instrument.getNoteFromCode(event.keyCode)\r\n        let note\r\n        if (index !== null) {\r\n            note = this.state.instrument.layout[index]\r\n        }\r\n        if (note !== undefined) {\r\n            this.handleClick(note)\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyboard)\r\n        window.addEventListener(\"playSong\", this.handlePlayEvent)\r\n        window.addEventListener(\"practiceSong\", this.handlePracticeEvent)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyboard);\r\n        window.removeEventListener(\"playSong\", this.handlePlayEvent)\r\n        window.removeEventListener(\"practiceSong\", this.handlePracticeEvent)\r\n        let state = this.state\r\n        state.playTimestamp = new Date().getTime()\r\n    }\r\n    loadReverb() {\r\n        let audioCtx = this.state.audioContext\r\n        fetch(\"./assets/audio/reverb4.wav\")\r\n            .then(r => r.arrayBuffer())\r\n            .then(b => {\r\n                audioCtx.decodeAudioData(b, (impulse_response) => {\r\n                    let convolver = audioCtx.createConvolver()\r\n                    let gainNode = audioCtx.createGain()\r\n                    gainNode.gain.value = 2.5\r\n                    convolver.buffer = impulse_response\r\n                    convolver.connect(gainNode)\r\n                    gainNode.connect(audioCtx.destination)\r\n                    this.setState({\r\n                        reverbAudioContext: convolver\r\n                    })\r\n                })\r\n            }).catch((e) => { \r\n                console.log(\"Error with reverb1\",e)\r\n            })\r\n    }\r\n    handlePlayEvent = (event) => {\r\n        let data = event.detail\r\n        this.setState({\r\n            playTimestamp: data.timestamp\r\n        }, () => this.playSong(data))\r\n    }\r\n    handlePracticeEvent = (event) => {\r\n        let data = event.detail\r\n        this.practiceSong(JSON.parse(JSON.stringify(data)))\r\n    }\r\n    loadInstrument = async (name) => {\r\n        let newInstrument = new Instrument(name)\r\n        await newInstrument.load(this.state.audioContext)\r\n\r\n        this.setState({\r\n            instrument: newInstrument\r\n        })\r\n\r\n    }\r\n    practiceSong = (song) => {\r\n        let notes = song.notes\r\n        let songLength = notes.length\r\n        if (song.start === undefined) song.start = 0\r\n        notes.splice(0, song.start)\r\n        let chunks = []\r\n        for (let i = 0; notes.length > 0; i++) {\r\n            let chunk = {\r\n                notes: [notes.shift()],\r\n                delay: 0\r\n            }\r\n            let startTime = chunk.notes.length > 0 ? chunk.notes[0][1] : 0\r\n            for (let j = 0; j < notes.length && j < 20; j++) {\r\n                let difference = notes[j][1] - chunk.notes[0][1] - song.threshold\r\n                if (difference < 0) {\r\n                    chunk.notes.push(notes.shift())\r\n                    j--\r\n                }\r\n            }\r\n            chunk.delay = notes.length > 0 ? notes[0][1] - startTime : 0\r\n            chunks.push(chunk)\r\n        }\r\n        this.setState({\r\n            songToPractice: chunks\r\n        })\r\n        this.setSlider({\r\n            size: songLength,\r\n            position: song.start\r\n        })\r\n    }\r\n    changeSliderPosition = (position) => {\r\n        let sliderState = this.state.sliderState\r\n        sliderState.position += position\r\n        this.setState({\r\n            sliderState: sliderState\r\n        }, () => this.props.functions.changeSliderState(this.state.sliderState))\r\n    }\r\n    setSlider = (state) => {\r\n        this.setState({\r\n            sliderState: state\r\n        }, this.props.functions.changeSliderState(state))\r\n    }\r\n    playSong = async (song) => {\r\n        let notes = song.notes\r\n        let previous = 0\r\n        this.setSlider({\r\n            size: notes.length,\r\n            position: 0\r\n        })\r\n        if (notes.length === 0) return\r\n        for (let i = 0; i < notes.length; i++) {\r\n            let delay = notes[i][1] - previous\r\n            previous = notes[i][1]\r\n            let note = notes[i][0]\r\n            if (this.state.playTimestamp !== song.timestamp) break\r\n            if (delay > 10) await delayMs(delay)\r\n            this.changeSliderPosition(1)\r\n            this.playSound(this.state.instrument.layout[note])\r\n        }\r\n        this.props.functions.stopSong()\r\n    }\r\n    handleClick = (note) => {\r\n        let practiceSong = this.state.songToPractice\r\n        if (practiceSong.length > 0) {\r\n            let indexClicked = practiceSong[0]?.notes.findIndex(e => e[0] === note.index)\r\n            if (indexClicked !== -1) {\r\n                practiceSong[0].notes.splice(indexClicked, 1)\r\n                if (practiceSong[0].notes.length === 0) practiceSong.shift()\r\n                if (practiceSong.length === 0) this.props.functions.stopSong()\r\n                this.setState({\r\n                    songToPractice: practiceSong\r\n                }, () => this.changeSliderPosition(1))\r\n            }\r\n        }\r\n\r\n        this.playSound(note)\r\n\r\n    }\r\n    playSound = (note) => {\r\n        if(note === undefined) return\r\n        if (this.props.isRecording) this.props.functions.handleRecording(note)\r\n        note.clicked = true\r\n        setTimeout(() => {\r\n            note.clicked = false\r\n            this.setState({\r\n                instrument: this.state.instrument\r\n            })\r\n        }, 200)\r\n        const source = this.state.audioContext.createBufferSource()\r\n        source.playbackRate.value = getPitchChanger(this.props.settings.pitch.value)\r\n        source.buffer = note.buffer\r\n        if (this.props.settings.caveMode.value) {\r\n            source.connect(this.state.reverbAudioContext)\r\n        } else {\r\n            source.connect(this.state.audioContext.destination)\r\n        }\r\n        source.start(0)\r\n        this.setState({\r\n            instrument: this.state.instrument\r\n        })\r\n    }\r\n    render() {\r\n        let state = this.state\r\n        let size = this.props.settings.keyboardSize.value / 100\r\n        if (size < 0.5) size = 0.5\r\n        if (size > 1.5) size = 1.5\r\n        let keyboardClass = \"keyboard\"\r\n        if (state.instrument.layout.length === 15) keyboardClass += \" keyboard-5\"\r\n        if (state.instrument.layout.length === 8) keyboardClass += \" keyboard-4\"\r\n        return <div \r\n                    className={keyboardClass} \r\n                    style={{ \r\n                        transform: `scale(${size})`,\r\n                        marginBottom:size * 30\r\n                    }}\r\n                >\r\n             {state.instrument.layout.length === 0 ? <div className=\"loading\">Loading...</div> : null}\r\n            {state.instrument.layout.map(note => {\r\n                let toBeClicked = state.songToPractice[0]?.notes.find(e => e[0] === note.index) !== undefined\r\n                let toBeClickedNext = state.songToPractice[1]?.notes.find(e => e[0] === note.index) !== undefined\r\n                let fadeTime = state.songToPractice[0]?.delay !== undefined ? state.songToPractice[0]?.delay / 1000 : 0.1\r\n                let skyText = \"\"\r\n                let skyImg = \"\"\r\n                try{\r\n                    skyText = keyNames[pitchArr.indexOf(this.props.settings.pitch.value)][note.index]\r\n                    skyImg = skyImages[state.instrument.layout.length][note.index]\r\n                }catch(e){}\r\n\r\n                return <Note\r\n                    key={note.index}\r\n                    toBeClicked={toBeClicked}\r\n                    fadeTime={fadeTime}\r\n                    toBeClickedNext={toBeClickedNext}\r\n                    data={note}\r\n                    skyText={skyText}\r\n                    skyImg={skyImg}\r\n                    clickAction={this.handleClick}\r\n                >\r\n\r\n                </Note>\r\n            })}\r\n        </div>\r\n    }\r\n}\r\nfunction delayMs(ms) {\r\n    return new Promise(resolve => {\r\n        workerTimers.setTimeout(resolve, ms)\r\n    })\r\n}\r\nexport default Keyboard\r\n","export default __webpack_public_path__ + \"static/media/mainpage.114ce51f.png\";","export default __webpack_public_path__ + \"static/media/composer.76adcf72.png\";","import React, { Component, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMusic, faTimes, faCog, faTrash, faCrosshairs, faDownload, faInfo, faCompactDisc, faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { FaDiscord, FaGithub} from 'react-icons/fa';\r\nimport { RiPlayListFill } from 'react-icons/ri'\r\nimport \"./menu.css\"\r\nimport mainPageImg from '../../assets/images/mainpage.png'\r\nimport composerImg from '../../assets/images/composer.png'\r\nimport { FileDownloader, LoggerEvent, prepareSongImport, prepareSongDownload} from \"../SongUtils\"\r\nimport { FilePicker } from \"react-file-picker\"\r\nimport { appName } from \"../../appConfig\"\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            selectedMenu: \"Songs\",\r\n            selectedSongType: \"recorded\",\r\n            searchInput:'',\r\n            searchedSongs:[],\r\n            searchStatus: 'Write a song name then search!'\r\n        }\r\n    }\r\n    handleSearchInput = (text) =>{\r\n        this.setState({\r\n            searchInput: text\r\n        })\r\n    }\r\n    clearSearch = () =>{\r\n        this.setState({\r\n            searchInput: '',\r\n            searchedSongs:[],\r\n            searchStatus: 'Write a song name then search!'\r\n        })\r\n        this.props.functions.stopSong()\r\n    }\r\n    searchSongs = async () =>{\r\n        let search = this.state.searchInput\r\n        if(search.trim().length === 0){\r\n            return this.setState({\r\n                searchStatus: 'Please write a non empty name'\r\n            })\r\n        }\r\n        this.setState({\r\n            searchStatus: 'Searching...'\r\n        })\r\n        let fetchedSongs = await fetch('https://sky-music.herokuapp.com/api/songs?search='+encodeURI(search)).then(data => data.json())\r\n        if(fetchedSongs.error){\r\n            this.setState({\r\n                searchStatus: 'Please write a non empty name'\r\n            })\r\n            return new LoggerEvent(\"Error\", fetchedSongs.error).trigger()\r\n        }\r\n        this.setState({\r\n            searchedSongs: fetchedSongs,\r\n            searchStatus: 'success'\r\n        })\r\n    }\r\n    toggleMenu = (override) => {\r\n        if (typeof override !== \"boolean\") override = undefined\r\n        let newState = override !== undefined ? override : !this.state.open\r\n        this.setState({\r\n            open: newState,\r\n        })\r\n    }\r\n    selectSideMenu = (selection) => {\r\n        if (selection === this.state.selectedMenu && this.state.open) {\r\n            return this.setState({\r\n                open: false,\r\n            })\r\n        }\r\n        this.setState({\r\n            selectedMenu: selection,\r\n            open: true\r\n        })\r\n    }\r\n    changeSelectedSongType = (name) => {\r\n        this.setState({\r\n            selectedSongType: name\r\n        })\r\n    }\r\n    importSong = (file) => {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', (event) => {\r\n            try {\r\n                let song = JSON.parse(event.target.result)\r\n                song = prepareSongImport(song)\r\n                this.props.functions.addSong(song)\r\n            } catch (e) {\r\n                new LoggerEvent(\"Error\", \"Error importing song\").trigger()\r\n                console.error(e)\r\n            }\r\n\r\n        });\r\n        reader.readAsText(file)\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        let songName = song.name\r\n        if(appName === \"Sky\"){\r\n            //adds old format into the sheet\r\n            song = prepareSongDownload(song)\r\n        }\r\n        if(!Array.isArray(song)) song = [song]\r\n        song.forEach(song1 => {\r\n            song1.data.appName = appName\r\n        })\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json,`${songName}.${appName.toLowerCase()}sheet.json`)\r\n        new LoggerEvent(\"Success\", \"Song downloaded\").trigger()\r\n    }\r\n    render() {\r\n        let sideClass = this.state.open ? \"side-menu menu-open\" : \"side-menu\"\r\n        const { data, functions } = this.props\r\n        const { handleSettingChange } = functions\r\n        functions.toggleMenu = this.toggleMenu\r\n        functions.downloadSong = this.downloadSong\r\n        let changePage = this.props.functions.changePage\r\n        let songs = data.songs.filter(song => !song.data.isComposedVersion)\r\n        let composedSongs = data.songs.filter(song => song.data.isComposedVersion)\r\n        const { searchStatus , searchedSongs, selectedMenu } = this.state\r\n        let searchedSongFunctions = {\r\n            playSong: functions.playSong,\r\n            importSong: functions.addSong,\r\n        }\r\n        return <div className=\"menu-wrapper\">\r\n            <div className=\"menu menu-visible\">\r\n                {this.state.open && <CloseMenu action={this.toggleMenu} />}\r\n                <MenuItem type=\"Help\" action={this.selectSideMenu} className=\"margin-top-auto\">\r\n                    <FontAwesomeIcon icon={faInfo} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Library\" action={this.selectSideMenu}>\r\n                    <RiPlayListFill className='icon'/>\r\n                </MenuItem>\r\n                <MenuItem type=\"Songs\" action={this.selectSideMenu} >\r\n                    <FontAwesomeIcon icon={faMusic} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Settings\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faCog} className=\"icon\" />\r\n                </MenuItem>\r\n\r\n                <MenuItem type=\"Composer\" action={() => changePage(\"Composer\")}>\r\n                    <FontAwesomeIcon icon={faCompactDisc} className=\"icon\" />\r\n                </MenuItem>\r\n            </div>\r\n            <div className={sideClass}>\r\n                <MenuPanel title=\"No selection\" visible={selectedMenu}>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Songs\" visible={selectedMenu}>\r\n                    <div className=\"songs-buttons-wrapper\">\r\n                        <button className=\"genshin-button\"\r\n                            onClick={() => changePage(\"Composer\")}\r\n                        >\r\n                            Compose song\r\n                        </button>\r\n                        <FilePicker\r\n                            onChange={(file) => this.importSong(file)}\r\n                        >\r\n                            <button className=\"genshin-button\">\r\n                                Import song\r\n                            </button>\r\n                        </FilePicker>\r\n\r\n                    </div>\r\n                    <div className=\"tab-selector-wrapper\">\r\n                        <button\r\n                            className={this.state.selectedSongType === \"recorded\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"recorded\")}\r\n                        >\r\n                            Recorded\r\n                        </button>\r\n                        <button\r\n                            className={this.state.selectedSongType === \"composed\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"composed\")}\r\n                        >\r\n                            Composed\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"songs-wrapper\">\r\n                        {this.state.selectedSongType === \"recorded\"\r\n                            ? songs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={functions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                            : composedSongs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={functions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Settings\" visible={selectedMenu}>\r\n                    {Object.entries(data.settings).map(([key, data]) => {\r\n                        return <SettingsRow\r\n                            key={key + data.value}\r\n                            objKey={key}\r\n                            data={data}\r\n                            update={handleSettingChange}\r\n                        >\r\n\r\n                        </SettingsRow>\r\n                    })}\r\n                    {!checkIfTWA() && <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Support me\r\n                    </a>}\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Library\" visible={selectedMenu}>\r\n                    <div>\r\n                        Here you can find songs to learn, they are provided by the sky-music library.\r\n                    </div>\r\n                    <div className='library-search-row'>\r\n                        <input \r\n                            className='library-search-input' \r\n                            placeholder='Song name'\r\n                            onInput={(e) => this.handleSearchInput(e.target.value)}\r\n                            value={this.state.searchInput}\r\n                        />\r\n                        <button className='library-search-btn' onClick={this.clearSearch}>\r\n                            <FontAwesomeIcon icon={faTimes}/>\r\n                        </button>\r\n                        <button className='library-search-btn' onClick={this.searchSongs}>\r\n                            <FontAwesomeIcon icon={faSearch}/>\r\n                        </button>\r\n                    </div>\r\n                    <div className='library-search-songs-wrapper'>\r\n                        {searchStatus === \"success\" ?\r\n                            searchedSongs.length > 0 \r\n                                ?   searchedSongs.map(song => \r\n                                        <SearchedSong\r\n                                            key={song.file}\r\n                                            data={song}\r\n                                            functions={searchedSongFunctions}\r\n                                        >\r\n                                            {song.name}\r\n                                        </SearchedSong>)   \r\n                                :   <div className='library-search-result-text'>\r\n                                        No results\r\n                                    </div>\r\n                            :   <div className='library-search-result-text'>\r\n                                    {searchStatus}\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Help\" visible={selectedMenu}>\r\n                    <div className='help-icon-wrapper'>\r\n                        <a href='https://discord.gg/Rj8V5gkZPc' >\r\n                            <FaDiscord className='help-icon' />\r\n                        </a>\r\n                        <a href='https://github.com/Specy/genshin-music' >\r\n                            <FaGithub className='help-icon' />\r\n                        </a>\r\n                        \r\n                    </div>\r\n                    <div className='help-title'>\r\n                        Main page\r\n                    </div>\r\n                    <div>\r\n                        <img src={mainPageImg} className='help-img' alt='icon for the main page' />\r\n                        <ol>\r\n                            <li>Keyboard</li>\r\n                            <li>Record your keyboard</li>\r\n                            <li>Open the composer</li>\r\n                            <li>Open the settings</li>\r\n                            <li>Open the saved songs</li>\r\n                        </ol>\r\n                        <div className=\"column\">\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faCrosshairs} /> = practice the song\r\n                            </div>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faDownload} /> = download the song\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='help-title'>\r\n                        Composer\r\n                    </div>\r\n                    <div>\r\n                        <img src={composerImg} className='help-img' alt=\"the icon for the help menu\"/>\r\n                        <ol>\r\n                            <li>Go to the next / previous breakpoint</li>\r\n                            <li>Timeline of the breakpoints</li>\r\n                            <li>Open the tools</li>\r\n                            <li>Add 16 columns to the end</li>\r\n                            <li>Remove the current selected column</li>\r\n                            <li>Add column after the current one</li>\r\n                        </ol>\r\n                        The composer has tools for PC users: <br/><br/>\r\n                            <div style={{marginLeft:'1rem'}}>\r\n                                <Key>A / D</Key> = move left / right <br/>\r\n                                <Key>1 / 2 / 3 / 4</Key> = change tempo <br/>\r\n                                <Key>Space bar</Key> = play / pause song <br/>\r\n                                <Key>Arrow left</Key> = go to previous breakpoint<br/>\r\n                                <Key>Arrow right</Key> = go to next breakpoint <br/>\r\n                                <Key>Q</Key> = remove current column<br/>\r\n                                <Key>E</Key> = add column <br/>\r\n                            </div>\r\n                    </div>\r\n                    {!checkIfTWA() && <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Support me\r\n                    </a>}\r\n                </MenuPanel>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction Key(props){\r\n    return <div className='keyboard-key'>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nfunction MenuPanel(props) {\r\n    let className = props.visible === props.title ? \"menu-panel menu-panel-visible\" : \"menu-panel\"\r\n    return <div className={className}>\r\n        <div className=\"menu-title\">\r\n            {props.title}\r\n        </div>\r\n        <div className=\"panel-content-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\nfunction CloseMenu(props) {\r\n    return <div onClick={() => props.action(false)} className=\"close-menu menu-item\">\r\n        <FontAwesomeIcon icon={faTimes} className=\"icon\" />\r\n    </div>\r\n}\r\nfunction SettingsRow(props) {\r\n    const { data, update, objKey } = props\r\n    const [valueHook, setter] = useState(data.value)\r\n    function handleChange(e) {\r\n        let el = e.target\r\n        let value = data.type === \"checkbox\" ? el.checked : el.value\r\n        if (data.type === \"number\") {\r\n            value = Number(value)\r\n            e.target.value = \"\" //have to do this to remove a react bug that adds a 0 at the start\r\n            if (value < data.threshold[0] || value > data.threshold[1]) {\r\n                return\r\n            }\r\n        }\r\n\r\n        setter(value)\r\n    }\r\n    function sendChange() {\r\n        if (data.value === valueHook) return\r\n        data.value = valueHook\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function sendChangeSelect(e) {\r\n        let value = e.target.value\r\n        data.value = value\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    if (objKey === \"settingVesion\") return null\r\n    return <div className=\"settings-row\">\r\n        <div>\r\n            {data.name}\r\n        </div>\r\n        {data.type === \"select\"\r\n            ? <select value={data.value}\r\n                onChange={sendChangeSelect}\r\n            >\r\n                {data.options.map(e => {\r\n                    return <option value={e} key={e}>{e}</option>\r\n                })}\r\n            </select>\r\n            : <input\r\n                type={data.type}\r\n                value={valueHook}\r\n                checked={valueHook}\r\n                onChange={handleChange}\r\n                onBlur={sendChange}\r\n            />}\r\n    </div>\r\n}\r\nfunction SongRow(props) {\r\n    let data = props.data\r\n    let deleteSong = props.functions.removeSong\r\n    let playSong = props.functions.playSong\r\n    let practiceSong = props.functions.practiceSong\r\n    let toggleMenu = props.functions.toggleMenu\r\n    let downloadSong = props.functions.downloadSong\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\" onClick={() => {\r\n            playSong(data)\r\n            toggleMenu(false)\r\n        }}>\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => {\r\n                practiceSong(data)\r\n                toggleMenu(false)\r\n            }}\r\n            >\r\n                <FontAwesomeIcon icon={faCrosshairs} />\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => deleteSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\nclass MenuItem extends Component {\r\n    render() {\r\n        let className = this.props.className ? `menu-item ${this.props.className}` : \"menu-item\"\r\n        return <div\r\n            className={className}\r\n            onClick={() => this.props.action(this.props.type)}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction SearchedSong(props){\r\n    const { functions, data} = props\r\n    const { playSong, importSong} = functions\r\n    const download = async function(){\r\n        try{\r\n            let song = await fetch('https://sky-music.herokuapp.com/api/songs?get='+encodeURI(data.file)).then(data => data.json())\r\n            song = prepareSongImport(song)\r\n            importSong(song)\r\n        }catch(e){\r\n            console.error(e)\r\n            new LoggerEvent(\"Error\", \"Error downloading song\").trigger()\r\n        }\r\n    }\r\n    const play = async function(){\r\n        try{\r\n            let song = await fetch('https://sky-music.herokuapp.com/api/songs?get='+encodeURI(data.file)).then(data => data.json())\r\n            song = prepareSongImport(song)\r\n            playSong(song)\r\n        }catch(e){\r\n            console.error(e)\r\n            new LoggerEvent(\"Error\", \"Error downloading song\").trigger()\r\n        }\r\n    }\r\n    return <div className=\"song-row\">\r\n    <div className=\"song-name\" onClick={() => {\r\n        play(data)\r\n    }}>\r\n        {data.name}\r\n    </div>\r\n    <div className=\"song-buttons-wrapper\">\r\n        <button className=\"song-button\" onClick={download}>\r\n            <FontAwesomeIcon icon={faDownload} />\r\n        </button>\r\n    </div>\r\n</div>\r\n}\r\nfunction checkIfTWA(){\r\n    let isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n    return isTwa\r\n  }\r\n\r\nexport default Menu","import {instruments, appName} from \"../appConfig\"\r\nlet ComposerSettings = {\r\n    settingVesion: appName + 5,\r\n    instrument: {\r\n        name: \"Instrument (Layer 1)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    layer2: {\r\n        name: \"Instrument (Layer 2)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    layer3: {\r\n        name: \"Instrument (Layer 3)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    bpm: {\r\n        name: \"Bpm\",\r\n        type: \"number\",\r\n        songSetting: true,\r\n        threshold: [0, 1000],\r\n        value: 220\r\n    },\r\n    beatMarks: {\r\n        name: \"Beat marks\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 3,\r\n        options: [\r\n            3,\r\n            4\r\n        ]\r\n    },\r\n    pitch: {\r\n        name: \"Pitch\",\r\n        type: \"select\",\r\n        songSetting: true,\r\n        value: \"C\",\r\n        options: [\r\n            \"C\",\r\n            \"Db\",\r\n            \"D\",\r\n            \"Eb\",\r\n            \"E\",\r\n            \"F\",\r\n            \"Gb\",\r\n            \"G\",\r\n            \"Ab\",\r\n            \"A\",\r\n            \"Bb\",\r\n            \"B\",\r\n        ]\r\n    },\r\n    columnsPerCanvas: {\r\n        name: \"Number of visible columns\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 35,\r\n        options: [\r\n            20,\r\n            25,\r\n            30,\r\n            35,\r\n            40,\r\n            45,\r\n            50\r\n        ]\r\n    },\r\n    caveMode: {\r\n        name: \"Reverb (cave mode)\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    },\r\n    autosave: {\r\n        name: \"Autosave changes\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    }\r\n}\r\nlet MainPageSettings = {\r\n    settingVesion:appName + 5,\r\n    keyboardSize: {\r\n        name: \"Keyboard size\",\r\n        type: \"number\",\r\n        songSetting: false,\r\n        value: 100,\r\n        threshold: [0, 200]\r\n    },\r\n    instrument: {\r\n        name: \"Instrument\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        options: instruments\r\n    },\r\n    pitch: {\r\n        name: \"Pitch\",\r\n        type: \"select\",\r\n        songSetting: true,\r\n        value: \"C\",\r\n        options: [\r\n            \"C\",\r\n            \"Db\",\r\n            \"D\",\r\n            \"Eb\",\r\n            \"E\",\r\n            \"F\",\r\n            \"Gb\",\r\n            \"G\",\r\n            \"Ab\",\r\n            \"A\",\r\n            \"Bb\",\r\n            \"B\",\r\n        ]\r\n    },\r\n    caveMode: {\r\n        name: \"Reverb (cave mode)\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    }\r\n}\r\nexport {\r\n    ComposerSettings,\r\n    MainPageSettings\r\n}","import { LoggerEvent } from \"./SongUtils\"\r\n\r\nasync function asyncPrompt(question) {\r\n    return new Promise(resolve => {\r\n        let container = document.createElement(\"div\")\r\n        container.className = \"floating-prompt\"\r\n        let text = document.createElement(\"div\")\r\n        text.innerText = question\r\n        let input = document.createElement(\"input\")\r\n        input.type = \"text\"\r\n        input.placeholder = \"Write here\"\r\n        input.className = \"prompt-input\"\r\n        let row = document.createElement(\"div\")\r\n        let cancel = document.createElement(\"button\")\r\n        let ok = document.createElement(\"button\")\r\n        cancel.className = \"prompt-button\"\r\n        ok.className = \"prompt-button disabled\"\r\n        row.className = \"prompt-row\"\r\n        ok.innerText = \"Ok\"\r\n        cancel.innerText = \"Cancel\"\r\n        row.append(cancel, ok)\r\n        container.append(text, input, row)\r\n        document.body.appendChild(container)\r\n        input.addEventListener(\"input\", () => {\r\n            if (input.value.trim() === \"\") {\r\n                ok.classList.add(\"disabled\")\r\n            } else {\r\n                ok.classList.remove(\"disabled\")\r\n            }\r\n\r\n        })\r\n        cancel.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(null)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n        ok.addEventListener(\"click\", () => {\r\n            if (input.value.trim() === \"Untitled\") {\r\n                input.value = \"\"\r\n                return new LoggerEvent(\"Warning\", '\"Untitled\" is a reserved word, use another').trigger()\r\n            }\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(input.value.trim())\r\n\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n    })\r\n}\r\n\r\nasync function asyncConfirm(question) {\r\n    return new Promise(resolve => {\r\n        let container = document.createElement(\"div\")\r\n        container.className = \"floating-prompt\"\r\n        let text = document.createElement(\"div\")\r\n        text.innerText = question\r\n        let row = document.createElement(\"div\")\r\n        let cancel = document.createElement(\"button\")\r\n        let ok = document.createElement(\"button\")\r\n\r\n        cancel.className = \"prompt-button\"\r\n        ok.className = \"prompt-button\"\r\n        row.className = \"prompt-row\"\r\n        ok.innerText = \"Yes\"\r\n        ok.style.background = '#628c83'\r\n        cancel.style.background = '#a9525a'\r\n        cancel.innerText = \"No\"\r\n        row.append(cancel, ok)\r\n        container.append(text, row)\r\n        document.body.appendChild(container)\r\n        cancel.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(false)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n        ok.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(true)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n    })\r\n}\r\n\r\nexport {\r\n    asyncConfirm,\r\n    asyncPrompt\r\n}","export default __webpack_public_path__ + \"static/media/rotate.e7c0f107.svg\";","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Keyboard from \"./Keyboard\"\r\nimport Menu from \"./Menu\"\r\nimport ZangoDb from \"zangodb\"\r\nimport { Song, Recording, LoggerEvent, PlayingSong, ComposerToRecording, prepareSongImport} from \"../SongUtils\"\r\nimport { MainPageSettings } from \"../SettingsObj\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSyncAlt, faStop } from '@fortawesome/free-solid-svg-icons'\r\nimport { asyncConfirm, asyncPrompt } from \"../AsyncPrompts\"\r\nimport rotateImg from \"../../assets/icons/rotate.svg\"\r\nimport { appName } from \"../../appConfig\"\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.db = new ZangoDb.Db(appName, { songs: [] })\r\n    this.recording = new Recording()\r\n    let settings = this.getSettings()\r\n    this.dbCol = {\r\n      songs: this.db.collection(\"songs\")\r\n    }\r\n    this.state = {\r\n      keyboardData: {\r\n        instrument: settings.instrument.value,\r\n        playingSong: {\r\n          timestamp: 0,\r\n          notes: []\r\n        },\r\n        practicingSong: {\r\n          timestamp: 0,\r\n          notes: [],\r\n          threshold: 100\r\n        }\r\n      },\r\n      isRecording: false,\r\n      songs: [],\r\n      settings: settings,\r\n      sliderState: {\r\n        position: 0,\r\n        size: 0\r\n      },\r\n      thereIsSong: \"none\",\r\n      isDragging: false\r\n    }\r\n    this.lastPlayedSong = new Recording()\r\n    this.syncSongs()\r\n  }\r\n  \r\n  componentDidMount(){\r\n    document.body.addEventListener('dragenter',this.handleDrag)\r\n    document.body.addEventListener('dragleave',this.resetDrag)\r\n    document.body.addEventListener('dragover',this.handleDragOver)\r\n    document.body.addEventListener('drop',this.handleDrop)\r\n  }\r\n  componentWillUnmount(){\r\n    document.body.removeEventListener('dragenter',this.handleDrag)\r\n    document.body.removeEventListener('dragleave',this.resetDrag)\r\n    document.body.removeEventListener('drop',this.handleDrop)\r\n    document.body.addEventListener('dragover',this.handleDragOver)\r\n  }\r\n  resetDrag = (e) =>{\r\n    this.setState({\r\n      isDragging:false\r\n    })\r\n  }\r\n  handleDragOver= (e) =>{\r\n    e.preventDefault()\r\n    this.setState({\r\n      isDragging:true\r\n    })\r\n  }\r\n  handleDrag = (e) =>{\r\n    e.preventDefault()\r\n    this.setState({\r\n      isDragging:true\r\n    })\r\n  }\r\n  handleDrop = async(e) =>{\r\n    this.resetDrag()\r\n    e.preventDefault()\r\n    let songs = await Promise.all(Array.from(e.dataTransfer.files).map(file => file.text()))\r\n    for(let i = 0; i<songs.length;i++){\r\n      try{\r\n        let song = prepareSongImport(JSON.parse(songs[i]))\r\n        await this.addSong(song)\r\n      }catch(e){\r\n        console.error(e)\r\n      }\r\n\r\n    }\r\n  }\r\n  getSettings = () => {\r\n    let storedSettings = localStorage.getItem(appName + \"_Main_Settings\")\r\n    try {\r\n      storedSettings = JSON.parse(storedSettings)\r\n    } catch (e) {\r\n      storedSettings = null\r\n    }\r\n    if (storedSettings !== null) {\r\n      if (storedSettings.settingVesion !== MainPageSettings.settingVesion) {\r\n        this.updateSettings(MainPageSettings)\r\n        return MainPageSettings\r\n      }\r\n      return storedSettings\r\n    }\r\n    return MainPageSettings\r\n  }\r\n  updateSettings = (override) => {\r\n    let state\r\n    if (override !== undefined) {\r\n      state = override\r\n    } else {\r\n      state = this.state.settings\r\n    }\r\n    localStorage.setItem(appName + \"_Main_Settings\", JSON.stringify(state))\r\n  }\r\n  handleSettingChange = (setting) => {\r\n    let settings = this.state.settings\r\n    let data = setting.data\r\n    settings[setting.key].value = data.value\r\n    if (setting.key === \"instrument\") {\r\n      this.loadInstrument(data.value)\r\n    }\r\n    this.setState({\r\n      settings: settings,\r\n    }, this.updateSettings)\r\n  }\r\n  syncSongs = async () => {\r\n    let songs = await this.dbCol.songs.find().toArray()\r\n    this.setState({\r\n      songs: songs\r\n    })\r\n  }\r\n  loadInstrument = (instrument) => {\r\n    let state = this.state\r\n    state.keyboardData.instrument = instrument\r\n    this.setState({\r\n      keyboardData: state.keyboardData\r\n    })\r\n  }\r\n  practiceSong = async (song, start = 0) => {\r\n    await this.stopSong()\r\n    let oldState = this.state.keyboardData.practicingSong\r\n    if (song.data?.isComposedVersion) {\r\n      song = ComposerToRecording(song)\r\n      oldState.threshold = 10\r\n    }\r\n    oldState.notes = song.notes\r\n    oldState.timestamp = new Date().getTime()\r\n    let songToPractice = JSON.parse(JSON.stringify(this.state.keyboardData.practicingSong))\r\n    songToPractice.start = start\r\n    this.setState({\r\n      keyboardData: this.state.keyboardData,\r\n      thereIsSong: \"practicing\"\r\n    }, () => {\r\n      let event = new CustomEvent(\"practiceSong\", { detail: songToPractice })\r\n      window.dispatchEvent(event)\r\n    })\r\n  }\r\n  //to add the composed songs\r\n  songExists = async (name) => {\r\n    return await this.dbCol.songs.findOne({ name: name }) !== undefined\r\n  }\r\n  addSong = async (song) => {\r\n    try{\r\n      if (await this.songExists(song.name)) {\r\n        return new LoggerEvent(\"Warning\", \"A song with this name already exists! \\n\" + song.name).trigger()\r\n      }\r\n      await this.dbCol.songs.insert(song)\r\n      this.syncSongs()\r\n      new LoggerEvent(\"Success\", `Song added to the ${song.data.isComposedVersion ? \"Composed\" : \"Recorded\"} tab!`, 4000).trigger()\r\n    }catch(e){\r\n      console.error(e)\r\n      return new LoggerEvent(\"Error\", 'There was an error importing the song').trigger()\r\n    }\r\n    \r\n  }\r\n  componentDidCatch() {\r\n    new LoggerEvent(\"Warning\", \"There was an error with the song! Restoring default...\").trigger()\r\n    this.stopSong()\r\n  }\r\n  removeSong = async (name) => {\r\n    let result = await asyncConfirm(`Are you sure you want to delete the song: \"${name}\" ?`)\r\n    if (result) {\r\n      this.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n    }\r\n  }\r\n  handleRecording = (note) => {\r\n    if (this.state.isRecording) {\r\n      this.recording.addNote(note.index)\r\n    }\r\n  }\r\n  handleSliderEvent = (event) => {\r\n\r\n    this.changeSliderState({\r\n      position: Number(event.target.value),\r\n      size: this.state.sliderState.size\r\n    })\r\n  }\r\n  stopSong = () => {\r\n    return new Promise(resolve => {\r\n      let keyboardData = this.state.keyboardData\r\n      keyboardData.practicingSong = new PlayingSong([])\r\n      keyboardData.playingSong = new PlayingSong([])\r\n      this.setState({\r\n        thereIsSong: \"none\",\r\n        keyboardData: keyboardData\r\n      }, () => {\r\n        let event = new CustomEvent(\"playSong\", { detail: new PlayingSong([]) })\r\n        window.dispatchEvent(event)\r\n        event = new CustomEvent(\"practiceSong\", { detail: new PlayingSong([]) })\r\n        window.dispatchEvent(event)\r\n        setTimeout(resolve, 300)\r\n      })\r\n    })\r\n  }\r\n  changeSliderState = (newState) => {\r\n    this.setState({\r\n      sliderState: newState\r\n    })\r\n  }\r\n  playSong = async (song) => {\r\n    await this.stopSong()\r\n    let settings = this.state.settings\r\n    settings.pitch.value = song.pitch\r\n    if (song.data.isComposedVersion) {\r\n      song = ComposerToRecording(song)\r\n    }\r\n    let playingSong = {\r\n      timestamp: new Date().getTime(),\r\n      notes: song.notes\r\n    }\r\n    this.state.keyboardData.playingSong = playingSong\r\n    this.setState({\r\n      keyboardData: this.state.keyboardData,\r\n      thereIsSong: \"playing\",\r\n      settings:settings\r\n    })\r\n\r\n    let event = new CustomEvent(\"playSong\", { detail: playingSong })\r\n    window.dispatchEvent(event)\r\n    this.lastPlayedSong = song\r\n  }\r\n  askForSongName = () => {\r\n    return new Promise(async resolve => {\r\n        let promptString = \"Write song name, press cancel to ignore\"\r\n        while (true) {\r\n            let songName = await asyncPrompt(promptString)\r\n            if (songName === null) return resolve(null)\r\n            if (songName !== \"\") {\r\n                if (await this.songExists(songName)) {\r\n                    promptString = \"This song already exists: \" + songName\r\n                } else {\r\n                    return resolve(songName)\r\n                }\r\n            } else {\r\n                promptString = \"Write song name, press cancel to ignore\"\r\n            }\r\n        }\r\n    })\r\n\r\n}\r\n  toggleRecord = async (override) => {\r\n    if (typeof override !== \"boolean\") override = undefined\r\n    let newState = override !== undefined ? override : !this.state.isRecording\r\n    if (!newState && this.recording.notes.length > 0) {\r\n      let songName = await this.askForSongName()\r\n      let song = new Song(songName, this.recording.notes)\r\n      song.pitch = this.state.settings.pitch.value\r\n      if (songName !== null) this.addSong(song)\r\n    } else {\r\n      this.recording = new Recording()\r\n      let eventData = new PlayingSong([])\r\n      let event = new CustomEvent(\"playSong\", { detail: eventData })\r\n      window.dispatchEvent(event)\r\n    }\r\n    this.state.isRecording = newState\r\n    this.setState({\r\n      open: this.state.isRecording\r\n    })\r\n  }\r\n  render() {\r\n    let state = this.state\r\n    let keyboardFunctions = {\r\n      handleRecording: this.handleRecording,\r\n      changeSliderState: this.changeSliderState,\r\n      stopSong: this.stopSong\r\n    }\r\n    let menuFunctions = {\r\n      addSong: this.addSong,\r\n      removeSong: this.removeSong,\r\n      playSong: this.playSong,\r\n      practiceSong: this.practiceSong,\r\n      stopSong: this.stopSong,\r\n      changePage: this.props.changePage,\r\n      handleSettingChange: this.handleSettingChange,\r\n    }\r\n    let menuData = {\r\n      songs: state.songs,\r\n      settings: this.state.settings\r\n    }\r\n\r\n    return <div className=\"app\">\r\n      <div className=\"rotate-screen\">\r\n        <img src={rotateImg} alt=\"icon for the rotating screen\">\r\n        </img>\r\n          For a better experience, add the website to the home screen, and rotate your device\r\n      </div>\r\n      {state.isDragging && <div className='drag-n-drop'>\r\n          Drop file here\r\n      </div>}\r\n      <Menu functions={menuFunctions} data={menuData} />\r\n      <div className=\"right-panel\">\r\n        <div className=\"upper-right\">\r\n          {this.state.thereIsSong !== \"none\"\r\n            ? <div className=\"slider-wrapper\">\r\n              <button className=\"song-button\" onClick={this.stopSong}>\r\n                <FontAwesomeIcon icon={faStop} />\r\n              </button>\r\n              <input\r\n                type=\"range\"\r\n                className=\"slider\"\r\n                min={0}\r\n                onChange={this.handleSliderEvent}\r\n                max={state.sliderState.size}\r\n                value={state.sliderState.position}\r\n              ></input>\r\n              <button className=\"song-button\" onClick={async () => {\r\n                if (this.state.thereIsSong === \"practicing\") {\r\n                  this.practiceSong(state.keyboardData.practicingSong, state.sliderState.position)\r\n                } else {\r\n                  await this.stopSong()\r\n                  this.playSong(this.lastPlayedSong)\r\n                }\r\n              }}>\r\n                <FontAwesomeIcon icon={faSyncAlt} />\r\n              </button>\r\n            </div>\r\n            :\r\n            <GenshinButton\r\n              active={state.isRecording}\r\n              click={this.toggleRecord}\r\n            >\r\n              {state.isRecording ? \"Stop\" : \"Record\"}\r\n            </GenshinButton>\r\n\r\n          }\r\n\r\n\r\n\r\n        </div>\r\n        <div className=\"keyboard-wrapper\">\r\n\r\n          <Keyboard\r\n            key={state.keyboardData.instrument}\r\n            data={state.keyboardData}\r\n            settings={this.state.settings}\r\n            functions={keyboardFunctions}\r\n            isRecording={state.isRecording}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction checkIfTWA(){\r\n  let isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n  return isTwa\r\n}\r\n\r\nfunction setIfInTWA(){\r\n  if(checkIfTWA()) return console.log('inTWA')\r\n  let isTwa = document.referrer.includes('android-app://')\r\n  sessionStorage.setItem('isTwa',isTwa)\r\n}\r\nsetIfInTWA()\r\nfunction GenshinButton(props) {\r\n  let className = \"genshin-button record-btn \" + (props.active ? \"selected\" : \"\")\r\n  return <button className={className} onClick={props.click}>\r\n    {props.children}\r\n  </button>\r\n}\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/addCell.73b6c8e9.svg\";","export default __webpack_public_path__ + \"static/media/removeCell.e266ba1a.svg\";","import { useState, useEffect } from 'react';\r\nfunction useDebounce(value, delay) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(\r\n    () => {\r\n      // Update debounced value after delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n      // Cancel the timeout if value changes (also on delay change or unmount)\r\n      // This is how we prevent debounced value from updating if value is changed ...\r\n      // .. within the delay period. Timeout gets cleared and restarted.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    [value, delay] // Only re-call effect if value or delay changes\r\n  );\r\n  return debouncedValue;\r\n}\r\nexport default useDebounce;","import React, { Component, useEffect, useState } from 'react'\r\nimport { FilePicker } from \"react-file-picker\"\r\nimport { Midi } from '@tonejs/midi'\r\nimport { LoggerEvent, pitchArr, ColumnNote, Column, numberToLayer, ComposedSong, groupByIndex, mergeLayers } from '../SongUtils'\r\nimport { appName } from '../../appConfig'\r\nimport { FaInfoCircle } from 'react-icons/fa'\r\nimport useDebounce from './useDebounce'\r\nclass MidiImport extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            fileName: '',\r\n            midi: null,\r\n            bpm: 220,\r\n            offset: 0,\r\n            pitch: 'C',\r\n            accidentals: 0,\r\n            outOfRange: 0,\r\n            totalNotes: 0,\r\n            includeAccidentals: true\r\n        }\r\n        this.handleFile = (file) => {\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', (event) => {\r\n                let midi\r\n                try {\r\n                    midi = new Midi(event.target.result)\r\n                } catch (e) {\r\n                    console.error(e)\r\n                }\r\n                if (!midi) return new LoggerEvent('Error', 'There was an error importing this file', 2000).trigger()\r\n                let bpm = midi.header.tempos[0]?.bpm\r\n                let key = midi.header.keySignatures[0]?.key\r\n                midi.tracks.forEach((track, i) => {\r\n                    track.selected = true\r\n                    track.layer = 0\r\n                    track.name = track.name || `Track n.${i + 1}`\r\n                    track.numberOfAccidentals = 0\r\n                    track.numberOfOutOfRange = 0\r\n                })\r\n                this.setState({\r\n                    midi: midi,\r\n                    fileName: file.name,\r\n                    bpm: Math.floor(bpm * 4) || 220,\r\n                    offset: 0,\r\n                    pitch: pitchArr.includes(key) ? key : 'C',\r\n                }, () => { if (this.state.midi !== null) this.convertMidi()})\r\n            })\r\n            reader.readAsArrayBuffer(file)\r\n        }\r\n\r\n        this.convertMidi = () => {\r\n            const { midi, bpm, offset, includeAccidentals,pitch } = this.state\r\n            let tracks = midi.tracks.filter(track => track.selected)\r\n            let notes = []\r\n            let numberOfAccidentals = 0\r\n            let outOfRange = 0\r\n            let totalNotes = 0\r\n            tracks.forEach(track => {\r\n                track.numberOfAccidentals = 0\r\n                track.numberOfOutOfRange = 0\r\n                track.notes.forEach(midiNote => {\r\n                    totalNotes++\r\n                    let convertedNote = convertMidiNote(midiNote.midi - offset)\r\n                    let note = {\r\n                        time: Math.floor(midiNote.time * 1000),\r\n                        note: convertedNote.note,\r\n                        layer: track.layer\r\n                    }\r\n                    if(convertedNote.isAccidental){\r\n                        numberOfAccidentals ++\r\n                        track.numberOfAccidentals ++\r\n                    }\r\n                    if (note.note !== null) {\r\n                        if (includeAccidentals || !convertedNote.isAccidental) {\r\n                            notes.push(note)\r\n                        }\r\n                    } else {\r\n                        outOfRange++\r\n                        track.numberOfOutOfRange ++\r\n                    }\r\n                })\r\n            })\r\n            notes = notes.sort((a, b) => a.time - b.time)\r\n            let bpmToMs = Math.floor(60000 / bpm)\r\n            let groupedNotes = []\r\n            while (notes.length > 0) {\r\n                let row = [notes.shift()]\r\n                let amount = 0\r\n                for (let i = 0; i < notes.length; i++) {\r\n                    if (row[0].time > notes[i].time - bpmToMs / 9) amount++\r\n                }\r\n                groupedNotes.push([...row, ...notes.splice(0, amount)])\r\n            }\r\n            let columns = []\r\n            let previousTime = 0\r\n            groupedNotes.forEach(notes => {\r\n                let note = notes[0]\r\n                if (!note) return\r\n                let elapsedTime = note.time - previousTime\r\n                previousTime = note.time\r\n                let emptyColumns = Math.floor((elapsedTime - bpmToMs) / bpmToMs)\r\n                if (emptyColumns > -1) new Array(emptyColumns).fill(0).forEach(() => columns.push(new Column())) // adds empty columns\r\n                let noteColumn = new Column()\r\n                noteColumn.notes = notes.map(note => {\r\n                    return new ColumnNote(note.note, numberToLayer(note.layer))\r\n                })\r\n                columns.push(noteColumn)\r\n            })\r\n            columns.forEach(column => { //merges notes of different layer\r\n                let groupedNotes = groupByIndex(column)\r\n                column.notes = groupedNotes.map(group => {\r\n                    group[0].layer = mergeLayers(group)\r\n                    return group[0]\r\n                })\r\n            })\r\n            let song = new ComposedSong(\"Untitled\")\r\n            song.columns = columns\r\n            song.bpm = bpm\r\n            song.instruments = this.props.data.instruments\r\n            song.pitch = pitch\r\n            let lastColumn = this.props.data.selectedColumn\r\n            song.selected = lastColumn < song.columns.length ? lastColumn : 0\r\n            if (song.columns.length === 0) {\r\n                return new LoggerEvent(\"Error\", \"There are no notes\", 2000).trigger()\r\n            }\r\n            this.props.functions.loadSong(song)\r\n            this.setState({\r\n                accidentals: numberOfAccidentals,\r\n                totalNotes: totalNotes,\r\n                outOfRange: outOfRange\r\n            })\r\n        }\r\n\r\n        this.editTrack = (command, data) => {\r\n            let tracks = this.state.midi.tracks\r\n            if (command === 'index') {\r\n\r\n                tracks[data.index].selected = !tracks[data.index].selected\r\n            }\r\n            if (command === 'layer') {\r\n                tracks[data.index].layer = data.layer\r\n            }\r\n\r\n            this.setState({\r\n                midi: this.state.midi\r\n            }, () => { if (this.state.midi !== null) this.convertMidi() })\r\n        }\r\n        this.changeOffset = (value) => {\r\n            value = parseInt(value)\r\n            if (!Number.isInteger(value)) value = 0\r\n            if(this.state.offset === value) return\r\n            this.setState({\r\n                offset: value\r\n            }, () => { if (this.state.midi !== null) this.convertMidi() })\r\n        }\r\n        this.changePitch = (value) => {\r\n            this.props.functions.changePitch(value)\r\n            this.setState({\r\n                pitch: value\r\n            })\r\n        }\r\n        this.toggleAccidentals = () => {\r\n            this.setState({\r\n                includeAccidentals: !this.state.includeAccidentals\r\n            }, () => { if (this.state.midi !== null) this.convertMidi() })\r\n        }\r\n        this.changeBpm = (value) => {\r\n            value = parseInt(value)\r\n            if (!Number.isInteger(value)) value = 0\r\n            if(this.state.bpm === value) return\r\n            this.setState({\r\n                bpm: value\r\n            }, () => { if (this.state.midi !== null) this.convertMidi() })\r\n        }\r\n    }\r\n    render() {\r\n        const { handleFile, editTrack, state, changeBpm, changeOffset, convertMidi, changePitch } = this\r\n        const { fileName, midi, bpm, offset, pitch, accidentals, outOfRange, totalNotes, includeAccidentals } = state\r\n        const { functions } = this.props\r\n        const { changeMidiVisibility } = functions\r\n        return <div className='floating-midi'>\r\n            <div\r\n                className='midi-row separator-border'\r\n                style={{ width: '100%' }}\r\n            >\r\n                <FilePicker onChange={handleFile}>\r\n                    <button className=\"midi-btn\">\r\n                        Click to load midi file\r\n                    </button>\r\n                </FilePicker>\r\n                <div style={{ margin: '0 0.5rem', maxWidth: '8rem', textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n                    {fileName}\r\n                </div>\r\n                <button\r\n                    className='midi-btn'\r\n                    style={{ marginLeft: 'auto' }}\r\n                    onClick={() => changeMidiVisibility(false)}\r\n                >\r\n                    Close\r\n                </button>\r\n            </div>\r\n            <table className='separator-border' style={{ width: \"100%\" }}>\r\n                <tr>\r\n                    <td>\r\n                        <div style={{ marginRight: '0.5rem' }}>Bpm:</div>\r\n                    </td>\r\n                    <td style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <NumberInput\r\n                            value={bpm}\r\n                            changeValue={changeBpm}\r\n                            delay={600}\r\n                            step={5}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <div style={{ marginRight: '0.5rem' }}>Scale notes by: </div>\r\n                    </td>\r\n                    <td>\r\n                        <NumberInput\r\n                            value={offset}\r\n                            changeValue={changeOffset}\r\n                            delay={600}\r\n                            step={1}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <div style={{ marginRight: '0.5rem' }}>Pitch:</div>\r\n                    </td>\r\n                    <td style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                        <select\r\n                            className='midi-select'\r\n                            value={pitch}\r\n                            onChange={(event) => changePitch(event.target.value)}\r\n                            style={{ backgroundColor: '#576377', width: '5rem' }}\r\n                        >\r\n                            <option value=\"C\">C</option>\r\n                            <option value=\"Db\">Db</option>\r\n                            <option value=\"D\">D</option>\r\n                            <option value=\"Eb\">Eb</option>\r\n                            <option value=\"E\">E</option>\r\n                            <option value=\"F\">F</option>\r\n                            <option value=\"Gb\">Gb</option>\r\n                            <option value=\"G\">G</option>\r\n                            <option value=\"Ab\">Ab</option>\r\n                            <option value=\"A\">A</option>\r\n                            <option value=\"Bb\">Bb</option>\r\n                            <option value=\"B\">B</option>\r\n                        </select>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <div style={{ marginRight: '0.5rem' }}>Include accidentals:</div>\r\n                    </td>\r\n                    <td style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                        <input type='checkbox'\r\n                            checked={includeAccidentals}\r\n                            onChange={this.toggleAccidentals}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            {midi !== null && <div className='midi-column separator-border' style={{ width: '100%' }}>\r\n                <div className='midi-column' style={{ width: '100%' }}>\r\n                    <div>Select midi tracks</div>\r\n                    {midi?.tracks.map((track, i) =>\r\n                        <Track\r\n                            data={track}\r\n                            key={i}\r\n                            index={i}\r\n                            editTrack={editTrack}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            }\r\n            {midi !== null && <table>\r\n                <tr>\r\n                    <td>Total notes: </td>\r\n                    <td />\r\n                    <td>{totalNotes}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Accidentals: </td>\r\n                    <td />\r\n                    <td>{accidentals}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Out of range: </td>\r\n                    <td />\r\n                    <td>{outOfRange}</td>\r\n                </tr>\r\n            </table>\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction Track(props) {\r\n    const { data, index, editTrack } = props\r\n    const [dataShown, setDataShown] = useState(false)\r\n    return <div className='midi-track-column'>\r\n        <div className='midi-track-wrapper'>\r\n            <div className='midi-track-center'>\r\n                <input type='checkbox' onChange={() => editTrack(\"index\", { index: index })} checked={data.selected} />\r\n                {data.name} ({data.notes.length})\r\n            </div>\r\n            <div className='midi-track-center'>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    {data.instrument.family}\r\n                </div>\r\n                <select\r\n                    onChange={(event) => editTrack('layer', { index: index, layer: Number(event.target.value) })}\r\n                    value={data.layer}\r\n                    className='midi-select'\r\n                >\r\n                    <option value='0'>Layer 1</option>\r\n                    <option value='1'>Layer 2</option>\r\n                    <option value='2'>Layer 3</option>\r\n                </select>\r\n\r\n                <FaInfoCircle\r\n                    size={22}\r\n                    color={dataShown ? \"rgb(207, 122, 130)\" : \"white\"}\r\n                    onClick={() => setDataShown(!dataShown)}\r\n                    cursor='pointer'\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n        <div className='midi-track-data' style={{ display: dataShown ? \"flex\" : \"none\" }}>\r\n            <div className='midi-track-data-row'>\r\n                <div>Instrument:</div>\r\n                <div>{data.instrument.name}</div>\r\n            </div>\r\n            <div className='midi-track-data-row'>\r\n                <div>Number of notes:</div>\r\n                <div>{data.notes.length}</div>\r\n            </div>\r\n            <div className='midi-track-data-row'>\r\n                <div>Accidentals:</div>\r\n                <div>{data.numberOfAccidentals}</div>\r\n            </div>\r\n            <div className='midi-track-data-row'>\r\n                <div>Out of range:</div>\r\n                <div>{data.numberOfOutOfRange}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MidiImport\r\n\r\nfunction NumberInput(props) {\r\n    const { changeValue, value, delay = 500, step = 1 } = props\r\n    const [elementValue, setElementValue] = useState(value)\r\n    const debounced = useDebounce(elementValue, delay) \r\n    useEffect(() => {\r\n        changeValue(debounced)\r\n    }, [debounced]);\r\n    useEffect(() => {\r\n        setElementValue(value)\r\n    }, [value])\r\n    return <div style={{ display: 'flex', justifyContent: 'flex-end' }} >\r\n        <button\r\n            onClick={() => setElementValue(elementValue - step)}\r\n            className='midi-btn-small'\r\n        >-</button>\r\n        <input\r\n            type=\"text\"\r\n            value={elementValue}\r\n            onChange={(e) => setElementValue(e.target.value)}\r\n            className='midi-input'\r\n            style={{ margin: '0 0.3rem' }}\r\n        />\r\n        <button\r\n            onClick={() => setElementValue(elementValue + step)}\r\n            className='midi-btn-small'\r\n        >+</button>\r\n    </div>\r\n}\r\n\r\nfunction convertMidiNote(midiNote) {\r\n    let note = null\r\n    let isAccidental = false\r\n    if (appName === 'Sky') {\r\n        switch (midiNote) {\r\n            case 60: note = 0; break;\r\n            case 61: note = 0; isAccidental = true; break;\r\n            case 62: note = 1; break;\r\n            case 63: note = 1; isAccidental = true; break;\r\n            case 64: note = 2; break;\r\n            case 65: note = 3; break;\r\n            case 66: note = 3; isAccidental = true; break;\r\n            case 67: note = 4; break;\r\n            case 68: note = 4; isAccidental = true; break;\r\n            case 69: note = 5; break;\r\n            case 70: note = 5; isAccidental = true; break;\r\n            case 71: note = 6; break;\r\n            case 72: note = 7; break;\r\n            case 73: note = 7; isAccidental = true; break;\r\n            case 74: note = 8; break;\r\n            case 75: note = 8; isAccidental = true; break;\r\n            case 76: note = 9; break;\r\n            case 77: note = 10; break;\r\n            case 78: note = 10; isAccidental = true; break;\r\n            case 79: note = 11; break;\r\n            case 80: note = 11; isAccidental = true; break;\r\n            case 81: note = 12; break;\r\n            case 82: note = 12; isAccidental = true; break;\r\n            case 83: note = 13; break;\r\n            case 84: note = 14; break;\r\n            default: note = null\r\n        }\r\n    }\r\n    if (appName === 'Genshin') {\r\n        switch (midiNote) {\r\n            case 48: note = 14; break;\r\n            case 49: note = 14; isAccidental = true; break;\r\n            case 50: note = 15; break;\r\n            case 51: note = 15; isAccidental = true; break;\r\n            case 52: note = 16; break;\r\n            case 53: note = 17; break;\r\n            case 54: note = 17; isAccidental = true; break;\r\n            case 55: note = 18; break;\r\n            case 56: note = 18; isAccidental = true; break;\r\n            case 57: note = 19; break;\r\n            case 58: note = 19; isAccidental = true; break;\r\n            case 59: note = 20; break;\r\n            case 60: note = 7; break;\r\n            case 61: note = 7; isAccidental = true; break;\r\n            case 62: note = 8; break;\r\n            case 63: note = 8; isAccidental = true; break;\r\n            case 64: note = 9; break;\r\n            case 65: note = 10; break;\r\n            case 66: note = 10; isAccidental = true; break;\r\n            case 67: note = 11; break;\r\n            case 68: note = 11; isAccidental = true; break;\r\n            case 69: note = 12; break;\r\n            case 70: note = 12; isAccidental = true; break;\r\n            case 71: note = 13; break;\r\n            case 72: note = 0; break;\r\n            case 73: note = 0; isAccidental = true; break;\r\n            case 74: note = 1; break;\r\n            case 75: note = 1; isAccidental = true; break;\r\n            case 76: note = 2; break;\r\n            case 77: note = 3; break;\r\n            case 78: note = 3; isAccidental = true; break;\r\n            case 79: note = 4; break;\r\n            case 80: note = 4; isAccidental = true; break;\r\n            case 81: note = 5; break;\r\n            case 82: note = 5; isAccidental = true; break;\r\n            case 83: note = 6; break;\r\n        }\r\n    }\r\n    return {\r\n        note: note,\r\n        isAccidental: isAccidental\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass ComposerTools extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let className = data.visible ? \"floating-tools tools-visible\" : \"floating-tools\"\r\n        return <div className={className}>\r\n            <div className=\"tools-row\">\r\n                <div>\r\n                    Scroll to the left / right to select the columns\r\n                </div>\r\n                <button onClick={functions.toggleTools}>\r\n                    Close\r\n                </button>\r\n            </div>\r\n            <div className=\"tools-buttons-wrapper\">\r\n                <div className='tools-half'>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.copyColumns('all')\r\n                        }}\r\n                        className={data.copiedColumns.length !== 0 ? \"tools-button-highlighted\" : \"\"}\r\n                    >\r\n                        Copy\r\n                    </button>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.copyColumns(data.layer)\r\n                        }}\r\n                        className={data.copiedColumns.length !== 0 ? \"tools-button-highlighted\" : \"\"}\r\n                    >\r\n                        Copy layer {data.layer}\r\n                    </button>\r\n                </div>\r\n                <div className='tools-half'>\r\n                    <button\r\n                        disabled={data.copiedColumns.length === 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.pasteColumns(false)\r\n                        }}\r\n                    >\r\n                        Paste\r\n                </button>\r\n                    <button\r\n                        disabled={data.copiedColumns.length === 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.pasteColumns(true)\r\n                        }}\r\n                    >\r\n                        Insert\r\n                </button>\r\n                </div>\r\n                <div className='tools-half'>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.eraseColumns('all')\r\n                        }}\r\n                    >\r\n                        Erase\r\n                    </button>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.eraseColumns(data.layer)\r\n                        }}\r\n                    >\r\n                        Erase layer {data.layer}\r\n                    </button>\r\n                </div>\r\n\r\n                <button\r\n                    disabled={data.copiedColumns.length !== 0}\r\n                    onClick={functions.deleteColumns}\r\n                >\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerTools","import React, { Component } from 'react'\r\nimport { cssClasses,appName } from \"../../appConfig\" \r\nclass ComposerNote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    shouldComponentUpdate(next, prev) {\r\n        return this.props.layers !== next.layers || this.props.skyText !== next.skyText\r\n    }\r\n    render() {\r\n        const {props} = this\r\n        const { data, layers } = props\r\n        let className = cssClasses.noteComposer\r\n        if (layers[0] === \"1\") className += \" layer-1\"\r\n        if (layers[1] === \"1\") className += \" layer-2\"\r\n        if (layers[2] === \"1\") className += \" layer-3\"\r\n        let noteText = data.noteNames.mobile\r\n        let svgUrl = `./assets/icons/keys/${data.noteNames.mobile}.svg`\r\n        if(appName === \"Sky\") svgUrl = `./assets/icons/keys/${props.skyImg}.svg`\r\n        if(appName === \"Sky\") noteText = props.skyText\r\n        let layer3Class = \"Sky\" ? \"layer-3-ball-bigger\" : \"layer-3-ball\"\r\n        return <button onPointerDown={() => this.props.clickAction(data)} className=\"button-hitbox\">\r\n            <div className={className} >\r\n                <img\r\n                    draggable=\"false\"\r\n                    alt={data.noteNames.mobile}\r\n                    src={svgUrl}>\r\n\r\n                </img>\r\n                <div className={layer3Class}>\r\n                </div>\r\n                <div className={appName === \"Sky\" ? \"note-name-sky\" : \"note-name\"}>\r\n                    {noteText}\r\n                </div>\r\n            </div>\r\n        </button>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerNote","import React, { Component } from 'react'\r\n\r\nclass MultiSwitch extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let props = this.props\r\n        return <>\r\n            {props.options.map(e => {\r\n                return <button\r\n                    style={{ backgroundColor: e === props.selected ? props.selectedColor : \"\" }}\r\n                    className={props.buttonsClass}\r\n                    onClick={() => props.onSelect(e)}\r\n                    key={e}\r\n                >\r\n                    {e}\r\n                </button>\r\n            })}\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MultiSwitch\r\n\r\n","import React, { Component } from 'react'\r\nimport ComposerNote from \"./ComposerNote\"\r\nimport MultiSwitch from \"./MultiSwitch\"\r\nimport { keyNames, pitchArr , skyImages } from \"../../appConfig\"\r\nclass ComposerKeyboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let notesIndexes = data.currentColumn.notes.map((e) => e.index)\r\n        let hiddenSideMenu = data.isPlaying ? \" hidden\" : \"\"\r\n        let keyboardClass = \"keyboard\"\r\n        if (data.keyboard.layout.length === 15) keyboardClass += \" keyboard-5\"\r\n        if (data.keyboard.layout.length === 8) keyboardClass += \" keyboard-4\"\r\n        return <div>\r\n            <div className={keyboardClass}>\r\n            {data.keyboard.layout.length === 0 ? <div className=\"loading\">Loading...</div> : null}\r\n                {data.keyboard.layout.map((note, i) => {\r\n                    let index = notesIndexes.indexOf(i)\r\n                    let skyText = \"\"\r\n                    let skyImg = \"\"\r\n                    try{\r\n                        skyText = keyNames[pitchArr.indexOf(data.pitch)][note.index]\r\n                        skyImg = skyImages[data.keyboard.layout.length][note.index]     \r\n                    }catch(e){}\r\n\r\n                    return <ComposerNote\r\n                        key={note.index}\r\n                        layers={index >= 0 ? data.currentColumn.notes[index].layer : \"000\"}\r\n                        data={note}\r\n                        skyText={skyText}\r\n                        skyImg={skyImg}\r\n                        clickAction={functions.handleClick}\r\n                    />\r\n                })}\r\n            </div>\r\n            <div className={\"bottom-right-wrapper\" + hiddenSideMenu}>\r\n                <div className={\"layer-buttons-wrapper\"}>\r\n                    <div className=\"bottom-right-text\">\r\n                        Layer\r\n                    </div>\r\n                    <MultiSwitch\r\n                        buttonsClass={\"layer-button\"}\r\n                        selectedColor={\"#63aea7\"}\r\n                        options={[1, 2, 3]}\r\n                        onSelect={functions.changeLayer}\r\n                        selected={data.layer}\r\n                    />\r\n                </div>\r\n                <div className=\"tempo-changers-wrapper\">\r\n                    <div className=\"bottom-right-text\">\r\n                        Tempo\r\n                    </div>\r\n                    {data.TempoChangers.map((e) => {\r\n                        return <button\r\n                            key={e.id}\r\n                            onClick={() => functions.handleTempoChanger(e)}\r\n                            style={{ backgroundColor: \"#\" + e.color.toString(16) }}\r\n                        >\r\n                            {e.text}\r\n                        </button>\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerKeyboard","import { TempoChangers } from \"../SongUtils\"\r\nimport * as PIXI from \"pixi.js\"\r\nimport {notesPerColumn } from \"../../appConfig\"\r\nlet noteData = {\r\n    background: \"#d3bd8e\",\r\n    border: \"#de4545\",\r\n    center: \"#de4545\"\r\n}\r\n\r\nlet horizontalLineBreak = notesPerColumn / 3\r\nlet standards = [\r\n    {\r\n        color: 0x515c6f //lighter\r\n    },\r\n    {\r\n        color: 0x485363 //darker\r\n    },\r\n    {\r\n        color: 0x1a968b //selected\r\n    },\r\n    {\r\n        color: 0xd6722f\r\n    }\r\n]\r\nlet notes = [\"000\", \"001\", \"010\", \"011\", \"100\", \"101\", \"110\", \"111\"]\r\nlet breakpoints = [\r\n    {\r\n        type: \"short\",\r\n        color: \"#282875\"\r\n    },\r\n    {\r\n        type: \"long\",\r\n        color: \"#282875\"\r\n    }\r\n]\r\nclass ComposerCache {\r\n    constructor(width, height, margin = 4, timelineHeight = 30) {\r\n        this.width = width\r\n        this.height = height\r\n        this.cache = {\r\n            columns: [],\r\n            notes: {},\r\n            standard: [],\r\n            columnsLarger: [],\r\n            standardLarger: [],\r\n            breakpoints: []\r\n        }\r\n        this.notesFigures = []\r\n        this.timelineHeight = timelineHeight\r\n        this.margin = margin\r\n        this.noteWidth = this.width\r\n        this.noteHeight = this.height / notesPerColumn\r\n        this.app = new PIXI.Application({\r\n            width: width,\r\n            height: height,\r\n        })\r\n        this.generate()\r\n    }\r\n    generate = () => {\r\n\r\n        TempoChangers.forEach(tempoChanger => {\r\n            let canvas = drawColumn(tempoChanger, this, 1)\r\n            this.cache.columns.push(canvas.toDataURL())\r\n        })\r\n        standards.forEach(standardColumn => {\r\n            let canvas = drawColumn(standardColumn, this, 1)\r\n            this.cache.standard.push(canvas.toDataURL())\r\n        })\r\n        standards.forEach(standardColumn => {\r\n            let canvas = drawColumn(standardColumn, this, 3)\r\n            this.cache.standardLarger.push(canvas.toDataURL())\r\n        })\r\n        notes.forEach(note => {\r\n            let roundNess = this.noteWidth > 20 ? 4 : 2\r\n            let canvas = document.createElement(\"canvas\")\r\n            canvas.height = this.noteHeight\r\n            canvas.width = this.noteWidth\r\n            let ctx = canvas.getContext(\"2d\")\r\n            if (note[0] === \"1\") {\r\n                ctx.fillStyle = noteData.background\r\n                roundRect(\r\n                    ctx,\r\n                    this.margin / 2,\r\n                    this.margin / 2,\r\n                    this.noteWidth - this.margin - 1,\r\n                    this.noteHeight - this.margin - 1,\r\n                    roundNess,\r\n                    true,\r\n                    false\r\n                )\r\n            }\r\n            if (note[1] === \"1\") {\r\n                ctx.strokeStyle = noteData.border\r\n                ctx.lineWidth = 2\r\n                roundRect(\r\n                    ctx,\r\n                    this.margin / 2,\r\n                    this.margin / 2,\r\n                    this.noteWidth - this.margin - 1,\r\n                    this.noteHeight - this.margin - 1,\r\n                    roundNess,\r\n                    false,\r\n                    true\r\n                )\r\n            }\r\n            if (note[2] === \"1\") {\r\n                ctx.beginPath()\r\n                ctx.fillStyle = noteData.center\r\n                let ballHeight = this.noteHeight / 4\r\n                ctx.arc(this.noteWidth / 2 - 0.5, this.noteHeight / 2 - 0.5, ballHeight, 0, 2 * Math.PI);\r\n                ctx.fill()\r\n            }\r\n            this.cache.notes[note] = canvas.toDataURL()\r\n        })\r\n        TempoChangers.forEach(tempoChanger => {\r\n            let canvas = drawColumn(tempoChanger, this, 2)\r\n            this.cache.columnsLarger.push(canvas.toDataURL())\r\n        })\r\n        breakpoints.forEach(breakpoint => {\r\n            let canvas = document.createElement(\"canvas\")\r\n            if (breakpoint.type === \"short\") {\r\n                let size = this.timelineHeight / 6\r\n                canvas.height = this.timelineHeight\r\n                canvas.width = size * 2\r\n                let ctx = canvas.getContext(\"2d\")\r\n                ctx.fillStyle = breakpoint.color\r\n                ctx.arc(size, this.timelineHeight / 2, size, 0, 2 * Math.PI);\r\n                ctx.fill()\r\n                this.cache.breakpoints.push(canvas.toDataURL())\r\n            } else {\r\n                canvas.height = this.height\r\n                canvas.width = this.width\r\n                let ctx = canvas.getContext(\"2d\")\r\n                ctx.fillStyle = breakpoint.color\r\n                /*\r\n               ctx.strokeStyle = breakpoint.color\r\n               ctx.lineWidth = 3\r\n                ctx.strokeRect(1,1,this.width - 3,this.height - 2)\r\n                */\r\n                ctx.beginPath();\r\n                ctx.moveTo(0, this.height)\r\n                ctx.lineTo(this.noteWidth / 2, this.height)\r\n                ctx.lineTo(0, this.height - this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.width, this.height)\r\n                ctx.lineTo(this.noteWidth / 2, this.height)\r\n                ctx.lineTo(this.width, this.height - this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(0, 0)\r\n                ctx.lineTo(this.noteWidth / 2, 0)\r\n                ctx.lineTo(0, this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.width, 0)\r\n                ctx.lineTo(this.noteWidth / 2, 0)\r\n                ctx.lineTo(this.width, this.noteHeight)\r\n                ctx.fill();\r\n\r\n                this.cache.breakpoints.push(canvas.toDataURL())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction drawColumn(tempoChanger, self, borderWidth) {\r\n    let canvas = document.createElement(\"canvas\")\r\n    canvas.height = self.height\r\n    canvas.width = self.width\r\n    let ctx = canvas.getContext(\"2d\")\r\n    ctx.fillStyle = \"#\" + tempoChanger.color.toString(16)\r\n    ctx.fillRect(0, 0, self.width, self.height)\r\n    ctx.strokeStyle = borderWidth === 2 ? \"black\" : \"#333333\"\r\n    ctx.lineWidth = borderWidth\r\n    ctx.beginPath()\r\n    ctx.moveTo(self.width, 0)\r\n    ctx.lineTo(self.width, self.height)\r\n    ctx.stroke()\r\n    ctx.strokeStyle = \"#333333\"\r\n    for (let i = 1; i < 3; i++) {\r\n        ctx.lineWidth = 1\r\n        let y = self.noteHeight * horizontalLineBreak * i\r\n        ctx.moveTo(0, y)\r\n        ctx.lineTo(self.width, y)\r\n    }\r\n    ctx.stroke()\r\n    return canvas\r\n}\r\n\r\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\r\n    if (typeof stroke === 'undefined') {\r\n        stroke = true;\r\n    }\r\n    if (typeof radius === 'undefined') {\r\n        radius = 5;\r\n    }\r\n    if (typeof radius === 'number') {\r\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\r\n    } else {\r\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\r\n        for (var side in defaultRadius) {\r\n            radius[side] = radius[side] || defaultRadius[side];\r\n        }\r\n    }\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + radius.tl, y);\r\n    ctx.lineTo(x + width - radius.tr, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n    ctx.lineTo(x + width, y + height - radius.br);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\r\n    ctx.lineTo(x + radius.bl, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n    ctx.lineTo(x, y + radius.tl);\r\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n    ctx.closePath();\r\n    if (fill) {\r\n        ctx.fill();\r\n    }\r\n    if (stroke) {\r\n        ctx.stroke();\r\n    }\r\n\r\n}\r\nexport {\r\n    ComposerCache\r\n}","import React, { Component } from 'react'\r\nimport { Stage, Container, Graphics, Sprite } from '@inlet/react-pixi';\r\nimport { ComposerCache } from \"./ComposerCache\"\r\nimport { faStepBackward, faStepForward, faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"./Composer.css\"\r\nimport isMobile from \"is-mobile\"\r\nimport { composerNotePositions, notesPerColumn, appName } from \"../../appConfig\"\r\nlet NumOfColumnsPerCanvas = 35\r\n\r\nclass ComposerCanvas extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let sizes = document.body.getBoundingClientRect()\r\n        this.sizes = sizes\r\n        NumOfColumnsPerCanvas = Number(this.props.data.settings.columnsPerCanvas.value)\r\n        let width = nearestEven(sizes.width * 0.82)\r\n        let height = nearestEven(sizes.height * 0.45)\r\n\r\n        if (window.screen.width < sizes.height) {\r\n            width = nearestEven(sizes.height * 0.82)\r\n            height = nearestEven(sizes.width * 0.45)\r\n        }\r\n        if(appName === \"Sky\") height = nearestEven(height * 0.95)\r\n        this.state = {\r\n            width: width,\r\n            height: height,\r\n            column: {\r\n                width: calcMinColumnWidth(nearestEven(width)),\r\n                height: height\r\n            },\r\n            timelineHeight: isMobile() ? 25 : 30,\r\n            currentBreakpoint: -1\r\n        }\r\n        this.canvasRef = React.createRef()\r\n        let margin = isMobile() ? 1 : 4\r\n        this.cache = new ComposerCache(this.state.column.width, height, margin, this.state.timelineHeight).cache\r\n        this.stageSelected = false\r\n        this.sliderSelected = false\r\n        this.stagePreviousPositon = 0\r\n        this.throttleStage = 0\r\n    }\r\n    resetPointerDown = (e) => {\r\n        this.stageSelected = false\r\n        this.sliderSelected = false\r\n        this.stagePreviousPositon = 0\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"pointerup\", this.resetPointerDown)\r\n        this.canvasRef.current._canvas.addEventListener(\"wheel\", this.handleWheel)\r\n        window.addEventListener(\"keydown\", this.handleKeyboard)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"pointerup\", this.resetPointerDown)\r\n        window.removeEventListener(\"keydown\", this.handleKeyboard)\r\n        this.canvasRef.current._canvas.removeEventListener(\"wheel\", this.handleWheel)\r\n    }\r\n    handleKeyboard = (event) => {\r\n        let key = event.keyCode\r\n        switch (key) {\r\n            case 39: this.handleBreakpoints(1)\r\n                break;\r\n            case 37: this.handleBreakpoints(-1)\r\n                break;\r\n        }\r\n    }\r\n    handleWheel = (e) => {\r\n        if (e.deltaY < 0) {\r\n            this.props.functions.selectColumn(this.props.data.selected - 1, true)\r\n        } else {\r\n            this.props.functions.selectColumn(this.props.data.selected + 1, true)\r\n        }\r\n    }\r\n    handleClick = (e, type) => {\r\n        let x = e.data.global.x\r\n        if (type === \"click\") {\r\n            let totalWidth = this.state.column.width * this.props.data.columns.length\r\n\r\n            let relativePos = Math.floor(x / this.state.width * totalWidth / this.state.column.width)\r\n            this.props.functions.selectColumn(relativePos)\r\n        }\r\n        if (type === \"up\") {\r\n            this.sliderSelected = false\r\n        }\r\n        if (type === \"down\") {\r\n            this.sliderSelected = true\r\n        }\r\n        if (type === \"downStage\") {\r\n            this.stagePreviousPositon = x\r\n            this.stageSelected = true\r\n        }\r\n    }\r\n    handleStageSlide = (e) => {\r\n        let x = e.data.global.x\r\n        if (this.stageSelected === true) {\r\n            this.throttleStage++\r\n            if (this.throttleStage < 5) return\r\n            this.throttleStage = 0\r\n            let isMovingLeft = this.stagePreviousPositon < x\r\n            let amount = Math.ceil(Math.abs(this.stagePreviousPositon - x) / 8)\r\n            if (amount > 4) amount = 4\r\n            let toAdd = isMovingLeft ? -1 : 1\r\n            this.stagePreviousPositon = x\r\n            let finalPos = this.props.data.selected + toAdd * amount\r\n            if (this.props.data.selected === finalPos) return\r\n            if (finalPos < 0) finalPos = 0\r\n            if (finalPos > this.props.data.columns.length) finalPos = this.props.data.columns.length - 1\r\n            this.props.functions.selectColumn(finalPos, true)\r\n        }\r\n    }\r\n    handleBreakpoints = (direction) => {\r\n        let selectedColumn = this.props.data.selected\r\n        let columns = this.props.data.columns\r\n        let breakpoint\r\n        let breakpoints = this.props.data.breakpoints\r\n        if (direction === 1) {//right\r\n            breakpoint = breakpoints.filter((v) => v > selectedColumn).sort((a, b) => a - b)\r\n        } else {\r\n            breakpoint = breakpoints.filter((v) => v < selectedColumn).sort((a, b) => b - a)\r\n        }\r\n        if (breakpoint.length >= 0) {\r\n            if (columns.length >= breakpoint[0] && breakpoint[0] >= 0) {\r\n                this.props.functions.selectColumn(breakpoint[0])\r\n            }\r\n        }\r\n\r\n    }\r\n    handleSlide = (e) => {\r\n        if (this.sliderSelected) {\r\n            this.throttleStage++\r\n            if (this.throttleStage < 4) return\r\n            this.throttleStage = 0\r\n            let totalWidth = this.state.column.width * this.props.data.columns.length\r\n            let x = e.data.global.x\r\n            let relativePos = Math.floor(x / this.state.width * totalWidth / this.state.column.width)\r\n            this.props.functions.selectColumn(relativePos, true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let s = this.state\r\n        let pixiOptions = {\r\n            backgroundColor: 0x495466,\r\n        }\r\n        const { data, functions } = this.props\r\n        let sizes = this.state.column\r\n        let xPos = (data.selected - NumOfColumnsPerCanvas / 2 + 1) * - sizes.width\r\n        let timelineHeight = this.state.timelineHeight\r\n        let counter = 0\r\n        let switcher = false\r\n        let cache = this.cache\r\n        let beatMarks = Number(data.settings.beatMarks.value)\r\n        let counterLimit = beatMarks === 0 ? 11 : 4 * beatMarks - 1\r\n        let relativeColumnWidth = this.state.width / data.columns.length\r\n        let stageSize = Math.floor(relativeColumnWidth * (NumOfColumnsPerCanvas + 1))\r\n        if (stageSize > this.state.width) stageSize = this.state.width\r\n        let stagePos = relativeColumnWidth * data.selected - (NumOfColumnsPerCanvas / 2 - 1) * relativeColumnWidth\r\n        return <div className=\"canvas-wrapper\" style={{ width: s.width + 6 }}>\r\n            <Stage\r\n                width={s.width}\r\n                height={s.height}\r\n                options={pixiOptions}\r\n                key={this.state.width}\r\n                ref={this.canvasRef}\r\n            >\r\n                <Container\r\n                    anchor={[0.5, 0.5]}\r\n                    x={xPos}\r\n                    interactive={true}\r\n                    pointerdown={(e) => this.handleClick(e, \"downStage\")}\r\n                    pointermove={(e) => this.handleStageSlide(e)}\r\n                >\r\n                    {data.columns.map((column, i) => {\r\n                        if (counter > counterLimit) {\r\n                            switcher = !switcher\r\n                            counter = 0\r\n                        }\r\n                        counter++\r\n                        if (!isVisible(i, data.selected)) return null\r\n                        let tempoChangersCache = (i + 1) % 4 === 0 ? cache.columnsLarger : cache.columns\r\n                        let standardCache = (i + 1) % 4 === 0 ? cache.standardLarger : cache.standard\r\n                        let standardBg = standardCache[Number(switcher)] // boolean is 1 or 0\r\n                        let background = column.tempoChanger === 0 ? standardBg : tempoChangersCache[column.tempoChanger]\r\n                        return <Column\r\n                            cache={cache}\r\n                            key={i}\r\n                            data={column}\r\n                            index={i}\r\n                            sizes={sizes}\r\n                            backgroundCache={background}\r\n                            isToolsSelected={data.toolsColumns.includes(i)}\r\n                            click={functions.selectColumn}\r\n                            isSelected={i === data.selected}\r\n                            isBreakpoint={data.breakpoints.includes(i)}\r\n                        />\r\n\r\n                    })}\r\n\r\n                </Container>\r\n            </Stage>\r\n            <div className=\"timeline-wrapper\" style={{ height: this.state.timelineHeight }}>\r\n                <div className=\"timeline-button\" onClick={() => this.handleBreakpoints(-1)}>\r\n                    <FontAwesomeIcon icon={faStepBackward} />\r\n                </div>\r\n                <div className=\"timeline-button\" onClick={() => this.handleBreakpoints(1)}>\r\n                    <FontAwesomeIcon icon={faStepForward} />\r\n                </div>\r\n\r\n\r\n                <Stage\r\n                    width={s.width}\r\n                    height={timelineHeight}\r\n                    options={{ antialias: true, autoDensity: true,backgroundColor: 0x515c6f }}\r\n                >\r\n                    <Container\r\n                        width={this.state.width}\r\n                        height={this.state.timelineHeight}\r\n                        interactive={true}\r\n                        pointertap={(e) => this.handleClick(e, \"click\")}\r\n                        pointerdown={(e) => this.handleClick(e, \"down\")}\r\n                        pointerup={(e) => this.handleClick(e, \"up\")}\r\n                        pointermove={this.handleSlide}\r\n                        \r\n                    >\r\n                        <Graphics draw={(e) => { fillX(e, this.state.width, this.state.timelineHeight) }} />\r\n                        {data.breakpoints.map(breakpoint => {\r\n                            return <Sprite\r\n                                image={cache.breakpoints[0]}\r\n                                key={breakpoint}\r\n                                x={relativeColumnWidth * breakpoint}\r\n\r\n                            >\r\n                            </Sprite>\r\n                        })}\r\n                    </Container>\r\n\r\n                    <Graphics draw={(e) => drawStage(e, stageSize, this.state.timelineHeight)} x={stagePos} y={2} />\r\n\r\n\r\n                </Stage>\r\n                <div className=\"timeline-button\" onClick={functions.toggleBreakpoint}>\r\n                    <FontAwesomeIcon icon={data.breakpoints.includes(data.selected) ? faMinusCircle : faPlusCircle} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction fillX(g, width, height) {\r\n    g.clear()\r\n    g.beginFill(0x515c6f, 1)\r\n    g.drawRect(0, 0, width, height)\r\n}\r\nfunction drawStage(g, width, height) {\r\n    g.clear()\r\n    g.lineStyle(3, 0x1a968b, 0.8)\r\n    g.drawRoundedRect(0, 0, width - 2, height - 4, 6)\r\n}\r\n\r\nfunction Column(props) {\r\n    let { data, index, sizes, click, cache, backgroundCache, isBreakpoint, isSelected, isToolsSelected } = props\r\n    return <Container\r\n        pointertap={() => click(index)}\r\n        interactive={true}\r\n        x={sizes.width * index}\r\n\r\n    >\r\n        <Sprite\r\n            image={backgroundCache}\r\n            interactiveChildren={false}\r\n        >\r\n            {isSelected || isToolsSelected ? <Sprite\r\n                image={isToolsSelected && !isSelected? cache.standard[3] : cache.standard[2]}\r\n                alpha={isToolsSelected ?0.4 : 0.6}\r\n                zIndex={1}\r\n            >\r\n            </Sprite> : null}\r\n            {isBreakpoint ? <Sprite\r\n                image={cache.breakpoints[1]}\r\n            >\r\n            </Sprite> : null}\r\n        </Sprite>\r\n        {data.notes.map((note) => {\r\n            return <Sprite\r\n                key={note.index}\r\n                image={cache.notes[note.layer]}\r\n                y={positions[note.index] * sizes.height / notesPerColumn}\r\n            >\r\n\r\n            </Sprite>\r\n        })}\r\n\r\n    </Container>\r\n}\r\nfunction calcMinColumnWidth(parentWidth) {\r\n    return nearestEven(parentWidth / NumOfColumnsPerCanvas)\r\n}\r\nfunction nearestEven(num) {\r\n    return 2 * Math.round(num / 2);\r\n}\r\nfunction isVisible(pos, currentPos) {\r\n    let threshold = NumOfColumnsPerCanvas / 2 + 2\r\n    let boundaries = [currentPos - threshold, currentPos + threshold]\r\n    return boundaries[0] < pos && pos < boundaries[1]\r\n}\r\nconst positions = composerNotePositions\r\nexport default ComposerCanvas","import React, { Component, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSave, faMusic, faTimes, faCog, faTrash, faCompactDisc, faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport \"../mainPage/menu.css\"\r\n\r\nimport { FileDownloader, LoggerEvent, ComposerSongSerialization, prepareSongDownload } from \"../SongUtils\"\r\nimport {appName} from '../../appConfig'\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            selectedMenu: \"Settings\",\r\n            selectedSongType: \"composed\",\r\n        }\r\n    }\r\n    toggleMenu = (override) => {\r\n        if (typeof override !== \"boolean\") override = undefined\r\n        let newState = override !== undefined ? override : !this.state.open\r\n        this.setState({\r\n            open: newState,\r\n        })\r\n        if (newState === false) {\r\n            this.props.functions.toggleMenuVisible()\r\n        }\r\n    }\r\n    changeSelectedSongType = (name) => {\r\n        this.setState({\r\n            selectedSongType: name\r\n        })\r\n    }\r\n    selectSideMenu = (selection) => {\r\n        if (selection === this.state.selectedMenu && this.state.open) {\r\n            return this.setState({\r\n                open: false,\r\n            })\r\n        }\r\n        this.setState({\r\n            selectedMenu: selection,\r\n            open: true\r\n        })\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        if(song.data.isComposedVersion){\r\n            song = ComposerSongSerialization(song)\r\n        }\r\n        let songName = song.name\r\n        if(appName === \"Sky\"){\r\n            //adds old format into the sheet\r\n            song = prepareSongDownload(song)\r\n        }\r\n        if(!Array.isArray(song)) song = [song]\r\n        song.forEach(song1 => {\r\n            song1.data.appName = appName\r\n        })\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json,`${songName}.${appName.toLowerCase()}sheet.json`)\r\n        new LoggerEvent(\"Success\", \"Song downloaded\").trigger()\r\n    }\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let sideClass = this.state.open ? \"side-menu menu-open\" : \"side-menu\"\r\n        let selectedMenu = this.state.selectedMenu\r\n        const { loadSong, removeSong, updateSong, changePage, handleSettingChange, changeVolume,createNewSong,changeMidiVisibility } = functions\r\n        let songFunctions = {\r\n            loadSong: loadSong,\r\n            removeSong: removeSong,\r\n            toggleMenu: this.toggleMenu,\r\n            downloadSong: this.downloadSong\r\n        }\r\n        let songs = data.songs.filter(song => !song.data?.isComposedVersion)\r\n        let composedSongs = data.songs.filter(song => song.data?.isComposedVersion)\r\n        let hasUnsaved = data.hasChanges ? \"margin-top-auto not-saved\" : \"margin-top-auto\"\r\n        let menuClass = data.menuOpen ? \"menu menu-visible\" : \"menu\"\r\n        return <div className=\"menu-wrapper\">\r\n            <div className={menuClass}>\r\n                <CloseMenu action={this.toggleMenu} />\r\n                <MenuItem type=\"Save\" action={() => updateSong(data.currentSong)} className={hasUnsaved}>\r\n                    <FontAwesomeIcon icon={faSave} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Songs\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faMusic} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Settings\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faCog} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Composer\" action={() => changePage(\"\")} className=\"inverted\">\r\n                    <FontAwesomeIcon icon={faCompactDisc} className=\"icon\" />\r\n                </MenuItem>\r\n            </div>\r\n            <div className={sideClass}>\r\n                <MenuPanel title=\"No selection\" visible={selectedMenu}>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Songs\" visible={selectedMenu}>\r\n                    <div className=\"songs-buttons-wrapper\">\r\n                    <button className=\"genshin-button\" onClick={() => {changeMidiVisibility(true); this.toggleMenu()}}>\r\n                            Create from MIDI\r\n                        </button>\r\n                        <button className=\"genshin-button\" onClick={createNewSong}>\r\n                            Create new song\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"tab-selector-wrapper\">\r\n                        <button\r\n                            className={this.state.selectedSongType === \"recorded\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"recorded\")}\r\n                        >\r\n                            Recorded\r\n                        </button>\r\n                        <button\r\n                            className={this.state.selectedSongType === \"composed\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"composed\")}\r\n                        >\r\n                            Composed\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"songs-wrapper no-margin\">\r\n                        {this.state.selectedSongType === \"recorded\"\r\n                            ? songs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={songFunctions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n\r\n                            : composedSongs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={songFunctions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Settings\" visible={selectedMenu}>\r\n                    {Object.entries(data.settings).map(([key, data]) => {\r\n                        return <SettingsRow\r\n                            key={key + data.value}\r\n                            objKey={key}\r\n                            data={data}\r\n                            changeVolume={changeVolume}\r\n                            update={handleSettingChange}\r\n                        >\r\n\r\n                        </SettingsRow>\r\n                    })}\r\n                    {!checkIfTWA() && <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Support me\r\n                    </a>}\r\n                </MenuPanel>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction MenuPanel(props) {\r\n    let className = props.visible === props.title ? \"menu-panel menu-panel-visible\" : \"menu-panel\"\r\n    return <div className={className}>\r\n        <div className=\"menu-title\">\r\n            {props.title}\r\n        </div>\r\n        <div className=\"panel-content-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\nfunction CloseMenu(props) {\r\n    return <div onClick={() => props.action(false)} className=\"close-menu menu-item\">\r\n        <FontAwesomeIcon icon={faTimes} className=\"icon\" />\r\n    </div>\r\n}\r\n\r\nfunction SongRow(props) {\r\n    const { data, functions } = props\r\n    const { removeSong, toggleMenu, loadSong, downloadSong } = functions\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\" onClick={() => {\r\n            loadSong(data)\r\n            toggleMenu(false)\r\n        }}>\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => removeSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nfunction SettingsRow(props) {\r\n    const { data, update, objKey, changeVolume } = props\r\n    const [valueHook, setter] = useState(data.value)\r\n    const [volumeHook, setterVolume] = useState(data.volume)\r\n    function handleChange(e) {\r\n        let el = e.target\r\n        let value = data.type === \"checkbox\" ? el.checked : el.value\r\n        if (data.type === \"number\") {\r\n            value = Number(value)\r\n            e.target.value = \"\" //have to do this to remove a react bug that adds a 0 at the start\r\n            if (value < data.threshold[0] || value > data.threshold[1]) {\r\n                return\r\n            }\r\n        }\r\n        setter(value)\r\n    }\r\n    function sendChange() {\r\n        if (data.value === valueHook) return\r\n        data.value = valueHook\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function sendChangeSelect(e) {\r\n        let value = e.target.value\r\n        data.value = value\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function handleVolume(e) {\r\n        setterVolume(Number(e.target.value))\r\n    }\r\n    function sendVolumeChange() {\r\n        changeVolume({\r\n            key: objKey,\r\n            value: volumeHook\r\n        })\r\n    }\r\n    if (objKey === \"settingVesion\") return null\r\n    return <div className=\"settings-row\">\r\n        <div>\r\n            {data.name}\r\n        </div>\r\n        {data.type === \"select\"\r\n            ? <select value={data.value}\r\n                onChange={sendChangeSelect}\r\n            >\r\n                {data.options.map(e => {\r\n                    return <option value={e} key={e}>{e}</option>\r\n                })}\r\n            </select>\r\n            : null\r\n        }\r\n        {[\"number\", \"text\", \"checkbox\"].includes(data.type) ?\r\n            <input\r\n                type={data.type}\r\n                value={valueHook}\r\n                checked={valueHook}\r\n                onChange={handleChange}\r\n                onBlur={sendChange}\r\n            />\r\n            : null\r\n        }\r\n        {data.type === \"instrument\"\r\n            ? <div className=\"instrument-picker\">\r\n                <select value={data.value}\r\n                    onChange={sendChangeSelect}\r\n                >\r\n                    {data.options.map(e => {\r\n                        return <option value={e} key={e}>{e}</option>\r\n                    })}\r\n                </select>\r\n\r\n                <input\r\n                    type=\"range\"\r\n                    min={1}\r\n                    max={100}\r\n                    value={volumeHook}\r\n                    onChange={handleVolume}\r\n                    onPointerUp={sendVolumeChange}\r\n                />\r\n            </div>\r\n            : null\r\n        }\r\n    </div>\r\n}\r\n\r\nfunction checkIfTWA(){\r\n    let isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n    return isTwa\r\n  }\r\n\r\nclass MenuItem extends Component {\r\n    render() {\r\n        let className = this.props.className ? `menu-item ${this.props.className}` : \"menu-item\"\r\n        return <div\r\n            className={className}\r\n            onClick={() => this.props.action(this.props.type)}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n}\r\nexport default Menu","import React, { Component } from 'react'\r\nimport ZangoDb from \"zangodb\"\r\nimport { faPlay, faPlus, faPause, faBars, faChevronLeft, faChevronRight, faTools } from \"@fortawesome/free-solid-svg-icons\"\r\nimport * as workerTimers from 'worker-timers';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport rotateImg from \"../../assets/icons/rotate.svg\"\r\nimport addCell from \"../../assets/icons/addCell.svg\"\r\nimport removeCell from \"../../assets/icons/removeCell.svg\"\r\nimport { appName } from \"../../appConfig\"\r\n\r\nimport MidiImport from \"./MidiParser\"\r\nimport ComposerTools from \"./ComposerTools\"\r\nimport ComposerKeyboard from \"./ComposerKeyboard\"\r\nimport ComposerCanvas from \"./ComposerCanvas\"\r\nimport Menu from \"./Menu\"\r\n\r\nimport { asyncConfirm, asyncPrompt } from \"../AsyncPrompts\"\r\nimport { ComposerSettings } from \"../SettingsObj\"\r\nimport Instrument from \"../Instrument\"\r\nimport {\r\n    ComposedSong, LoggerEvent, ColumnNote, Column, TempoChangers,\r\n    ComposerSongSerialization, ComposerSongDeSerialization, getPitchChanger, RecordingToComposed\r\n} from \"../SongUtils\"\r\n\r\nclass Composer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.db = new ZangoDb.Db(appName, { songs: [] })\r\n        this.dbCol = {\r\n            songs: this.db.collection(\"songs\")\r\n\r\n        }\r\n        let settings = this.getSettings()\r\n        this.playbackInterval = undefined\r\n        this.state = {\r\n            instrument: new Instrument(),\r\n            layers: [new Instrument(), new Instrument()],\r\n            audioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            reverbAudioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            songs: [],\r\n            isPlaying: false,\r\n            song: new ComposedSong(\"Untitled\"),\r\n            settings: settings,\r\n            menuOpen: false,\r\n            layer: 1,\r\n            toolsColumns: [],\r\n            toolsVisible: false,\r\n            midiVisible: false,\r\n        }\r\n        this.copiedColums = []\r\n        this.changes = 0\r\n        this.syncSongs()\r\n        this.loadInstrument(settings.instrument.value, 1)\r\n        this.loadInstrument(settings.layer2.value, 2)\r\n        this.loadInstrument(settings.layer3.value, 3)\r\n        try {\r\n            this.loadReverb()\r\n        } catch(e) {\r\n            console.log(\"Error with reverb1\")\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"keydown\", this.handleKeyboard)\r\n        if (window.location.hostname !== \"localhost\") {\r\n            window.addEventListener(\"beforeunload\", (event) => {\r\n                event.preventDefault()\r\n                event.returnValue = ''\r\n            })\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyboard)\r\n        let state = this.state\r\n        state.isPlaying = false\r\n    }\r\n    componentDidCatch() {\r\n        this.setState({\r\n            song: new ComposedSong(\"Untitled\")\r\n        })\r\n        new LoggerEvent(\"Warning\", \"There was an error with the song! Restoring default...\").trigger()\r\n    }\r\n    handleAutoSave = () => {\r\n        this.changes++\r\n        if (this.changes > 5 && this.state.settings.autosave.value) {\r\n            if (this.state.song.name !== \"Untitled\") {\r\n                this.updateSong(this.state.song)\r\n            }\r\n\r\n        }\r\n    }\r\n    loadReverb() {\r\n        let audioCtx = this.state.audioContext\r\n        fetch(\"./assets/audio/reverb4.wav\")\r\n            .then(r => r.arrayBuffer().catch((e) => { console.log(\"Error with reverb1\",e) }))\r\n            .then(b => audioCtx.decodeAudioData(b, (impulse_response) => {\r\n                let convolver = audioCtx.createConvolver()\r\n                let gainNode = audioCtx.createGain()\r\n                gainNode.gain.value = 2.5\r\n                convolver.buffer = impulse_response\r\n                convolver.connect(gainNode)\r\n                gainNode.connect(audioCtx.destination)\r\n                this.setState({\r\n                    reverbAudioContext: convolver\r\n                })\r\n            })).catch((e) => {\r\n                console.log(\"Error with reverb2\",e)\r\n            })\r\n    }\r\n    getSettings = () => {\r\n        let storedSettings = localStorage.getItem(appName + \"_Composer_Settings\")\r\n        try {\r\n            storedSettings = JSON.parse(storedSettings)\r\n        } catch (e) {\r\n            storedSettings = null\r\n        }\r\n        if (storedSettings !== null) {\r\n            if (storedSettings.settingVesion !== ComposerSettings.settingVesion) {\r\n                this.updateSettings(ComposerSettings)\r\n                return ComposerSettings\r\n            }\r\n            return storedSettings\r\n        }\r\n        return ComposerSettings\r\n    }\r\n    updateSettings = (override) => {\r\n        let state\r\n        if (override !== undefined) {\r\n            state = override\r\n        } else {\r\n            state = this.state.settings\r\n        }\r\n        localStorage.setItem(appName + \"_Composer_Settings\", JSON.stringify(state))\r\n    }\r\n    handleSettingChange = (setting) => {\r\n        let settings = this.state.settings\r\n        let data = setting.data\r\n        settings[setting.key].value = data.value\r\n        if (data.songSetting) {\r\n            this.state.song[setting.key] = data.value\r\n        }\r\n        if (setting.key === \"instrument\") this.loadInstrument(data.value, 1)\r\n        if (setting.key === \"layer2\") this.loadInstrument(data.value, 2)\r\n        if (setting.key === \"layer3\") this.loadInstrument(data.value, 3)\r\n        this.setState({\r\n            settings: settings,\r\n            song: this.state.song\r\n        }, () => {\r\n            this.updateSettings()\r\n        })\r\n    }\r\n    loadInstrument = async (name, layer) => {\r\n        if (layer === 1) {\r\n            let newInstrument = new Instrument(name)\r\n            await newInstrument.load(this.state.audioContext)\r\n            this.setState({\r\n                instrument: newInstrument\r\n            })\r\n        } else {\r\n            let newInstrument = new Instrument(name)\r\n            let layers = this.state.layers\r\n            layers[layer - 2] = newInstrument\r\n            await newInstrument.load(this.state.audioContext)\r\n            this.setState({\r\n                layers: layers\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n    changeVolume = (obj) => {\r\n        let settings = this.state.settings\r\n        if (obj.key === \"instrument\") {\r\n            settings.instrument.volume = obj.value\r\n            this.state.instrument.changeVolume(obj.value)\r\n        }\r\n        if (obj.key === \"layer2\") {\r\n            settings.layer2.volume = obj.value\r\n            this.state.layers[0].changeVolume(obj.value)\r\n        }\r\n        if (obj.key === \"layer3\") {\r\n            settings.layer3.volume = obj.value\r\n            this.state.layers[1].changeVolume(obj.value)\r\n        }\r\n        this.setState({\r\n            settings: settings\r\n        }, () => this.updateSettings())\r\n    }\r\n    handleKeyboard = (event) => {\r\n        let key = event.keyCode\r\n        /*\r\n            let note = this.state.instrument.layout.find(e => e.noteNames.keyboard === letter)\r\n            if (note !== undefined) {\r\n                this.handleClick(note)\r\n            }\r\n        */\r\n        if (document.activeElement.tagName === \"INPUT\") return\r\n        switch (key) {\r\n            case 68: this.selectColumn(this.state.song.selected + 1)\r\n                break;\r\n            case 65: this.selectColumn(this.state.song.selected - 1)\r\n                break;\r\n            case 49: this.handleTempoChanger(TempoChangers[0])\r\n                break;\r\n            case 50: this.handleTempoChanger(TempoChangers[1])\r\n                break;\r\n            case 51: this.handleTempoChanger(TempoChangers[2])\r\n                break;\r\n            case 52: this.handleTempoChanger(TempoChangers[3])\r\n                break;\r\n            case 32: this.togglePlay()\r\n                break;\r\n            case 81: this.removeColumns(1, this.state.song.selected)\r\n                break;\r\n            case 69: this.addColumns(1, this.state.song.selected)\r\n                break;\r\n            case \"\":\r\n                break;\r\n        }\r\n    }\r\n    playSound = (instrument, index) => {\r\n        try{\r\n            const source = this.state.audioContext.createBufferSource()\r\n            let note = instrument.layout[index]\r\n            if(note === undefined) return\r\n            //TODO export below to Instrument.js\r\n            source.buffer = note.buffer\r\n            source.playbackRate.value = getPitchChanger(this.state.settings.pitch.value)\r\n            source.connect(instrument.gain)\r\n            if (this.state.settings.caveMode.value) {\r\n                instrument.gain.connect(this.state.reverbAudioContext)\r\n            } else {\r\n                instrument.gain.connect(this.state.audioContext.destination)\r\n            }\r\n            source.start(0)\r\n        }catch(e){\r\n\r\n        }\r\n    }\r\n    changePitch = (value) => {\r\n        const {settings} = this.state\r\n        settings.pitch.value = value\r\n        this.setState({\r\n            settings: settings\r\n        }, () => this.updateSettings())\r\n    }\r\n    handleClick = (note) => {\r\n        let column = this.state.song.columns[this.state.song.selected]\r\n        let index = column.notes.findIndex((n) => {\r\n            return note.index === n.index\r\n        })\r\n        let layerIndex = this.state.layer - 1\r\n        if (index < 0) { //if it doesn't exist, create a new one\r\n            let columnNote = new ColumnNote(note.index)\r\n            columnNote.layer = replaceAt(columnNote.layer, layerIndex, \"1\")\r\n            column.notes.push(columnNote)\r\n        } else { //if it exists, toggle the current layer and if it's 000 delete it\r\n            let currentNote = column.notes[index]\r\n            currentNote.layer = replaceAt(currentNote.layer, layerIndex, currentNote.layer[layerIndex] === \"0\" ? \"1\" : \"0\")\r\n            if (currentNote.layer === \"000\") column.notes.splice(index, 1)\r\n        }\r\n        this.setState({\r\n            song: this.state.song\r\n        })\r\n        this.handleAutoSave()\r\n        let instrument = this.state.instrument\r\n        if (this.state.layer > 1) {\r\n            instrument = this.state.layers[this.state.layer - 2]\r\n        }\r\n        this.playSound(instrument, note.index)\r\n    }\r\n    syncSongs = async () => {\r\n        let songs = await this.dbCol.songs.find().toArray()\r\n        songs = songs.map(song => {\r\n            if (song.data.isComposedVersion) {\r\n                return ComposerSongDeSerialization(song)\r\n            }\r\n            return song\r\n        })\r\n        this.setState({\r\n            composedSongs: songs,\r\n            songs: songs\r\n        })\r\n    }\r\n    addSong = async (song) => {\r\n        if (await this.songExists(song.name)) {\r\n            return new LoggerEvent(\"Warning\", \"A song with this name already exists! \\n\" + song.name).trigger()\r\n        }\r\n        await this.dbCol.songs.insert(ComposerSongSerialization(song))\r\n        this.syncSongs()\r\n    }\r\n    updateSong = async (song) => {\r\n        if (song.name === \"Untitled\") {\r\n            let name = await this.askForSongName()\r\n            if (name === null) return\r\n            song.name = name\r\n            return this.addSong(song)\r\n\r\n        }\r\n        return new Promise(async resolve => {\r\n            let settings = this.state.settings\r\n            if (await this.songExists(song.name)) {\r\n                song.instruments[0] = settings.instrument.value\r\n                song.instruments[1] = settings.layer2.value\r\n                song.instruments[2] = settings.layer3.value\r\n                await this.dbCol.songs.update({ name: song.name }, ComposerSongSerialization(song))\r\n                console.log(\"song saved:\", song.name)\r\n                this.changes = 0\r\n                this.syncSongs()\r\n            } else {\r\n                if(song.name.includes(\"- Composed\")){\r\n                    let name = await this.askForSongName()\r\n                    if (name === null) return resolve()\r\n                    song.name = name\r\n                    await this.dbCol.songs.insert(ComposerSongSerialization(song))\r\n                    this.syncSongs()\r\n                    return resolve()\r\n                }\r\n                console.log(\"song doesn't exist\")\r\n                song.name = \"Untitled\"\r\n                this.updateSong(song)\r\n            }\r\n            resolve()\r\n        })\r\n    }\r\n    askForSongName = () => {\r\n        return new Promise(async resolve => {\r\n            let promptString = \"Write song name, press cancel to ignore\"\r\n            while (true) {\r\n                let songName = await asyncPrompt(promptString)\r\n                if (songName === null) return resolve(null)\r\n                if (songName !== \"\") {\r\n                    if (await this.songExists(songName)) {\r\n                        promptString = \"This song already exists: \" + songName\r\n                    } else {\r\n                        return resolve(songName)\r\n                    }\r\n                } else {\r\n                    promptString = \"Write song name, press cancel to ignore\"\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n    askForSongUpdate = () => {\r\n        return new Promise(async resolve => {\r\n            let result = await asyncConfirm(`You have unsaved changes to the song: \"${this.state.song.name}\" do you want to save now?`)\r\n            resolve(result)\r\n        })\r\n    }\r\n    songExists = async (name) => {\r\n        return await this.dbCol.songs.findOne({ name: name }) !== undefined\r\n    }\r\n    createNewSong = async () => {\r\n        if (this.state.song.name !== \"Untitled\" && this.changes > 0) {\r\n            let wantsToSave = await this.askForSongUpdate()\r\n            if (wantsToSave) {\r\n                await this.updateSong(this.state.song)\r\n            }\r\n        }\r\n        let name = await this.askForSongName()\r\n        if (name === null) return\r\n        let song = new ComposedSong(name)\r\n        this.changes = 0\r\n        this.setState({\r\n            song: song\r\n        }, () => this.addSong(song))\r\n    }\r\n    removeSong = async (name) => {\r\n        let confirm = await asyncConfirm(\"Are you sure you want to delete the song: \" + name)\r\n        if (confirm) this.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n    }\r\n\r\n    loadSong = async (song) => {\r\n        const state = this.state\r\n        song = JSON.parse(JSON.stringify(song)) //lose reference\r\n        if (!song.data.isComposedVersion) {\r\n            song = RecordingToComposed(song)\r\n            song.name += \" - Composed\"\r\n        }\r\n        if (this.changes !== 0) {\r\n            let confirm = state.settings.autosave.value && state.song.name !== \"Untitled\"\r\n            if (!confirm && state.song.columns.length > 0) {\r\n                confirm = await asyncConfirm(`You have unsaved changes to the song: \"${state.song.name}\" do you want to save? UNSAVED CHANGES WILL BE LOST`)\r\n            }\r\n            if (confirm) await this.updateSong(state.song)\r\n        }\r\n\r\n        let settings = this.state.settings\r\n        settings.bpm.value = song.bpm\r\n        settings.pitch.value = song.pitch\r\n        if (settings.instrument.value !== song.instruments[0]) {\r\n            this.loadInstrument(song.instruments[0], 1)\r\n            settings.instrument.value = song.instruments[0]\r\n        }\r\n        if (settings.layer2.value !== song.instruments[1]) {\r\n            this.loadInstrument(song.instruments[1], 2)\r\n            settings.layer2.value = song.instruments[1]\r\n        }\r\n        if (settings.layer3.value !== song.instruments[2]) {\r\n            this.loadInstrument(song.instruments[2], 3)\r\n            settings.layer3.value = song.instruments[2]\r\n        }\r\n        this.changes = 0\r\n        console.log(\"song loaded:\", song)\r\n        this.setState({\r\n            song: song,\r\n            settings: settings,\r\n            toolsColumns: []\r\n        })\r\n    }\r\n\r\n    addColumns = (amount = 1, position = \"end\") => {\r\n        return new Promise(resolve => {\r\n            let columns = new Array(amount).fill().map(() => new Column())\r\n            let songColumns = this.state.song.columns\r\n            if (position === \"end\") {\r\n                songColumns.push(...columns)\r\n            } else {\r\n                songColumns.splice(position + 1, 0, ...columns)\r\n            }\r\n            if (amount === 1) this.selectColumn(this.state.song.selected + 1)\r\n            this.handleAutoSave()\r\n            this.setState({\r\n                song: this.state.song\r\n            }, resolve)\r\n        })\r\n\r\n    }\r\n    removeColumns = (amount, position) => {\r\n        let song = this.state.song\r\n        if (song.columns.length < 16) return\r\n        let indexes = new Array(amount).fill().map((e, i) => position + i)\r\n        indexes.forEach(index => {\r\n            if (song.breakpoints.includes(index)) this.toggleBreakpoint(index)\r\n        })\r\n        song.columns.splice(position, amount)\r\n        if (song.columns.length <= song.selected) this.selectColumn(song.selected - 1)\r\n        this.handleAutoSave()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    //----------------------------------------------//\r\n\r\n    togglePlay = async (override) => {\r\n        let newState = typeof override === \"boolean\" ? override : !this.state.isPlaying\r\n        this.setState({\r\n            isPlaying: newState\r\n        }, async () => {\r\n            if (this.state.isPlaying) this.selectColumn(this.state.song.selected)\r\n            let pastError = 0\r\n            let previousTime = new Date().getTime()\r\n            while (this.state.isPlaying) {\r\n                const { song, settings } = this.state\r\n                let tempoChanger = TempoChangers[song.columns[song.selected].tempoChanger]\r\n                let msPerBPM = Math.floor(60000 / settings.bpm.value * tempoChanger.changer) + pastError\r\n                previousTime = new Date().getTime()\r\n                await delayMs(msPerBPM)\r\n                if (!this.state.isPlaying) break\r\n                this.handleTick()\r\n                pastError = previousTime + msPerBPM - new Date().getTime()\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    handleTick = () => {\r\n        let newIndex = this.state.song.selected + 1\r\n        if (this.state.isPlaying && newIndex > this.state.song.columns.length - 1) {\r\n            return this.togglePlay(false)\r\n        }\r\n        this.selectColumn(this.state.song.selected + 1)\r\n\r\n    }\r\n    toggleMenuVisible = () => {\r\n        this.setState({\r\n            menuOpen: !this.state.menuOpen\r\n        })\r\n    }\r\n    toggleBreakpoint = (override) => {\r\n        let song = this.state.song\r\n        let index = typeof override === \"number\" ? override : song.selected\r\n        let indexOfBreakpoint = song.breakpoints.indexOf(index)\r\n        if (indexOfBreakpoint >= 0 && song.columns.length > index) {\r\n            song.breakpoints.splice(indexOfBreakpoint, 1)\r\n        } else if (song.columns.length > index) {\r\n            song.breakpoints.push(index)\r\n        }\r\n        this.validateBreakpoints()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    handleTempoChanger = (changer) => {\r\n        let song = this.state.song\r\n        song.columns[this.state.song.selected].tempoChanger = changer.id\r\n        this.handleAutoSave()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    changePage = async (page) => {\r\n        if (this.changes !== 0) {\r\n            let confirm = await asyncConfirm(`You have unsaved changes to the song: \"${this.state.song.name}\" do you want to save? UNSAVED CHANGES WILL BE LOST`)\r\n            if (confirm) {\r\n                await this.updateSong(this.state.song)\r\n            }\r\n        }\r\n\r\n        this.props.changePage(page)\r\n    }\r\n    selectColumn = (index, ignoreAudio) => {\r\n        const state = this.state\r\n        let song = state.song\r\n        if (index < 0 || index > song.columns.length - 1) return\r\n        let currentColumn = state.song.columns[index]\r\n        song.selected = index\r\n        let toolsColumns = state.toolsColumns\r\n        if (state.toolsVisible && this.copiedColums.length === 0) {\r\n            toolsColumns.push(index)\r\n            let min = Math.min(...toolsColumns)\r\n            let max = Math.max(...toolsColumns)\r\n            toolsColumns = new Array(max - min + 1).fill().map((e, i) => min + i)\r\n        }\r\n        this.setState({\r\n            song: song,\r\n            toolsColumns: toolsColumns\r\n        })\r\n\r\n        if (ignoreAudio) return\r\n        currentColumn.notes.forEach(note => {\r\n            if (note.layer[0] === \"1\") this.playSound(state.instrument, note.index)\r\n            if (note.layer[1] === \"1\") this.playSound(state.layers[0], note.index)\r\n            if (note.layer[2] === \"1\") this.playSound(state.layers[1], note.index)\r\n        })\r\n    }\r\n    changeLayer = (layer) => {\r\n        this.setState({\r\n            layer: layer\r\n        })\r\n    }\r\n    //-----------------------TOOLS---------------------//\r\n    toggleTools = () => {\r\n        this.setState({\r\n            toolsVisible: !this.state.toolsVisible,\r\n            toolsColumns: this.state.toolsVisible ? [] : [this.state.song.selected]\r\n        })\r\n        this.copiedColums = []\r\n    }\r\n    copyColumns = (layer) => {\r\n        this.copiedColums = []\r\n        this.state.toolsColumns.forEach((index) => {\r\n            let column = this.state.song.columns[index]\r\n            if (column !== undefined) this.copiedColums.push(column)\r\n        })\r\n        this.copiedColums = JSON.parse(JSON.stringify(this.copiedColums)) // removing reference\r\n        if (layer !== 'all') {\r\n            this.copiedColums = this.copiedColums.map(column => {\r\n                column.notes = column.notes.filter(e => e.layer[layer - 1] === '1')\r\n                column.notes = column.notes.map(e => {\r\n                    e.layer = '000'\r\n                    e.layer = replaceAt(e.layer, layer - 1, '1')\r\n                    return e\r\n                })\r\n                return column\r\n            })\r\n        }\r\n        this.setState({\r\n            toolsColumns: []\r\n        })\r\n    }\r\n    pasteColumns = async (insert) => {\r\n        let song = this.state.song\r\n        let copiedColumns = JSON.parse(JSON.stringify(this.copiedColums))\r\n        if (!insert) {\r\n            song.columns.splice(song.selected, 0, ...copiedColumns)\r\n        } else {\r\n            copiedColumns.forEach((copiedColumn, i) => {\r\n                let column = song.columns[song.selected + i]\r\n                if (column !== undefined) {\r\n                    copiedColumn.notes.forEach(copiedNote => {\r\n                        let index = column.notes.findIndex(note => copiedNote.index === note.index)\r\n                        if (index < 0) {\r\n                            column.notes.push(copiedNote)\r\n                        } else {\r\n                            for (let j = 0; j < 3; j++) {\r\n                                if (copiedNote.layer[j] === '1') {\r\n                                    column.notes[index].layer = replaceAt(column.notes[index].layer, j, 1)\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    eraseColumns = (layer) => {\r\n        let song = this.state.song\r\n        if(layer === 'all'){\r\n            this.state.toolsColumns.forEach(columnIndex => {\r\n                let column = song.columns[columnIndex]\r\n                if (column !== undefined) song.columns[columnIndex].notes = []\r\n            })\r\n        }else{\r\n            this.state.toolsColumns.forEach(columnIndex => {\r\n                let column = song.columns[columnIndex]\r\n                if (column !== undefined){\r\n                    song.columns[columnIndex].notes.forEach(note =>{\r\n                        note.layer = replaceAt(note.layer,layer-1,'0')\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    validateBreakpoints = () => {\r\n        let breakpoints = this.state.song.breakpoints.filter(breakpoint => breakpoint < this.state.song.columns.length)\r\n        let song = this.state.song\r\n        song.breakpoints = breakpoints\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    deleteColumns = async () => {\r\n        let song = this.state.song\r\n        song.columns = song.columns.filter((e, i) => !this.state.toolsColumns.includes(i))\r\n        if (song.selected > song.columns.length - 1) song.selected = song.columns.length - 1\r\n        if (song.selected <= 0) song.selected = 0\r\n        if (song.columns.length === 0) await this.addColumns(12, 0)\r\n        this.setState({\r\n            song: song,\r\n            toolsColumns: []\r\n        }, this.validateBreakpoints)\r\n    }\r\n    changeMidiVisibility = (visibility) =>{\r\n        this.setState({\r\n            midiVisible: visibility\r\n        })\r\n    }\r\n    render() {\r\n\r\n        const { state, props } = this\r\n        const { midiVisible } = state\r\n        let song = state.song\r\n        let menuData = {\r\n            songs: state.songs,\r\n            currentSong: state.song,\r\n            settings: state.settings,\r\n            hasChanges: this.changes,\r\n            menuOpen: state.menuOpen\r\n        }\r\n        let menuFunctions = {\r\n            loadSong: this.loadSong,\r\n            removeSong: this.removeSong,\r\n            createNewSong: this.createNewSong,\r\n            changePage: this.changePage,\r\n            updateSong: this.updateSong,\r\n            handleSettingChange: this.handleSettingChange,\r\n            toggleMenuVisible: this.toggleMenuVisible,\r\n            changeVolume: this.changeVolume,\r\n            changeMidiVisibility: this.changeMidiVisibility\r\n        }\r\n        let keyboardFunctions = {\r\n            handleClick: this.handleClick,\r\n            handleTempoChanger: this.handleTempoChanger,\r\n            changeLayer: this.changeLayer\r\n        }\r\n        let keyboardData = {\r\n            keyboard: state.instrument,\r\n            currentColumn: state.song.columns[state.song.selected],\r\n            TempoChangers: TempoChangers,\r\n            layer: state.layer,\r\n            pitch: state.settings.pitch.value,\r\n            isPlaying: state.isPlaying\r\n        }\r\n        let canvasFunctions = {\r\n            selectColumn: this.selectColumn,\r\n            toggleBreakpoint: this.toggleBreakpoint\r\n        }\r\n        let canvasData = {\r\n            columns: song.columns,\r\n            selected: song.selected,\r\n            settings: state.settings,\r\n            breakpoints: state.song.breakpoints,\r\n            toolsColumns: state.toolsColumns\r\n        }\r\n        let toolsData = {\r\n            visible: this.state.toolsVisible,\r\n            copiedColumns: this.copiedColums,\r\n            layer: this.state.layer\r\n        }\r\n        let toolsFunctions = {\r\n            toggleTools: this.toggleTools,\r\n            eraseColumns: this.eraseColumns,\r\n            deleteColumns: this.deleteColumns,\r\n            copyColumns: this.copyColumns,\r\n            pasteColumns: this.pasteColumns\r\n        }\r\n        let midiParserFunctions = {\r\n            loadSong: this.loadSong,\r\n            changeMidiVisibility: this.changeMidiVisibility,\r\n            changePitch: this.changePitch,\r\n        }\r\n        let midiParserData = {\r\n            instruments: [state.instrument, ...state.layers].map(layer => layer.instrumentName),\r\n            selectedColumn: song.selected,\r\n\r\n        }\r\n        return <div className=\"app\">\r\n            {midiVisible && <MidiImport functions={midiParserFunctions} data={midiParserData}/>}\r\n            <div className=\"hamburger\" onClick={this.toggleMenuVisible}>\r\n                <FontAwesomeIcon icon={faBars} />\r\n\r\n            </div>\r\n            <div className=\"rotate-screen\">\r\n                <img src={rotateImg} alt=\"a rotating screen\">\r\n                </img>\r\n                    For a better experience, add the website to the home screen, and rotate your device\r\n            </div>\r\n\r\n            <div className=\"right-panel-composer\">\r\n\r\n                <div className=\"column fill-x\">\r\n\r\n                    <div className=\"top-panel-composer\">\r\n                        <div className=\"buttons-composer-wrapper\">\r\n                            <div className=\"tool\" onClick={() => this.selectColumn(song.selected + 1)}>\r\n                                <FontAwesomeIcon icon={faChevronRight} />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.selectColumn(song.selected - 1)}>\r\n                                <FontAwesomeIcon icon={faChevronLeft} />\r\n                            </div>\r\n\r\n                            <div className=\"tool\" onClick={this.togglePlay}>\r\n                                <FontAwesomeIcon icon={this.state.isPlaying ? faPause : faPlay} />\r\n                            </div>\r\n                        </div>\r\n                        <ComposerCanvas\r\n                            key={this.state.settings.columnsPerCanvas.value}\r\n                            functions={canvasFunctions}\r\n                            data={canvasData}\r\n                        />\r\n                        <div className=\"buttons-composer-wrapper-right\">\r\n\r\n                            <div className=\"tool\" onClick={() => this.addColumns(1, song.selected)}>\r\n                                <img src={addCell} className=\"tool-icon\" alt=\"Add a new cell\"/>\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.removeColumns(1, song.selected)}>\r\n                                <img src={removeCell} className=\"tool-icon\" alt=\"Remove a cell\"/>\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.addColumns(this.state.settings.beatMarks.value * 4, \"end\")}>\r\n                                <FontAwesomeIcon icon={faPlus} />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={this.toggleTools}>\r\n                                <FontAwesomeIcon icon={faTools} />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <ComposerKeyboard\r\n                    functions={keyboardFunctions}\r\n                    data={keyboardData}\r\n                />\r\n            </div>\r\n            <Menu\r\n                data={menuData}\r\n                functions={menuFunctions}\r\n            />\r\n            <ComposerTools\r\n                data={toolsData}\r\n                functions={toolsFunctions}\r\n            />\r\n            <div className=\"song-info\">\r\n                <div>\r\n                    {song.name}\r\n                </div>\r\n                <div>\r\n                    {formatMillis(calculateLength(this.state.song, this.state.song.selected))}\r\n                     /\r\n                    {formatMillis(calculateLength(this.state.song, this.state.song.columns.length))}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\nfunction formatMillis(millis) {\r\n    var minutes = Math.floor(millis / 60000);\r\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n}\r\nfunction calculateLength(song, end) {\r\n    let columns = song.columns\r\n    let bpmPerMs = Math.floor(60000 / song.bpm)\r\n    let totalLength = 0\r\n    columns.forEach((column, i) => {\r\n        if (i > end) return\r\n        totalLength += bpmPerMs * TempoChangers[column.tempoChanger].changer\r\n    })\r\n    return totalLength\r\n}\r\nfunction delayMs(ms) {\r\n    return new Promise(resolve => {\r\n        workerTimers.setTimeout(resolve, ms)\r\n    })\r\n}\r\nfunction replaceAt(string, index, replacement) {\r\n    if (index >= string.length) {\r\n        return string.valueOf();\r\n    }\r\n\r\n    return string.substring(0, index) + replacement + string.substring(index + 1);\r\n}\r\nexport default Composer\r\n\r\n","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport ZangoDb from \"zangodb\"\r\nimport { FileDownloader, LoggerEvent } from \"./SongUtils\"\r\nimport { asyncConfirm } from \"./AsyncPrompts\"\r\nimport { appName } from \"../appConfig\"\r\nclass ErrorPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.db = new ZangoDb.Db(appName, { songs: [] })\r\n        this.dbCol = {\r\n            songs: this.db.collection(\"songs\")\r\n\r\n        }\r\n        this.state = {\r\n            songs: []\r\n        }\r\n        this.syncSongs()\r\n    }\r\n    syncSongs = async () => {\r\n        let songs = await this.dbCol.songs.find().toArray()\r\n        this.setState({\r\n            songs: songs\r\n        })\r\n    }\r\n    deleteSong = async (name) => {\r\n        if (await asyncConfirm(\"Are you sure you want to delete the song: \" + name)) {\r\n            this.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n        }\r\n\r\n    }\r\n    deleteAllSongs = async () =>{\r\n        if (await asyncConfirm(\"Are you sure you want to delete ALL SONGS?\")) {\r\n            this.dbCol.songs.remove({}, this.syncSongs)\r\n        }\r\n    }\r\n    resetSettings = () => {\r\n        localStorage.removeItem(appName+\"_Composer_Settings\")\r\n        localStorage.removeItem(appName+\"_Main_Settings\")\r\n        new LoggerEvent(\"Success\", \"Settings have been reset\").trigger()\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json, `${song.name}.${appName.toLowerCase()}sheet.json`)\r\n    }\r\n    render() {\r\n        return <div className=\"error-page app\">\r\n            <div className=\"error-text-wrapper\">\r\n                There seems to be an error. <br />\r\n                Here you can download or delete your songs,\r\n                try to find what song caused the error and remove it.\r\n            </div>\r\n            <div className=\"error-buttons-wrapper\">\r\n                <button className=\"genshin-button\" onClick={this.resetSettings}>\r\n                    Reset settings\r\n                </button>\r\n                <button className=\"genshin-button\" onClick={this.deleteAllSongs}>\r\n                    Delete all songs\r\n                </button>\r\n            </div>\r\n            <div className=\"error-songs-wrapper\">\r\n                {this.state.songs.map(song => {\r\n                    return <SongRow\r\n                        data={song}\r\n                        functions={\r\n                            {\r\n                                deleteSong: this.deleteSong,\r\n                                downloadSong: this.downloadSong\r\n                            }\r\n                        }\r\n                    >\r\n\r\n                    </SongRow>\r\n                })}\r\n            </div>\r\n            <button\r\n                className=\"error-go-back genshin-button\"\r\n                onClick={() => this.props.changePage(\"\")}\r\n            >\r\n                Go back to main page\r\n            </button>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction SongRow(props) {\r\n    let data = props.data\r\n    let deleteSong = props.functions.deleteSong\r\n    let downloadSong = props.functions.downloadSong\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\">\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => deleteSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ErrorPage","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/mainPage/App';\r\nimport Composer from \"./Components/Composer/Composer\"\r\nimport ErrorPage from \"./Components/ErrorPage\"\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport \"./Components/mainPage/App.css\"\r\nimport { HashRouter, Route, Redirect } from \"react-router-dom\";\r\nimport { LoggerEvent } from \"./Components/SongUtils\"\r\nimport {appName} from \"./appConfig\"\r\nlet pages = [\"\", \"Composer\", \"ErrorPage\"]\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    let path = window.location.href.split(\"/\")\r\n    path = path.length === 0 ? \"\" : path = path[path.length - 1]\r\n    if (!pages.includes(path)) path = \"\"\r\n    this.state = {\r\n      floatingMessage: {\r\n        timestamp: 0,\r\n        visible: false,\r\n        text: \"Text\",\r\n        title: \"Title\"\r\n      },\r\n      hasVisited: localStorage.getItem(appName+\"_Visited\"),\r\n      hasPersistentStorage: navigator.storage && navigator.storage.persist,\r\n      selectedPage: path\r\n    }\r\n    this.checkUpdate()\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('logEvent', this.logEvent);\r\n  }\r\n  changePage = (page) => {\r\n    this.setState({\r\n      selectedPage: page\r\n    })\r\n  }\r\n  componentDidCatch() {\r\n    this.setState({\r\n      selectedPage: \"ErrorPage\"\r\n    })\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('logEvent', this.logEvent);\r\n  }\r\n  askForStorage = async () => {\r\n    try {\r\n      if (navigator.storage && navigator.storage.persist) {\r\n        let result = await navigator.storage.persist()\r\n        if (result) {\r\n          new LoggerEvent(\"Success\", \"Storage permission allowed\").trigger()\r\n        } else {\r\n          new LoggerEvent(\"Warning\", \"Storage permission refused, if you weren't prompt, your browser denied it for you. Don't worry, it will still work fine\",6000).trigger()\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      new LoggerEvent(\"Error\", \"There was an error with setting up persistent storage\").trigger()\r\n    }\r\n    this.closeWelcomeScreen()\r\n  }\r\n  closeWelcomeScreen = () => {\r\n    localStorage.setItem(appName+\"_Visited\", true)\r\n    this.setState({\r\n      hasVisited: true\r\n    })\r\n  }\r\n  hideMessage = () => {\r\n    let state = this.state\r\n    state.floatingMessage.visible = false\r\n    this.setState({\r\n      floatingMessage: state.floatingMessage\r\n    })\r\n  }\r\n  checkUpdate = () => {\r\n    setTimeout(() => {\r\n      let currentVersion = \"1.5\"\r\n      let updateMessage =\r\n        `\r\n          Added MIDI import in the composer, in the song menu you can now import a MIDI file.\r\n        `\r\n      let storedVersion = localStorage.getItem(appName+\"_Version\")\r\n      if(!this.state.hasVisited){\r\n        return localStorage.setItem(appName+\"_Version\", currentVersion)\r\n      }\r\n\r\n      if (currentVersion !== storedVersion) {\r\n        new LoggerEvent(\"Update V\" + currentVersion, updateMessage, 6000).trigger()\r\n        localStorage.setItem(appName+\"_Version\", currentVersion)\r\n      }\r\n    }, 1000)\r\n  }\r\n  logEvent = (error) => {\r\n    error = error.detail\r\n    error.timestamp = new Date().getTime()\r\n    if (typeof error !== \"object\") return\r\n    this.setState({\r\n      floatingMessage: {\r\n        timestamp: error.timestamp,\r\n        visible: true,\r\n        text: error.text,\r\n        title: error.title\r\n      }\r\n    })\r\n    setTimeout(() => {\r\n      if (this.state.floatingMessage.timestamp !== error.timestamp) return\r\n      this.setState({\r\n        floatingMessage: {\r\n          timestamp: 0,\r\n          visible: false,\r\n          text: \"\",\r\n          title: \"\"\r\n        }\r\n      })\r\n    }, error.timeout)\r\n  }\r\n  render() {\r\n    let floatingMessage = this.state.floatingMessage\r\n    let floatingMessageClass = floatingMessage.visible ? \"floating-message floating-message-visible\" : \"floating-message\"\r\n    return <div className=\"index\">\r\n      <div className={floatingMessageClass} onClick={this.hideMessage}>\r\n        <div className=\"floating-message-title\">\r\n          {floatingMessage.title}\r\n        </div>\r\n        <div className=\"floating-message-text\">\r\n          {floatingMessage.text}\r\n        </div>\r\n      </div>\r\n      {[null, false, \"false\"].includes(this.state.hasVisited) ?\r\n        <div className=\"welcome-message\">\r\n          <div className={\"welcome-message-title\"}>Welcome to {appName} music {appName===\"Sky\" ? \"nightly\" : \"\"}</div>\r\n          <div>\r\n            This is a webapp which is run in your browser, if you currently are on one, please add\r\n            the website to the homescreen to have a fullscreen view and a more \"app\" feel.\r\n            <br /><br />\r\n            <div className=\"red-text\">WARNING</div>: Clearing your browser cache / storage might also delete your songs, make sure to\r\n            make a backup sometimes.\r\n            <br /><br />\r\n            {this.state.hasPersistentStorage ?\r\n              <div>\r\n                To prevent your browser from automatically clearing the app storage, click the \"confirm\" button below, if asked,\r\n                allow permission to keep the website data (Persistent storage).\r\n              </div>\r\n              : null\r\n            }\r\n          </div>\r\n          <div className=\"welcome-message-button-wrapper\">\r\n            <button className=\"welcome-message-button\" onClick={this.askForStorage}>\r\n              Confirm\r\n                </button>\r\n          </div>\r\n        </div> : null\r\n      }\r\n      <HashRouter>\r\n        <Redirect to={\"/\" + this.state.selectedPage}></Redirect>\r\n        {this.state.selectedPage === \"ErrorPage\"\r\n          ? <Route exact path={\"/ErrorPage\"}>\r\n            <ErrorPage changePage={this.changePage} />\r\n          </Route>\r\n          : <>\r\n            <Route exact path=\"/\">\r\n              <App changePage={this.changePage} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/Composer\">\r\n              <Composer changePage={this.changePage} />\r\n            </Route>\r\n\r\n          </>\r\n        }\r\n\r\n      </HashRouter>\r\n    </div>\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Index />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nfunction checkIfTWA(){\r\n  let isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n  return isTwa\r\n}\r\n\r\nfunction setIfInTWA(){\r\n  if(checkIfTWA()) return console.log('inTWA')\r\n  let isTwa = document.referrer.includes('android-app://')\r\n  sessionStorage.setItem('isTwa',isTwa)\r\n}\r\n\r\nsetIfInTWA()\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n"],"sourceRoot":""}