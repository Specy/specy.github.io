{"version":3,"sources":["appConfig.js","Components/SongUtils.js","Components/Instrument.js","Components/mainPage/Note.js","Components/mainPage/Keyboard.js","assets/images/mainpage.png","assets/images/composer.png","Components/mainPage/Menu.js","Components/SettingsObj.js","Components/AsyncPrompts.js","assets/icons/rotate.svg","Components/mainPage/App.js","assets/icons/addCell.svg","assets/icons/removeCell.svg","Components/Composer/ComposerTools.js","Components/Composer/ComposerNote.js","Components/Composer/MultiSwitch.js","Components/Composer/ComposerKeyboard.js","Components/Composer/ComposerCache.js","Components/Composer/ComposerCanvas.js","Components/Composer/Menu.js","Components/Composer/Composer.js","Components/ErrorPage.js","serviceWorkerRegistration.js","index.js"],"names":["appName","cssClasses","noteComposer","note","instruments","notesPerColumn","instrumentsData","Lyre","notes","DunDun","Bells","Trumpet","Contrabass","Drum","Flute","Guitar","HandPan","ToyUkulele","Harp","Horn","Piano","Pipa","WinterPiano","Xylophone","Ocarina","layoutData","21","keyboardLayout","split","mobileLayout","keyboardCodes","8","15","keyNames","0","1","2","3","4","5","6","7","9","10","11","pitchArr","composerNotePositions","reverse","importNotePositions","skyImages","Recording","init","start","Date","getTime","console","log","addNote","index","length","push","this","Song","name","data","version","bpm","pitch","isComposed","isComposedVersion","Object","entries","forEach","entry","LoggerEvent","title","text","timeout","trigger","window","dispatchEvent","event","undefined","CustomEvent","detail","PlayingSong","timestamp","FileDownloader","type","download","file","dataType","encodeURIComponent","el","document","createElement","style","body","appendChild","setAttribute","click","remove","TempoChangers","id","changer","color","ComposedSong","breakpoints","columns","selected","Array","fill","e","column","Column","tempoChanger","ComposerSongDeSerialization","song","obj","columnObj","ColumnNote","ComposerToRecording","recordedSong","bpmPerMs","Math","floor","totalTime","ComposerSongSerialization","columnArr","map","layer","prepareSongDownload","finalSong","JSON","parse","stringify","oldFormatNotes","convertedNotes","noteObj","key","time","l","composedToOldFormat","recordedToOldFormat","pitchLevel","indexOf","songNotes","bitsPerPage","isEncrypted","prepareSongImport","isArray","includes","getSongType","Error","result","filter","self","findIndex","n","genshinLayout","Number","RecordingToComposed","oldSkyToNewFormat","instrument","newSkyFormatToGenshin","bpmToMs","composed","converted","grouped","threshold","row","shift","amount","i","splice","groupByNotes","combinations","columnNote","difference","paddingColumns","finalPadding","col","getPitchChanger","pow","toFixed","NoteData","noteNames","url","buffer","ArrayBuffer","Instrument","instrumentName","getNoteFromCode","code","setBuffers","bufferArray","layout","changeVolume","gain","value","load","audioContext","a","createGain","emptyBuffer","createBuffer","sampleRate","requests","Promise","resolve","fetch","then","arrayBuffer","decodeAudioData","catch","all","buffers","instrumentNameTemp","GainNode","instrumentData","keyboard","mobile","Note","props","state","className","clicked","toBeClicked","toBeClickedNext","noteText","isMobile","animation","transition","fadeTime","svgUrl","skyImg","skyText","onPointerDown","preventDefault","clickAction","draggable","alt","src","Component","delayMs","ms","workerTimers","Keyboard","handleKeyboard","repeat","activeElement","tagName","keyCode","handleClick","handlePlayEvent","setState","playTimestamp","playSong","handlePracticeEvent","practiceSong","loadInstrument","newInstrument","songLength","chunks","chunk","delay","startTime","j","songToPractice","setSlider","size","position","changeSliderPosition","sliderState","functions","changeSliderState","previous","playSound","stopSong","indexClicked","isRecording","handleRecording","setTimeout","source","createBufferSource","playbackRate","settings","caveMode","connect","reverbAudioContext","destination","AudioContext","webkitAudioContext","loadReverb","addEventListener","removeEventListener","audioCtx","r","b","impulse_response","convolver","createConvolver","gainNode","keyboardSize","keyboardClass","transform","marginBottom","find","Menu","handleSearchInput","searchInput","clearSearch","searchedSongs","searchSongs","search","encodeURI","json","fetchedSongs","error","toggleMenu","override","newState","open","selectSideMenu","selection","selectedMenu","changeSelectedSongType","selectedSongType","importSong","reader","FileReader","target","addSong","readAsText","downloadSong","_id","songName","song1","toLowerCase","sideClass","handleSettingChange","changePage","songs","composedSongs","searchedSongFunctions","CloseMenu","action","icon","faInfo","faMusic","faCog","faCompactDisc","MenuPanel","visible","onClick","onChange","SongRow","SettingsRow","objKey","update","checkIfTWA","href","placeholder","onInput","faTimes","faSearch","SearchedSong","mainPageImg","faCrosshairs","faDownload","composerImg","marginLeft","Key","children","useState","valueHook","setter","options","checked","onBlur","deleteSong","removeSong","faTrash","MenuItem","play","sessionStorage","getItem","ComposerSettings","settingVesion","songSetting","volume","layer2","layer3","beatMarks","columnsPerCanvas","autosave","MainPageSettings","asyncPrompt","question","container","innerText","input","cancel","ok","append","trim","classList","add","asyncConfirm","background","App","resetDrag","isDragging","handleDragOver","handleDrag","handleDrop","from","dataTransfer","files","getSettings","storedSettings","localStorage","updateSettings","setItem","setting","syncSongs","dbCol","toArray","keyboardData","oldState","practicingSong","thereIsSong","songExists","findOne","insert","recording","handleSliderEvent","playingSong","lastPlayedSong","askForSongName","promptString","toggleRecord","eventData","db","ZangoDb","Db","collection","keyboardFunctions","menuFunctions","menuData","rotateImg","faStop","min","max","faSyncAlt","GenshinButton","active","isTwa","referrer","setIfInTWA","ComposerTools","toggleTools","disabled","copiedColumns","currentTarget","blur","copyColumns","pasteColumns","eraseColumns","deleteColumns","ComposerNote","next","prev","layers","MultiSwitch","backgroundColor","selectedColor","buttonsClass","onSelect","ComposerKeyboard","notesIndexes","currentColumn","hiddenSideMenu","isPlaying","changeLayer","handleTempoChanger","toString","noteData","horizontalLineBreak","standards","ComposerCache","width","height","margin","timelineHeight","generate","canvas","drawColumn","cache","toDataURL","standardColumn","standard","standardLarger","roundNess","noteWidth","noteHeight","ctx","getContext","fillStyle","roundRect","strokeStyle","lineWidth","beginPath","ballHeight","arc","PI","columnsLarger","breakpoint","moveTo","lineTo","notesFigures","app","PIXI","borderWidth","fillRect","stroke","y","x","radius","tl","tr","br","bl","defaultRadius","side","quadraticCurveTo","closePath","NumOfColumnsPerCanvas","ComposerCanvas","resetPointerDown","stageSelected","sliderSelected","stagePreviousPositon","handleBreakpoints","handleWheel","deltaY","selectColumn","global","totalWidth","relativePos","handleStageSlide","throttleStage","isMovingLeft","ceil","abs","toAdd","finalPos","direction","selectedColumn","v","sort","handleSlide","sizes","getBoundingClientRect","parentWidth","nearestEven","screen","currentBreakpoint","canvasRef","React","createRef","current","_canvas","s","xPos","counter","switcher","counterLimit","relativeColumnWidth","stageSize","stagePos","ref","anchor","interactive","pointerdown","pointermove","pos","currentPos","boundaries","isVisible","tempoChangersCache","standardBg","backgroundCache","isToolsSelected","toolsColumns","isSelected","isBreakpoint","faStepBackward","faStepForward","antialias","autoDensity","pointertap","pointerup","draw","g","clear","beginFill","drawRect","image","lineStyle","drawRoundedRect","toggleBreakpoint","faMinusCircle","faPlusCircle","interactiveChildren","alpha","zIndex","positions","num","round","toggleMenuVisible","loadSong","updateSong","songFunctions","hasUnsaved","hasChanges","menuClass","menuOpen","currentSong","faSave","createNewSong","volumeHook","setterVolume","sendChangeSelect","onPointerUp","formatMillis","millis","minutes","seconds","calculateLength","end","totalLength","replaceAt","string","replacement","valueOf","substring","Composer","handleAutoSave","changes","togglePlay","removeColumns","addColumns","layerIndex","currentNote","askForSongUpdate","confirm","songColumns","pastError","previousTime","msPerBPM","handleTick","newIndex","indexOfBreakpoint","validateBreakpoints","page","ignoreAudio","toolsVisible","copiedColums","copiedColumn","copiedNote","columnIndex","playbackInterval","location","hostname","returnValue","canvasFunctions","canvasData","toolsData","toolsFunctions","faBars","faChevronRight","faChevronLeft","faPause","faPlay","addCell","removeCell","faPlus","faTools","ErrorPage","deleteAllSongs","resetSettings","removeItem","isLocalhost","Boolean","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","pages","Index","selectedPage","askForStorage","storage","persist","closeWelcomeScreen","hasVisited","hideMessage","floatingMessage","checkUpdate","logEvent","path","hasPersistentStorage","floatingMessageClass","pathname","substr","lastIndexOf","replace","to","exact","ReactDOM","render","StrictMode","getElementById","URL","process","origin","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3a0591ed.chunk.js","sourcesContent":["const appName = [\"Sky\",\"Genshin\"][1]\r\nconst cssClasses = {\r\n    noteComposer: appName === \"Genshin\" ? \"note-composer\" : \"note-composer-sky\",\r\n    note: appName === \"Genshin\" ? \"note\" : \"note-sky\"\r\n}\r\nconst instruments = appName === \"Genshin\" ? [\r\n    \"Lyre\",\r\n    \"DunDun\"\r\n    ]:[\r\n        \"Piano\",\r\n        \"Contrabass\",\r\n        \"Guitar\",\r\n        \"Harp\",\r\n        \"Horn\",\r\n        \"Trumpet\",\r\n        \"Pipa\",\r\n        \"WinterPiano\",\r\n        \"Xylophone\",\r\n        \"Flute\",\r\n        \"Ocarina\",\r\n        \"ToyUkulele\",\r\n        \"Drum\",\r\n        \"Bells\",\r\n        \"DunDun\",\r\n        \"HandPan\"\r\n    ]\r\nconst notesPerColumn = appName === \"Genshin\" ? 21 : 15\r\nconst instrumentsData = {\r\n    Lyre: {\r\n        notes: 21\r\n    },\r\n    DunDun: {\r\n        notes: 8\r\n    },\r\n    Bells: {\r\n        notes: 8\r\n    },\r\n    Trumpet:{\r\n        notes: 15\r\n    },\r\n    Contrabass: {\r\n        notes: 15\r\n    },\r\n    Drum: {\r\n        notes: 8\r\n    },\r\n    Flute: {\r\n        notes: 15\r\n    },\r\n    Guitar: {\r\n        notes: 15\r\n    },\r\n    HandPan: {\r\n        notes: 8\r\n    },\r\n    ToyUkulele:{\r\n        notes:15\r\n    },\r\n    Harp: {\r\n        notes: 15\r\n    },\r\n    Horn: {\r\n        notes: 15\r\n    },\r\n    Piano: {\r\n        notes: 15\r\n    },\r\n    Pipa: {\r\n        notes: 15\r\n    },\r\n    WinterPiano: {\r\n        notes: 15\r\n    },\r\n    Xylophone: {\r\n        notes: 15\r\n    },\r\n    Ocarina:{\r\n        notes:15\r\n    }\r\n}\r\n\r\n\r\nconst layoutData = {\r\n    21: {\r\n        keyboardLayout: (\"Q W E R T Y U \" +\r\n            \"A S D F G H J \" +\r\n            \"Z X C V B N M\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa so la ti \" +\r\n            \"do re mi fa so la ti \" +\r\n            \"do re mi fa so la ti\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 84 89 85 \" +\r\n            \"65 83 68 70 71 72 74 \" +\r\n            \"90 88 67 86 66 78 77\").split(\" \")\r\n    },\r\n    8: {\r\n        keyboardLayout: (\"Q W E R \" +\r\n            \"A S D F\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa \" +\r\n            \"do re mi fa\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 \" +\r\n        \"65 83 68 70\").split(\" \")\r\n    },\r\n    15: {\r\n        keyboardLayout: (\"Q W E R T \" +\r\n            \"A S D F G \" +\r\n            \"Z X C V B\").split(\" \"),\r\n\r\n        mobileLayout: (\"do re mi fa so \" +\r\n            \"do re mi fa so \" +\r\n            \"do re mi fa so\").split(\" \"),\r\n\r\n        keyboardCodes: (\"81 87 69 82 84 \" +\r\n            \"65 83 68 70 71 \" +\r\n            \"90 88 67 86 66\").split(\" \")\r\n    }\r\n}\r\n\r\nconst keyNames = {\r\n    0: [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\", \"C\"],\r\n    1: [\"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"C\", \"Db\"],\r\n    2: [\"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\", \"D\"],\r\n    3: [\"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"D\", \"Eb\"],\r\n    4: [\"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\", \"E\"],\r\n    5: [\"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"E\", \"F\"],\r\n    6: [\"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\", \"Ab\", \"Bb\", \"Cb\", \"Db\", \"Eb\", \"F\", \"Gb\"],\r\n    7: [\"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\", \"G\"],\r\n    8: [\"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"G\", \"Ab\"],\r\n    9: [\"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\", \"A\"],\r\n    10: [\"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\", \"C\", \"D\", \"Eb\", \"F\", \"G\", \"A\", \"Bb\"],\r\n    11: [\"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\", \"B\"]\r\n}\r\nconst pitchArr = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"] \r\n\r\nconst composerNotePositions =  appName === \"Genshin\" ? [14, 15, 16, 17, 18, 19, 20, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6].reverse() : [15,16,17,18,19,20,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14].reverse()\r\n\r\nconst importNotePositions = appName === \"Genshin\" ? [14, 15, 16, 17, 18, 19, 20, 7, 8, 9, 10, 11, 12, 13, 0] :  [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]\r\n\r\nconst skyImages = {\r\n    15: \"dmcr dm cr dm cr cr dm dmcr dm cr cr dm cr dm dmcr\".split(\" \"),\r\n    8: \"cr dm cr dm cr dm cr dm\".split(\" \"),\r\n    21: \"do re mi fa so la ti do re mi fa so la ti do re mi fa so la ti\".split(\" \")\r\n}\r\nexport {\r\n    instruments,\r\n    instrumentsData,\r\n    composerNotePositions,\r\n    importNotePositions,\r\n    appName,\r\n    layoutData,\r\n    cssClasses,\r\n    notesPerColumn,\r\n    keyNames,\r\n    pitchArr,\r\n    skyImages\r\n}","import { importNotePositions, appName, instruments } from \"../appConfig\"\r\nclass Recording {\r\n  constructor() {\r\n    this.start = new Date().getTime()\r\n    this.notes = []\r\n  }\r\n  init = () => {\r\n    this.start = new Date().getTime() - 100\r\n    console.log(\"Started new recording\")\r\n  }\r\n  addNote = (index) => {\r\n    if (this.notes.length === 0) this.init()\r\n    let currentTime = new Date().getTime()\r\n    let note = [index, currentTime - this.start]\r\n    this.notes.push(note)\r\n  }\r\n}\r\nclass Song {\r\n  constructor(name, notes = [], data = {}) {\r\n    this.name = name\r\n    this.version = 1\r\n    this.notes = notes\r\n    this.bpm = 220\r\n    this.pitch = \"C\"\r\n    this.data = {\r\n      isComposed: false,\r\n      isComposedVersion: false,\r\n      appName: appName\r\n    }\r\n    Object.entries(data).forEach((entry) => {\r\n      this.data[entry[0]] = entry[1]\r\n    })\r\n  }\r\n}\r\nclass LoggerEvent {\r\n  constructor(title, text, timeout) {\r\n    this.title = title\r\n    this.timeout = timeout\r\n    this.text = text\r\n    if (timeout === undefined) this.timeout = 3000\r\n    this.event = new CustomEvent(\"logEvent\", {\r\n      detail: {\r\n        title: this.title,\r\n        text: this.text,\r\n        timeout: this.timeout\r\n      }\r\n    })\r\n  }\r\n  trigger = () => {\r\n    window.dispatchEvent(this.event)\r\n  }\r\n}\r\nclass NoteData {\r\n  constructor(index, noteNames, url) {\r\n    this.index = index\r\n    this.noteNames = noteNames\r\n    this.url = url\r\n    this.buffer = new ArrayBuffer(8)\r\n    this.clicked = false\r\n  }\r\n}\r\nclass PlayingSong {\r\n  constructor(notes) {\r\n    this.timestamp = new Date().getTime()\r\n    this.notes = notes\r\n  }\r\n}\r\nclass FileDownloader {\r\n  constructor(type) {\r\n    if (type === undefined) type = \"text/json\"\r\n    this.dataType = \"data:\" + type + \";charset=utf-8,\"\r\n  }\r\n  download = (file, name) => {\r\n    let data = this.dataType + encodeURIComponent(file)\r\n    var el = document.createElement(\"a\")\r\n    el.style = \"display:none\"\r\n    document.body.appendChild(el)\r\n    el.setAttribute(\"href\", data)\r\n    el.setAttribute(\"download\", name)\r\n    el.click();\r\n    el.remove();\r\n  }\r\n}\r\n\r\nlet TempoChangers = [\r\n  {\r\n    id: 0,\r\n    text: \"1\",\r\n    changer: 1,\r\n    color: 0x515c6f\r\n  }, {\r\n    id: 1,\r\n    text: \"1/2\",\r\n    changer: 1 / 2,\r\n    color: 0x517553\r\n  }, {\r\n    id: 2,\r\n    text: \"1/4\",\r\n    changer: 1 / 4,\r\n    color: 0x434c7d\r\n  }, {\r\n    id: 3,\r\n    text: \"1/8\",\r\n    changer: 1 / 8,\r\n    color: 0x774D6D\r\n  }\r\n]\r\nclass ComposedSong {\r\n  constructor(name, notes = [], data = {}) {\r\n    data.isComposed = true\r\n    data.isComposedVersion = true\r\n    this.version = 1\r\n    this.data = data\r\n    this.name = name\r\n    this.bpm = 220\r\n    this.pitch = \"C\"\r\n    this.notes = notes\r\n    this.instruments = [instruments[0], instruments[0], instruments[0]]\r\n    this.breakpoints = [0]\r\n    this.columns = []\r\n    this.selected = 0\r\n    new Array(100).fill().forEach((e) => {\r\n      let column = new Column()\r\n      column.tempoChanger = 0\r\n      this.columns.push(column)\r\n    })\r\n  }\r\n}\r\n\r\n\r\nfunction ComposerSongDeSerialization(song) {\r\n  let obj = {\r\n    data: song.data,\r\n    name: song.name,\r\n    bpm: song.bpm ?? 220,\r\n    pitch: song.pitch ?? \"C\",\r\n    instruments: song.instruments || [instruments[0], instruments[0], instruments[0]],\r\n    breakpoints: song.breakpoints ?? [],\r\n    notes: [],\r\n    selected: 0,\r\n    columns: []\r\n  }\r\n  song.columns.forEach(column => {\r\n    let columnObj = new Column()\r\n    columnObj.tempoChanger = column[0]\r\n    column[1].forEach(note => {\r\n      columnObj.notes.push(new ColumnNote(note[0], note[1]))\r\n    })\r\n    obj.columns.push(columnObj)\r\n  })\r\n  return obj\r\n}\r\nfunction ComposerToRecording(song) {\r\n  let recordedSong = new Song(song.name)\r\n  let bpmPerMs = Math.floor(60000 / song.bpm)\r\n  let totalTime = 100\r\n  song.columns.forEach(column => {\r\n    column[1].forEach(note => {\r\n      recordedSong.notes.push([note[0], totalTime])\r\n    })\r\n    totalTime += Math.floor(bpmPerMs * TempoChangers[column[0]].changer)\r\n  })\r\n  return recordedSong\r\n}\r\nfunction ComposerSongSerialization(song) {\r\n  let obj = {\r\n    data: song.data,\r\n    name: song.name,\r\n    bpm: song.bpm,\r\n    pitch: song.pitch,\r\n    breakpoints: song.breakpoints,\r\n    instruments: song.instruments,\r\n    columns: []\r\n  }\r\n  obj.data.appName = appName\r\n  /*\r\n      notes = [tempoChanger,notes] ----> note = [index,layer]\r\n      tempoChanger = Number\r\n  */\r\n  song.columns.forEach(column => {\r\n    let columnArr = [column.tempoChanger]\r\n    let notes = column.notes.map(note => {\r\n      return [note.index, note.layer]\r\n    })\r\n    columnArr[1] = notes\r\n    obj.columns.push(columnArr)\r\n  })\r\n  return obj\r\n}\r\nfunction prepareSongDownload(song){\r\n  let finalSong = JSON.parse(JSON.stringify(song)) //lose reference\r\n  let oldFormatNotes = {}\r\n  if(finalSong.data?.isComposedVersion){\r\n    oldFormatNotes = composedToOldFormat(finalSong)\r\n  }else{\r\n    oldFormatNotes = recordedToOldFormat(finalSong)\r\n  }\r\n  finalSong.isComposed = finalSong.data.isComposedVersion\r\n  finalSong.pitchLevel = pitchArr.indexOf(finalSong.pitch)\r\n  finalSong.songNotes = oldFormatNotes\r\n  finalSong.bitsPerPage = 16\r\n  finalSong.isEncrypted = false\r\n  return [finalSong] //for compatibility, add back to an array, it will be ignored when importing\r\n  //from this app\r\n}\r\n\r\nfunction prepareSongImport(song){\r\n  //TODO add multi songs in the same file\r\n  if (Array.isArray(song) && song.length > 0) song = song[0]\r\n  let type = getSongType(song)\r\n  if (type === \"none\") {\r\n      new LoggerEvent(\"Error\", \"Invalid song\").trigger()\r\n      throw new Error(\"Error Invalid song\")\r\n  }\r\n  if (type === \"oldSky\") {\r\n      song = oldSkyToNewFormat(song)\r\n  }\r\n  if(appName === 'Sky' && song.data?.appName !== 'Sky'){\r\n      new LoggerEvent(\"Error\", \"Invalid song\").trigger()\r\n      throw new Error(\"Error Invalid song\")\r\n  }\r\n  if(appName === 'Genshin' && song.data?.appName === 'Sky'){\r\n      song = newSkyFormatToGenshin(song)\r\n  }\r\n  return song\r\n}\r\n\r\nfunction composedToOldFormat(song){\r\n  let convertedNotes = []\r\n  let bpmPerMs = Math.floor(60000 / song.bpm)\r\n  let totalTime = 100\r\n  song.columns.forEach(column => {\r\n    column[1].forEach(note => {\r\n      let layer = 1\r\n      if(note[1] === '111') layer = 3\r\n      if(note[1] === '011') layer = 2\r\n      if(note[1] === '101') layer = 3\r\n      if(note[1] === '001') layer = 2\r\n      if(note[1] === '110') layer = 3\r\n      if(note[1] === '010') layer = 2\r\n      if(note[1] === '100') layer = 1\r\n      let noteObj = {\r\n        key:(layer > 2 ? 2 : layer)+'Key'+note[0],\r\n        time:totalTime\r\n      }\r\n      if(layer > 2) noteObj.l = 3\r\n      convertedNotes.push(noteObj)\r\n    })\r\n    totalTime += Math.floor(bpmPerMs * TempoChangers[column[0]].changer)\r\n  })\r\n  return convertedNotes\r\n}\r\n\r\nfunction recordedToOldFormat(song){\r\n  let convertedNotes = []\r\n  song.notes.forEach(note =>{\r\n    convertedNotes.push({\r\n      time: note[1],\r\n      key: \"1Key\"+note[0]\r\n    })\r\n  })\r\n  return convertedNotes\r\n}\r\nfunction getSongType(song) {\r\n  try {\r\n    if (song.data === undefined) {\r\n      //oldSky format\r\n      if(song.songNotes !== undefined && song.pitchLevel !== undefined){\r\n        return \"oldSky\"\r\n      }\r\n    } else {\r\n      //current format\r\n      if (song.data.isComposedVersion) {\r\n        if (typeof song.name !== \"string\") return \"none\"\r\n        if (typeof song.bpm !== \"number\") return \"none\"\r\n        if (!pitchArr.includes(song.pitch)) return \"none\"\r\n        if (Array.isArray(song.breakpoints)) {\r\n          if (song.breakpoints.length > 0) {\r\n            if (typeof song.breakpoints[0] !== \"number\") return \"none\"\r\n          }\r\n        } else {\r\n          return \"none\"\r\n        }\r\n        if (Array.isArray(song.columns)) {\r\n          if (song.columns.length > 0) {\r\n            let column = song.columns[0]\r\n            if (typeof column[0] !== \"number\") return \"none\"\r\n          }\r\n        } else {\r\n          return \"none\"\r\n        }\r\n        return \"newComposed\"\r\n      } else {\r\n        if (typeof song.name !== \"string\") return \"none\"\r\n        if (typeof song.bpm !== \"number\") return \"none\"\r\n        if (!pitchArr.includes(song.pitch)) return \"none\"\r\n        return \"newRecorded\"\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e)\r\n    return \"none\"\r\n  }\r\n  return \"none\"\r\n}\r\nlet genshinLayout = importNotePositions\r\n\r\nfunction newSkyFormatToGenshin(song){\r\n  if(song.data.isComposedVersion){\r\n    song.instruments = song.instruments.map(instrument => 'Lyre')\r\n    song.columns.forEach(column =>{\r\n      column[1] = column[1].map(note => {\r\n        return [genshinLayout[note[0]] , note[1]]\r\n      })\r\n\r\n    })\r\n  }\r\n  if(!song.data.isComposedVersion){\r\n    song.notes = song.notes.map(note => {\r\n      note[0] = genshinLayout[note[0]]\r\n      return note\r\n    })\r\n  }\r\n  return song\r\n}\r\n\r\nfunction oldSkyToNewFormat(song) {\r\n  let result = new Song(\"Error\")\r\n  try {\r\n    result = new Song(song.name)\r\n    result.bpm = song.bpm || 220\r\n    result.pitch = (pitchArr[song.pitchLevel || 0]) || \"C\"\r\n    //remove duplicate notes\r\n    song.songNotes = song.songNotes.filter((note, index, self) =>\r\n      index === self.findIndex((n) => {\r\n        return n.key.split('Key')[1] === note.key.split('Key')[1] && n.time === note.time\r\n      })\r\n    )\r\n    let songNotes = song.songNotes\r\n    songNotes.forEach(note => {\r\n      let data = note.key.split(\"Key\")\r\n      result.notes.push([genshinLayout[data[1]], note.time, note.l ?? Number(data[0])])\r\n    })\r\n\r\n    if ([true, \"true\"].includes(song.isComposed)) {\r\n      result = ComposerSongSerialization(RecordingToComposed(result))\r\n    } else {\r\n      result.notes = result.notes.map(e => [e[0], e[1]])\r\n    }\r\n\r\n\r\n  } catch (e) {\r\n    console.log(e)\r\n    return new Song(\"Error importing\")\r\n  }\r\n  return result\r\n}\r\nfunction RecordingToComposed(song) {\r\n  let bpmToMs = Math.floor(60000 / song.bpm)\r\n  let composed = new ComposedSong(song.name, [])\r\n  composed.bpm = song.bpm\r\n  composed.pitch = song.pitch\r\n  let notes = song.notes\r\n  //remove duplicates\r\n\r\n  let converted = []\r\n  let grouped = groupByNotes(notes, bpmToMs / 9)\r\n  let combinations = [bpmToMs, Math.floor(bpmToMs / 2), Math.floor(bpmToMs / 4), Math.floor(bpmToMs / 8)]\r\n  for (let i = 0; i < grouped.length; i++) {\r\n    let column = new Column()\r\n    column.notes = grouped[i].map(note => {\r\n      let columnNote = new ColumnNote(note[0])\r\n      if (note[2] === 0) columnNote.layer = \"100\"\r\n      if (note[2] === 1) columnNote.layer = \"100\"\r\n      if (note[2] === 2) columnNote.layer = \"010\"\r\n      if (note[2] === 3) columnNote.layer = \"110\"\r\n      if (note[2] === undefined) columnNote.layer = \"100\"\r\n      return columnNote\r\n    })\r\n    let next = grouped[i + 1] || [[0, 0, 0]]\r\n    let difference = next[0][1] - grouped[i][0][1]\r\n    let paddingColumns = []\r\n    while (difference >= combinations[3]) {\r\n      if (difference / combinations[0] >= 1) {\r\n        difference -= combinations[0]\r\n        paddingColumns.push(0)\r\n      } else if (difference / combinations[1] >= 1) {\r\n        difference -= combinations[1]\r\n        paddingColumns.push(1)\r\n      } else if (difference / combinations[2] >= 1) {\r\n        difference -= combinations[2]\r\n        paddingColumns.push(2)\r\n      } else if (difference / combinations[3] >= 1) {\r\n        difference -= combinations[3]\r\n        paddingColumns.push(3)\r\n      }\r\n    }\r\n    let finalPadding = []\r\n    column.tempoChanger = paddingColumns.shift() || 0\r\n    paddingColumns = paddingColumns.forEach((col, i) => {\r\n      let column = new Column()\r\n      column.tempoChanger = col\r\n      finalPadding.push(column)\r\n    })\r\n    converted.push(column, ...finalPadding)\r\n  }\r\n  composed.columns = converted\r\n  return composed\r\n}\r\nclass Column {\r\n  constructor() {\r\n    this.notes = []\r\n    this.tempoChanger = 0\r\n\r\n  }\r\n}\r\nfunction groupByNotes(notes, threshold) {\r\n  let result = []\r\n  while (notes.length > 0) {\r\n    let row = [notes.shift()]\r\n    let amount = 0\r\n    for (let i = 0; i < notes.length; i++) {\r\n      if (row[0][1] > notes[i][1] - threshold) amount++\r\n    }\r\n    result.push([...row, ...notes.splice(0, amount)])\r\n  }\r\n  return result\r\n}\r\nclass ColumnNote {\r\n  constructor(index, layer = \"000\") {\r\n    this.index = index\r\n    this.layer = layer\r\n  }\r\n}\r\nlet pitchArr = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"]\r\nfunction getPitchChanger(pitch) {\r\n  let index = pitchArr.indexOf(pitch)\r\n  if (index < 0) index = 0\r\n  return Number(Math.pow(2, index / 12).toFixed(4))\r\n}\r\nfunction randomNum(min, max) {\r\n  return Math.floor(Math.random() * max) + min\r\n} \r\nexport {\r\n  Recording,\r\n  Song,\r\n  NoteData,\r\n  FileDownloader,\r\n  LoggerEvent,\r\n  PlayingSong,\r\n  ComposedSong,\r\n  ColumnNote,\r\n  Column,\r\n  TempoChangers,\r\n  ComposerSongSerialization,\r\n  ComposerSongDeSerialization,\r\n  ComposerToRecording,\r\n  getPitchChanger,\r\n  getSongType,\r\n  oldSkyToNewFormat,\r\n  RecordingToComposed,\r\n  prepareSongDownload,\r\n  newSkyFormatToGenshin,\r\n  prepareSongImport\r\n}","import { instrumentsData, layoutData, instruments } from \"../appConfig\"\r\nclass Instrument {\r\n    constructor(instrumentName) {\r\n        this.instrumentName = instrumentName\r\n        let instrumentNameTemp = instrumentName === undefined ? instruments[0] : instrumentName\r\n        this.layout = []\r\n        this.gain = GainNode\r\n        let instrumentData = instrumentsData[instrumentNameTemp]\r\n        this.keyboardLayout = layoutData[instrumentData.notes].keyboardLayout\r\n\r\n        this.mobileLayout = layoutData[instrumentData.notes].mobileLayout\r\n        this.keyboardCodes = layoutData[instrumentData.notes].keyboardCodes\r\n        let i = 0\r\n        if (instrumentName === undefined) return\r\n        for (const noteName of this.keyboardLayout) {\r\n            let noteNames = {\r\n                keyboard: noteName,\r\n                mobile: this.mobileLayout[i]\r\n            }\r\n            let url = `./assets/audio/${instrumentName}/${i}.mp3`\r\n            let note = new NoteData(i, noteNames, url)\r\n            this.layout.push(note)\r\n            i++\r\n        }\r\n\r\n    }\r\n    getNoteFromCode = (code) => {\r\n        let index = this.keyboardCodes.findIndex(e => e == code)\r\n        return index !== -1 ? index : null\r\n    }\r\n    setBuffers = (bufferArray) => {\r\n        bufferArray.forEach((buffer, i) => {\r\n            this.layout[i].buffer = buffer\r\n        })\r\n    }\r\n    changeVolume = (amount) => {\r\n        this.gain.gain.value = amount / 100\r\n    }\r\n    load = async (audioContext) => {\r\n        this.gain = audioContext.createGain()\r\n        this.gain.gain.value = 1\r\n        let emptyBuffer = audioContext.createBuffer(2, audioContext.sampleRate, audioContext.sampleRate)\r\n        //thanks safari, i have to do this ugly thing\r\n        const requests = this.layout.map(e => {\r\n            return new Promise(resolve => {\r\n                fetch(e.url)\r\n                    .then(result => result.arrayBuffer())\r\n                    .then(buffer => {\r\n                        audioContext.decodeAudioData(buffer, resolve, () => {\r\n                            resolve(emptyBuffer)\r\n                        })\r\n                            .catch(e => {\r\n                                resolve(emptyBuffer)\r\n                            })\r\n                    }).catch(e => {\r\n                        resolve(emptyBuffer)\r\n                    })\r\n            })\r\n        })\r\n        let buffers = await Promise.all(requests)\r\n        this.setBuffers(buffers)\r\n        return true\r\n    }\r\n}\r\n\r\n\r\n\r\nclass NoteData {\r\n    constructor(index, noteNames, url) {\r\n        this.index = index\r\n        this.noteNames = noteNames\r\n        this.url = url\r\n        this.buffer = new ArrayBuffer(8)\r\n    }\r\n}\r\nexport default Instrument\r\n","import React, { Component } from 'react'\r\nimport isMobile from \"is-mobile\"\r\nimport { cssClasses, appName} from \"../../appConfig\"\r\n\r\nclass Note extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        const { props } = this\r\n        let data = props.data\r\n        let className = data.clicked ? (cssClasses.note + \" click-event\") : cssClasses.note\r\n        let toBeClicked = props.toBeClicked ? \" note-red\" : \"\"\r\n        let toBeClickedNext = props.toBeClickedNext ? \" note-border-click\" : \"\"\r\n        className += toBeClicked + toBeClickedNext\r\n        let noteText = isMobile() ? data.noteNames.mobile : data.noteNames.keyboard\r\n        let animation = { transition: `all ${props.fadeTime}s` }\r\n        let svgUrl = `./assets/icons/keys/${data.noteNames.mobile}.svg`\r\n        if(appName === \"Sky\") svgUrl = `./assets/icons/keys/${props.skyImg}.svg`\r\n        if(appName === \"Sky\") noteText = props.skyText\r\n        return <button\r\n            onPointerDown={(e) => {\r\n                e.preventDefault()\r\n                props.clickAction(data)\r\n            }}\r\n            className=\"button-hitbox\"\r\n\r\n        >\r\n            <div className={className} style={animation}>\r\n                <img\r\n                    draggable=\"false\"\r\n                    alt={data.noteNames.mobile}\r\n                    src={svgUrl}>\r\n\r\n                </img>\r\n                <div className={appName === \"Sky\" ? \"note-name-sky\" : \"note-name\"}>\r\n                    {noteText}\r\n                </div>\r\n            </div>\r\n        </button>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Note","import React, { Component } from 'react'\r\nimport \"./Keyboard.css\"\r\nimport { getPitchChanger } from \"../SongUtils\"\r\nimport Instrument from \"../Instrument\"\r\nimport Note from \"./Note\"\r\nimport * as workerTimers from 'worker-timers';\r\nimport { keyNames, pitchArr , skyImages} from \"../../appConfig\"\r\nclass Keyboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            instrument: new Instrument(),\r\n            audioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            reverbAudioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            playTimestamp: new Date().getTime(),\r\n            songToPractice: [],\r\n            sliderState: {\r\n                position: 0,\r\n                size: 0\r\n            }\r\n        }\r\n        console.log(\"created\")\r\n        this.loadInstrument(props.data.instrument)\r\n        try {\r\n            this.loadReverb()\r\n        } catch(e) {\r\n            console.log(\"Error with reverb0\",e)\r\n        }\r\n    }\r\n    handleKeyboard = (event) => {\r\n        if(event.repeat) return\r\n        if (document.activeElement.tagName === \"INPUT\") return\r\n        let index = this.state.instrument.getNoteFromCode(event.keyCode)\r\n        let note\r\n        if (index !== null) {\r\n            note = this.state.instrument.layout[index]\r\n        }\r\n        if (note !== undefined) {\r\n            this.handleClick(note)\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyboard)\r\n        window.addEventListener(\"playSong\", this.handlePlayEvent)\r\n        window.addEventListener(\"practiceSong\", this.handlePracticeEvent)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyboard);\r\n        window.removeEventListener(\"playSong\", this.handlePlayEvent)\r\n        window.removeEventListener(\"practiceSong\", this.handlePracticeEvent)\r\n        let state = this.state\r\n        state.playTimestamp = new Date().getTime()\r\n    }\r\n    loadReverb() {\r\n        let audioCtx = this.state.audioContext\r\n        fetch(\"./assets/audio/reverb4.wav\")\r\n            .then(r => r.arrayBuffer())\r\n            .then(b => {\r\n                audioCtx.decodeAudioData(b, (impulse_response) => {\r\n                    let convolver = audioCtx.createConvolver()\r\n                    let gainNode = audioCtx.createGain()\r\n                    gainNode.gain.value = 2.5\r\n                    convolver.buffer = impulse_response\r\n                    convolver.connect(gainNode)\r\n                    gainNode.connect(audioCtx.destination)\r\n                    this.setState({\r\n                        reverbAudioContext: convolver\r\n                    })\r\n                })\r\n            }).catch((e) => { \r\n                console.log(\"Error with reverb1\",e)\r\n            })\r\n    }\r\n    handlePlayEvent = (event) => {\r\n        let data = event.detail\r\n        this.setState({\r\n            playTimestamp: data.timestamp\r\n        }, () => this.playSong(data))\r\n    }\r\n    handlePracticeEvent = (event) => {\r\n        let data = event.detail\r\n        this.practiceSong(JSON.parse(JSON.stringify(data)))\r\n    }\r\n    loadInstrument = async (name) => {\r\n        let newInstrument = new Instrument(name)\r\n        await newInstrument.load(this.state.audioContext)\r\n\r\n        this.setState({\r\n            instrument: newInstrument\r\n        })\r\n\r\n    }\r\n    practiceSong = (song) => {\r\n        let notes = song.notes\r\n        let songLength = notes.length\r\n        if (song.start === undefined) song.start = 0\r\n        notes.splice(0, song.start)\r\n        let chunks = []\r\n        for (let i = 0; notes.length > 0; i++) {\r\n            let chunk = {\r\n                notes: [notes.shift()],\r\n                delay: 0\r\n            }\r\n            let startTime = chunk.notes.length > 0 ? chunk.notes[0][1] : 0\r\n            for (let j = 0; j < notes.length && j < 20; j++) {\r\n                let difference = notes[j][1] - chunk.notes[0][1] - song.threshold\r\n                if (difference < 0) {\r\n                    chunk.notes.push(notes.shift())\r\n                    j--\r\n                }\r\n            }\r\n            chunk.delay = notes.length > 0 ? notes[0][1] - startTime : 0\r\n            chunks.push(chunk)\r\n        }\r\n        this.setState({\r\n            songToPractice: chunks\r\n        })\r\n        this.setSlider({\r\n            size: songLength,\r\n            position: song.start\r\n        })\r\n    }\r\n    changeSliderPosition = (position) => {\r\n        let sliderState = this.state.sliderState\r\n        sliderState.position += position\r\n        this.setState({\r\n            sliderState: sliderState\r\n        }, () => this.props.functions.changeSliderState(this.state.sliderState))\r\n    }\r\n    setSlider = (state) => {\r\n        this.setState({\r\n            sliderState: state\r\n        }, this.props.functions.changeSliderState(state))\r\n    }\r\n    playSong = async (song) => {\r\n        let notes = song.notes\r\n        let previous = 0\r\n        this.setSlider({\r\n            size: notes.length,\r\n            position: 0\r\n        })\r\n        if (notes.length === 0) return\r\n        for (let i = 0; i < notes.length; i++) {\r\n            let delay = notes[i][1] - previous\r\n            previous = notes[i][1]\r\n            let note = notes[i][0]\r\n            if (this.state.playTimestamp !== song.timestamp) break\r\n            if (delay > 10) await delayMs(delay)\r\n            this.changeSliderPosition(1)\r\n            this.playSound(this.state.instrument.layout[note])\r\n        }\r\n        this.props.functions.stopSong()\r\n    }\r\n    handleClick = (note) => {\r\n        let practiceSong = this.state.songToPractice\r\n        if (practiceSong.length > 0) {\r\n            let indexClicked = practiceSong[0]?.notes.findIndex(e => e[0] === note.index)\r\n            if (indexClicked !== -1) {\r\n                practiceSong[0].notes.splice(indexClicked, 1)\r\n                if (practiceSong[0].notes.length === 0) practiceSong.shift()\r\n                if (practiceSong.length === 0) this.props.functions.stopSong()\r\n                this.setState({\r\n                    songToPractice: practiceSong\r\n                }, () => this.changeSliderPosition(1))\r\n            }\r\n        }\r\n\r\n        this.playSound(note)\r\n\r\n    }\r\n    playSound = (note) => {\r\n        if(note === undefined) return\r\n        if (this.props.isRecording) this.props.functions.handleRecording(note)\r\n        note.clicked = true\r\n        setTimeout(() => {\r\n            note.clicked = false\r\n            this.setState({\r\n                instrument: this.state.instrument\r\n            })\r\n        }, 200)\r\n        const source = this.state.audioContext.createBufferSource()\r\n        source.playbackRate.value = getPitchChanger(this.props.settings.pitch.value)\r\n        source.buffer = note.buffer\r\n        if (this.props.settings.caveMode.value) {\r\n            source.connect(this.state.reverbAudioContext)\r\n        } else {\r\n            source.connect(this.state.audioContext.destination)\r\n        }\r\n        source.start(0)\r\n        this.setState({\r\n            instrument: this.state.instrument\r\n        })\r\n    }\r\n    render() {\r\n        let state = this.state\r\n        let size = this.props.settings.keyboardSize.value / 100\r\n        if (size < 0.5) size = 0.5\r\n        if (size > 1.5) size = 1.5\r\n        let keyboardClass = \"keyboard\"\r\n        if (state.instrument.layout.length === 15) keyboardClass += \" keyboard-5\"\r\n        if (state.instrument.layout.length === 8) keyboardClass += \" keyboard-4\"\r\n        return <div \r\n                    className={keyboardClass} \r\n                    style={{ \r\n                        transform: `scale(${size})`,\r\n                        marginBottom:size * 30\r\n                    }}\r\n                >\r\n             {state.instrument.layout.length === 0 ? <div className=\"loading\">Loading...</div> : null}\r\n            {state.instrument.layout.map(note => {\r\n                let toBeClicked = state.songToPractice[0]?.notes.find(e => e[0] === note.index) !== undefined\r\n                let toBeClickedNext = state.songToPractice[1]?.notes.find(e => e[0] === note.index) !== undefined\r\n                let fadeTime = state.songToPractice[0]?.delay !== undefined ? state.songToPractice[0]?.delay / 1000 : 0.1\r\n                let skyText = \"\"\r\n                let skyImg = \"\"\r\n                try{\r\n                    skyText = keyNames[pitchArr.indexOf(this.props.settings.pitch.value)][note.index]\r\n                    skyImg = skyImages[state.instrument.layout.length][note.index]\r\n                }catch(e){}\r\n\r\n                return <Note\r\n                    key={note.index}\r\n                    toBeClicked={toBeClicked}\r\n                    fadeTime={fadeTime}\r\n                    toBeClickedNext={toBeClickedNext}\r\n                    data={note}\r\n                    skyText={skyText}\r\n                    skyImg={skyImg}\r\n                    clickAction={this.handleClick}\r\n                >\r\n\r\n                </Note>\r\n            })}\r\n        </div>\r\n    }\r\n}\r\nfunction delayMs(ms) {\r\n    return new Promise(resolve => {\r\n        workerTimers.setTimeout(resolve, ms)\r\n    })\r\n}\r\nexport default Keyboard\r\n","export default __webpack_public_path__ + \"static/media/mainpage.114ce51f.png\";","export default __webpack_public_path__ + \"static/media/composer.76adcf72.png\";","import React, { Component, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMusic, faTimes, faCog, faTrash, faCrosshairs, faDownload, faInfo, faCompactDisc, faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { FaDiscord, FaGooglePlay , FaGithub} from 'react-icons/fa';\r\nimport { RiPlayListFill } from 'react-icons/ri'\r\nimport \"./menu.css\"\r\nimport mainPageImg from '../../assets/images/mainpage.png'\r\nimport composerImg from '../../assets/images/composer.png'\r\nimport { FileDownloader, LoggerEvent, prepareSongImport, prepareSongDownload} from \"../SongUtils\"\r\nimport { FilePicker } from \"react-file-picker\"\r\nimport { appName } from \"../../appConfig\"\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            selectedMenu: \"Songs\",\r\n            selectedSongType: \"recorded\",\r\n            searchInput:'',\r\n            searchedSongs:[]\r\n        }\r\n    }\r\n    handleSearchInput = (text) =>{\r\n        this.setState({\r\n            searchInput: text\r\n        })\r\n    }\r\n    clearSearch = () =>{\r\n        this.setState({\r\n            searchInput: '',\r\n            searchedSongs:[]\r\n        })\r\n        this.props.functions.stopSong()\r\n    }\r\n    searchSongs = async () =>{\r\n        let search = this.state.searchInput\r\n        \r\n        let fetchedSongs = await fetch('https://sky-music.herokuapp.com/api/songs?search='+encodeURI(search)).then(data => data.json())\r\n        if(fetchedSongs.error){\r\n            return new LoggerEvent(\"Error\", fetchedSongs.error).trigger()\r\n        }\r\n        this.setState({\r\n            searchedSongs:fetchedSongs\r\n        })\r\n    }\r\n    toggleMenu = (override) => {\r\n        if (typeof override !== \"boolean\") override = undefined\r\n        let newState = override !== undefined ? override : !this.state.open\r\n        this.setState({\r\n            open: newState,\r\n        })\r\n    }\r\n    selectSideMenu = (selection) => {\r\n        if (selection === this.state.selectedMenu && this.state.open) {\r\n            return this.setState({\r\n                open: false,\r\n            })\r\n        }\r\n        this.setState({\r\n            selectedMenu: selection,\r\n            open: true\r\n        })\r\n    }\r\n    changeSelectedSongType = (name) => {\r\n        this.setState({\r\n            selectedSongType: name\r\n        })\r\n    }\r\n    importSong = (file) => {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', (event) => {\r\n            try {\r\n                let song = JSON.parse(event.target.result)\r\n                song = prepareSongImport(song)\r\n                this.props.functions.addSong(song)\r\n            } catch (e) {\r\n                new LoggerEvent(\"Error\", \"Error importing song\").trigger()\r\n                console.error(e)\r\n            }\r\n\r\n        });\r\n        reader.readAsText(file)\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        let songName = song.name\r\n        if(appName === \"Sky\"){\r\n            //adds old format into the sheet\r\n            song = prepareSongDownload(song)\r\n        }\r\n        if(!Array.isArray(song)) song = [song]\r\n        song.forEach(song1 => {\r\n            song1.data.appName = appName\r\n        })\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json,`${songName}.${appName.toLowerCase()}sheet.json`)\r\n        new LoggerEvent(\"Success\", \"Song downloaded\").trigger()\r\n    }\r\n    render() {\r\n        let sideClass = this.state.open ? \"side-menu menu-open\" : \"side-menu\"\r\n        let selectedMenu = this.state.selectedMenu\r\n        const { data, functions } = this.props\r\n        const { handleSettingChange } = functions\r\n        functions.toggleMenu = this.toggleMenu\r\n        functions.downloadSong = this.downloadSong\r\n        let changePage = this.props.functions.changePage\r\n        let songs = data.songs.filter(song => !song.data.isComposedVersion)\r\n        let composedSongs = data.songs.filter(song => song.data.isComposedVersion)\r\n        let searchedSongs = this.state.searchedSongs\r\n        let searchedSongFunctions = {\r\n            playSong: functions.playSong,\r\n            importSong: functions.addSong,\r\n        }\r\n        return <div className=\"menu-wrapper\">\r\n            <div className=\"menu menu-visible\">\r\n                {this.state.open && <CloseMenu action={this.toggleMenu} />}\r\n                <MenuItem type=\"Help\" action={this.selectSideMenu} className=\"margin-top-auto\">\r\n                    <FontAwesomeIcon icon={faInfo} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Library\" action={this.selectSideMenu}>\r\n                    <RiPlayListFill className='icon'/>\r\n                </MenuItem>\r\n                <MenuItem type=\"Songs\" action={this.selectSideMenu} >\r\n                    <FontAwesomeIcon icon={faMusic} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Settings\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faCog} className=\"icon\" />\r\n                </MenuItem>\r\n\r\n                <MenuItem type=\"Composer\" action={() => changePage(\"Composer\")}>\r\n                    <FontAwesomeIcon icon={faCompactDisc} className=\"icon\" />\r\n                </MenuItem>\r\n            </div>\r\n            <div className={sideClass}>\r\n                <MenuPanel title=\"No selection\" visible={selectedMenu}>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Songs\" visible={selectedMenu}>\r\n                    <div className=\"songs-buttons-wrapper\">\r\n                        <button className=\"genshin-button\"\r\n                            onClick={() => changePage(\"Composer\")}\r\n                        >\r\n                            Compose song\r\n                        </button>\r\n                        <FilePicker\r\n                            onChange={(file) => this.importSong(file)}\r\n                        >\r\n                            <button className=\"genshin-button\">\r\n                                Import song\r\n                            </button>\r\n                        </FilePicker>\r\n\r\n                    </div>\r\n                    <div className=\"tab-selector-wrapper\">\r\n                        <button\r\n                            className={this.state.selectedSongType === \"recorded\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"recorded\")}\r\n                        >\r\n                            Recorded\r\n                        </button>\r\n                        <button\r\n                            className={this.state.selectedSongType === \"composed\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"composed\")}\r\n                        >\r\n                            Composed\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"songs-wrapper\">\r\n                        {this.state.selectedSongType === \"recorded\"\r\n                            ? songs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={functions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n\r\n                            : composedSongs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={functions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Settings\" visible={selectedMenu}>\r\n                    {Object.entries(data.settings).map(([key, data]) => {\r\n                        return <SettingsRow\r\n                            key={key + data.value}\r\n                            objKey={key}\r\n                            data={data}\r\n                            update={handleSettingChange}\r\n                        >\r\n\r\n                        </SettingsRow>\r\n                    })}\r\n                    {!checkIfTWA() && <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\">\r\n                        Support me\r\n                    </a>}\r\n\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Library\" visible={selectedMenu}>\r\n                    <div>\r\n                        Here you can find songs to learn, they are provided by the sky-music library.\r\n                    </div>\r\n                    <div className='library-search-row'>\r\n                        <input \r\n                            className='library-search-input' \r\n                            placeholder='Song name'\r\n                            onInput={(e) => this.handleSearchInput(e.target.value)}\r\n                            value={this.state.searchInput}\r\n                        />\r\n                        <button className='library-search-btn' onClick={this.clearSearch}>\r\n                            <FontAwesomeIcon icon={faTimes}/>\r\n                        </button>\r\n                        <button className='library-search-btn' onClick={this.searchSongs}>\r\n                            <FontAwesomeIcon icon={faSearch}/>\r\n                        </button>\r\n                    </div>\r\n                    <div className='library-search-songs-wrapper'>\r\n                        {searchedSongs.length > 0 \r\n                            ?   searchedSongs.map(song => \r\n                                <SearchedSong\r\n                                    key={song.file}\r\n                                    data={song}\r\n                                    functions={searchedSongFunctions}\r\n                                >\r\n                                    {song.name}\r\n                                </SearchedSong>)   \r\n                            :   <div className='library-search-result-text'>\r\n                                    No results\r\n                                </div>\r\n                    }\r\n                    </div>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Help\" visible={selectedMenu}>\r\n                    <div className='help-icon-wrapper'>\r\n                        <a href='https://discord.gg/Rj8V5gkZPc' >\r\n                            <FaDiscord className='help-icon' />\r\n                        </a>\r\n                        <a href='https://github.com/Specy/genshin-music' >\r\n                            <FaGithub className='help-icon' />\r\n                        </a>\r\n                        \r\n                    </div>\r\n                    <div className='help-title'>\r\n                        Main page\r\n                    </div>\r\n                    <div>\r\n                        <img src={mainPageImg} className='help-img' />\r\n                        <ol>\r\n                            <li>Keyboard</li>\r\n                            <li>Record your keyboard</li>\r\n                            <li>Open the composer</li>\r\n                            <li>Open the settings</li>\r\n                            <li>Open the saved songs</li>\r\n                        </ol>\r\n                        <div className=\"column\">\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faCrosshairs} /> = practice the song\r\n                            </div>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faDownload} /> = download the song\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='help-title'>\r\n                        Composer\r\n                    </div>\r\n                    <div>\r\n                        <img src={composerImg} className='help-img' />\r\n                        <ol>\r\n                            <li>Go to the next / previous breakpoint</li>\r\n                            <li>Timeline of the breakpoints</li>\r\n                            <li>Open the tools</li>\r\n                            <li>Add 16 columns to the end</li>\r\n                            <li>Remove the current selected column</li>\r\n                            <li>Add column after the current one</li>\r\n                        </ol>\r\n                        The composer has tools for PC users: <br/><br/>\r\n                            <div style={{marginLeft:'1rem'}}>\r\n                                <Key>A / D</Key> = move left / right <br/>\r\n                                <Key>1 / 2 / 3 / 4</Key> = change tempo <br/>\r\n                                <Key>Space bar</Key> = play / pause song <br/>\r\n                                <Key>Arrow left</Key> = go to previous breakpoint<br/>\r\n                                <Key>Arrow right</Key> = go to next breakpoint <br/>\r\n                                <Key>Q</Key> = remove current column<br/>\r\n                                <Key>E</Key> = add column <br/>\r\n                            </div>\r\n                    </div>\r\n                    {!checkIfTWA() && <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\">\r\n                        Support me\r\n                    </a>}\r\n                </MenuPanel>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction Key(props){\r\n    return <div className='keyboard-key'>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nfunction MenuPanel(props) {\r\n    let className = props.visible === props.title ? \"menu-panel menu-panel-visible\" : \"menu-panel\"\r\n    return <div className={className}>\r\n        <div className=\"menu-title\">\r\n            {props.title}\r\n        </div>\r\n        <div className=\"panel-content-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\nfunction CloseMenu(props) {\r\n    return <div onClick={() => props.action(false)} className=\"close-menu menu-item\">\r\n        <FontAwesomeIcon icon={faTimes} className=\"icon\" />\r\n    </div>\r\n}\r\nfunction SettingsRow(props) {\r\n    const { data, update, objKey } = props\r\n    const [valueHook, setter] = useState(data.value)\r\n    function handleChange(e) {\r\n        let el = e.target\r\n        let value = data.type === \"checkbox\" ? el.checked : el.value\r\n        if (data.type === \"number\") {\r\n            value = Number(value)\r\n            e.target.value = \"\" //have to do this to remove a react bug that adds a 0 at the start\r\n            if (value < data.threshold[0] || value > data.threshold[1]) {\r\n                return\r\n            }\r\n        }\r\n\r\n        setter(value)\r\n    }\r\n    function sendChange() {\r\n        if (data.value === valueHook) return\r\n        data.value = valueHook\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function sendChangeSelect(e) {\r\n        let value = e.target.value\r\n        data.value = value\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    if (objKey === \"settingVesion\") return null\r\n    return <div className=\"settings-row\">\r\n        <div>\r\n            {data.name}\r\n        </div>\r\n        {data.type === \"select\"\r\n            ? <select value={data.value}\r\n                onChange={sendChangeSelect}\r\n            >\r\n                {data.options.map(e => {\r\n                    return <option value={e} key={e}>{e}</option>\r\n                })}\r\n            </select>\r\n            : <input\r\n                type={data.type}\r\n                value={valueHook}\r\n                checked={valueHook}\r\n                onChange={handleChange}\r\n                onBlur={sendChange}\r\n            />}\r\n    </div>\r\n}\r\nfunction SongRow(props) {\r\n    let data = props.data\r\n    let deleteSong = props.functions.removeSong\r\n    let playSong = props.functions.playSong\r\n    let practiceSong = props.functions.practiceSong\r\n    let toggleMenu = props.functions.toggleMenu\r\n    let downloadSong = props.functions.downloadSong\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\" onClick={() => {\r\n            playSong(data)\r\n            toggleMenu(false)\r\n        }}>\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => {\r\n                practiceSong(data)\r\n                toggleMenu(false)\r\n            }}\r\n            >\r\n                <FontAwesomeIcon icon={faCrosshairs} />\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => deleteSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\nclass MenuItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        let className = this.props.className ? `menu-item ${this.props.className}` : \"menu-item\"\r\n        return <div\r\n            className={className}\r\n            onClick={() => this.props.action(this.props.type)}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction SearchedSong(props){\r\n    const { functions, data} = props\r\n    const { playSong, importSong} = functions\r\n    const download = async function(){\r\n        try{\r\n            let song = await fetch('https://sky-music.herokuapp.com/api/songs?get='+encodeURI(data.file)).then(data => data.json())\r\n            song = prepareSongImport(song)\r\n            importSong(song)\r\n        }catch(e){\r\n            console.error(e)\r\n            new LoggerEvent(\"Error\", \"Error downloading song\").trigger()\r\n        }\r\n    }\r\n    const play = async function(){\r\n        try{\r\n            let song = await fetch('https://sky-music.herokuapp.com/api/songs?get='+encodeURI(data.file)).then(data => data.json())\r\n            song = prepareSongImport(song)\r\n            playSong(song)\r\n        }catch(e){\r\n            console.error(e)\r\n            new LoggerEvent(\"Error\", \"Error downloading song\").trigger()\r\n        }\r\n    }\r\n    return <div className=\"song-row\">\r\n    <div className=\"song-name\" onClick={() => {\r\n        play(data)\r\n    }}>\r\n        {data.name}\r\n    </div>\r\n    <div className=\"song-buttons-wrapper\">\r\n        <button className=\"song-button\" onClick={download}>\r\n            <FontAwesomeIcon icon={faDownload} />\r\n        </button>\r\n    </div>\r\n</div>\r\n}\r\nfunction checkIfTWA(){\r\n    let isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n    return isTwa\r\n  }\r\nfunction setIfInTWA(){\r\n    if(checkIfTWA()) return true\r\n    let isTwa = document.referrer.includes('android-app://')\r\n    sessionStorage.setItem('isTwa',isTwa)\r\n    return isTwa\r\n}\r\nexport default Menu","import {instruments, appName} from \"../appConfig\"\r\nlet ComposerSettings = {\r\n    settingVesion: appName + 4,\r\n    instrument: {\r\n        name: \"Instrument (Layer 1)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    layer2: {\r\n        name: \"Instrument (Layer 2)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    layer3: {\r\n        name: \"Instrument (Layer 3)\",\r\n        type: \"instrument\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        volume: 100,\r\n        options: instruments\r\n    },\r\n    bpm: {\r\n        name: \"Bpm\",\r\n        type: \"number\",\r\n        songSetting: true,\r\n        threshold: [0, 1000],\r\n        value: 220\r\n    },\r\n    beatMarks: {\r\n        name: \"Beat marks\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 3,\r\n        options: [\r\n            3,\r\n            4\r\n        ]\r\n    },\r\n    pitch: {\r\n        name: \"Pitch\",\r\n        type: \"select\",\r\n        songSetting: true,\r\n        value: \"C\",\r\n        options: [\r\n            \"C\",\r\n            \"Db\",\r\n            \"D\",\r\n            \"Eb\",\r\n            \"E\",\r\n            \"F\",\r\n            \"Gb\",\r\n            \"G\",\r\n            \"Ab\",\r\n            \"A\",\r\n            \"Bb\",\r\n            \"B\",\r\n        ]\r\n    },\r\n    columnsPerCanvas: {\r\n        name: \"Number of visible columns\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: 35,\r\n        options: [\r\n            20,\r\n            25,\r\n            30,\r\n            35,\r\n            40,\r\n            45,\r\n            50\r\n        ]\r\n    },\r\n    caveMode: {\r\n        name: \"Reverb (cave mode)\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    },\r\n    autosave: {\r\n        name: \"Autosave changes\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    }\r\n}\r\nlet MainPageSettings = {\r\n    settingVesion:appName + 4,\r\n    keyboardSize: {\r\n        name: \"Keyboard size\",\r\n        type: \"number\",\r\n        songSetting: false,\r\n        value: 100,\r\n        threshold: [0, 200]\r\n    },\r\n    instrument: {\r\n        name: \"Instrument\",\r\n        type: \"select\",\r\n        songSetting: false,\r\n        value: instruments[0],\r\n        options: instruments\r\n    },\r\n    pitch: {\r\n        name: \"Pitch\",\r\n        type: \"select\",\r\n        songSetting: true,\r\n        value: \"C\",\r\n        options: [\r\n            \"C\",\r\n            \"Db\",\r\n            \"D\",\r\n            \"Eb\",\r\n            \"E\",\r\n            \"F\",\r\n            \"Gb\",\r\n            \"G\",\r\n            \"Ab\",\r\n            \"A\",\r\n            \"Bb\",\r\n            \"B\",\r\n        ]\r\n    },\r\n    caveMode: {\r\n        name: \"Reverb (cave mode)\",\r\n        type: \"checkbox\",\r\n        songSetting: false,\r\n        value: false,\r\n    }\r\n}\r\nexport {\r\n    ComposerSettings,\r\n    MainPageSettings\r\n}","import { LoggerEvent } from \"./SongUtils\"\r\n\r\nasync function asyncPrompt(question) {\r\n    return new Promise(resolve => {\r\n        let container = document.createElement(\"div\")\r\n        container.className = \"floating-prompt\"\r\n        let text = document.createElement(\"div\")\r\n        text.innerText = question\r\n        let input = document.createElement(\"input\")\r\n        input.type = \"text\"\r\n        input.placeholder = \"Write here\"\r\n        input.className = \"prompt-input\"\r\n        let row = document.createElement(\"div\")\r\n        let cancel = document.createElement(\"button\")\r\n        let ok = document.createElement(\"button\")\r\n        cancel.className = \"prompt-button\"\r\n        ok.className = \"prompt-button disabled\"\r\n        row.className = \"prompt-row\"\r\n        ok.innerText = \"Ok\"\r\n        cancel.innerText = \"Cancel\"\r\n        row.append(cancel, ok)\r\n        container.append(text, input, row)\r\n        document.body.appendChild(container)\r\n        input.addEventListener(\"input\", () => {\r\n            if (input.value.trim() === \"\") {\r\n                ok.classList.add(\"disabled\")\r\n            } else {\r\n                ok.classList.remove(\"disabled\")\r\n            }\r\n\r\n        })\r\n        cancel.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(null)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n        ok.addEventListener(\"click\", () => {\r\n            if (input.value.trim() === \"Untitled\") {\r\n                input.value = \"\"\r\n                return new LoggerEvent(\"Warning\", '\"Untitled\" is a reserved word, use another').trigger()\r\n            }\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(input.value.trim())\r\n\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n    })\r\n}\r\n\r\nasync function asyncConfirm(question) {\r\n    return new Promise(resolve => {\r\n        let container = document.createElement(\"div\")\r\n        container.className = \"floating-prompt\"\r\n        let text = document.createElement(\"div\")\r\n        text.innerText = question\r\n        let row = document.createElement(\"div\")\r\n        let cancel = document.createElement(\"button\")\r\n        let ok = document.createElement(\"button\")\r\n\r\n        cancel.className = \"prompt-button\"\r\n        ok.className = \"prompt-button\"\r\n        row.className = \"prompt-row\"\r\n        ok.innerText = \"Yes\"\r\n        ok.style.background = '#628c83'\r\n        cancel.style.background = '#a9525a'\r\n        cancel.innerText = \"No\"\r\n        row.append(cancel, ok)\r\n        container.append(text, row)\r\n        document.body.appendChild(container)\r\n        cancel.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(false)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n        ok.addEventListener(\"click\", () => {\r\n            container.classList.add(\"floating-prompt-hidden\")\r\n            resolve(true)\r\n            setTimeout(() => container.remove(), 200)\r\n        })\r\n    })\r\n}\r\n\r\nexport {\r\n    asyncConfirm,\r\n    asyncPrompt\r\n}","export default __webpack_public_path__ + \"static/media/rotate.e7c0f107.svg\";","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Keyboard from \"./Keyboard\"\r\nimport Menu from \"./Menu\"\r\nimport ZangoDb from \"zangodb\"\r\nimport { Song, Recording, LoggerEvent, PlayingSong, ComposerToRecording, prepareSongImport} from \"../SongUtils\"\r\nimport { MainPageSettings } from \"../SettingsObj\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSyncAlt, faStop } from '@fortawesome/free-solid-svg-icons'\r\nimport { asyncConfirm, asyncPrompt } from \"../AsyncPrompts\"\r\nimport rotateImg from \"../../assets/icons/rotate.svg\"\r\nimport { appName } from \"../../appConfig\"\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.db = new ZangoDb.Db(appName, { songs: [] })\r\n    this.recording = new Recording()\r\n    let settings = this.getSettings()\r\n    this.dbCol = {\r\n      songs: this.db.collection(\"songs\")\r\n    }\r\n    this.state = {\r\n      keyboardData: {\r\n        instrument: settings.instrument.value,\r\n        playingSong: {\r\n          timestamp: 0,\r\n          notes: []\r\n        },\r\n        practicingSong: {\r\n          timestamp: 0,\r\n          notes: [],\r\n          threshold: 100\r\n        }\r\n      },\r\n      isRecording: false,\r\n      songs: [],\r\n      settings: settings,\r\n      sliderState: {\r\n        position: 0,\r\n        size: 0\r\n      },\r\n      thereIsSong: \"none\",\r\n      isDragging: false\r\n    }\r\n    this.lastPlayedSong = new Recording()\r\n    this.syncSongs()\r\n  }\r\n  \r\n  componentDidMount(){\r\n    document.body.addEventListener('dragenter',this.handleDrag)\r\n    document.body.addEventListener('dragleave',this.resetDrag)\r\n    document.body.addEventListener('dragover',this.handleDragOver)\r\n    document.body.addEventListener('drop',this.handleDrop)\r\n  }\r\n  componentWillUnmount(){\r\n    document.body.removeEventListener('dragenter',this.handleDrag)\r\n    document.body.removeEventListener('dragleave',this.resetDrag)\r\n    document.body.removeEventListener('drop',this.handleDrop)\r\n    document.body.addEventListener('dragover',this.handleDragOver)\r\n  }\r\n  resetDrag = (e) =>{\r\n    this.setState({\r\n      isDragging:false\r\n    })\r\n  }\r\n  handleDragOver= (e) =>{\r\n    e.preventDefault()\r\n    this.setState({\r\n      isDragging:true\r\n    })\r\n  }\r\n  handleDrag = (e) =>{\r\n    e.preventDefault()\r\n    this.setState({\r\n      isDragging:true\r\n    })\r\n  }\r\n  handleDrop = async(e) =>{\r\n    this.resetDrag()\r\n    e.preventDefault()\r\n    let songs = await Promise.all(Array.from(e.dataTransfer.files).map(file => file.text()))\r\n    for(let i = 0; i<songs.length;i++){\r\n      try{\r\n        let song = prepareSongImport(JSON.parse(songs[i]))\r\n        await this.addSong(song)\r\n      }catch(e){\r\n        console.error(e)\r\n      }\r\n\r\n    }\r\n  }\r\n  getSettings = () => {\r\n    let storedSettings = localStorage.getItem(appName + \"_Main_Settings\")\r\n    try {\r\n      storedSettings = JSON.parse(storedSettings)\r\n    } catch (e) {\r\n      storedSettings = null\r\n    }\r\n    if (storedSettings !== null) {\r\n      if (storedSettings.settingVesion !== MainPageSettings.settingVesion) {\r\n        this.updateSettings(MainPageSettings)\r\n        return MainPageSettings\r\n      }\r\n      return storedSettings\r\n    }\r\n    return MainPageSettings\r\n  }\r\n  updateSettings = (override) => {\r\n    let state\r\n    if (override !== undefined) {\r\n      state = override\r\n    } else {\r\n      state = this.state.settings\r\n    }\r\n    localStorage.setItem(appName + \"_Main_Settings\", JSON.stringify(state))\r\n  }\r\n  handleSettingChange = (setting) => {\r\n    let settings = this.state.settings\r\n    let data = setting.data\r\n    settings[setting.key].value = data.value\r\n    if (setting.key === \"instrument\") {\r\n      this.loadInstrument(data.value)\r\n    }\r\n    this.setState({\r\n      settings: settings,\r\n    }, this.updateSettings)\r\n  }\r\n  syncSongs = async () => {\r\n    let songs = await this.dbCol.songs.find().toArray()\r\n    this.setState({\r\n      songs: songs\r\n    })\r\n  }\r\n  loadInstrument = (instrument) => {\r\n    let state = this.state\r\n    state.keyboardData.instrument = instrument\r\n    this.setState({\r\n      keyboardData: state.keyboardData\r\n    })\r\n  }\r\n  practiceSong = async (song, start = 0) => {\r\n    await this.stopSong()\r\n    let oldState = this.state.keyboardData.practicingSong\r\n    if (song.data?.isComposedVersion) {\r\n      song = ComposerToRecording(song)\r\n      oldState.threshold = 10\r\n    }\r\n    oldState.notes = song.notes\r\n    oldState.timestamp = new Date().getTime()\r\n    let songToPractice = JSON.parse(JSON.stringify(this.state.keyboardData.practicingSong))\r\n    songToPractice.start = start\r\n    this.setState({\r\n      keyboardData: this.state.keyboardData,\r\n      thereIsSong: \"practicing\"\r\n    }, () => {\r\n      let event = new CustomEvent(\"practiceSong\", { detail: songToPractice })\r\n      window.dispatchEvent(event)\r\n    })\r\n  }\r\n  //to add the composed songs\r\n  songExists = async (name) => {\r\n    return await this.dbCol.songs.findOne({ name: name }) !== undefined\r\n  }\r\n  addSong = async (song) => {\r\n    try{\r\n      if (await this.songExists(song.name)) {\r\n        return new LoggerEvent(\"Warning\", \"A song with this name already exists! \\n\" + song.name).trigger()\r\n      }\r\n      await this.dbCol.songs.insert(song)\r\n      this.syncSongs()\r\n      new LoggerEvent(\"Success\", `Song added to the ${song.data.isComposedVersion ? \"Composed\" : \"Recorded\"} tab!`, 4000).trigger()\r\n    }catch(e){\r\n      console.error(e)\r\n      return new LoggerEvent(\"Error\", 'There was an error importing the song').trigger()\r\n    }\r\n    \r\n  }\r\n  componentDidCatch() {\r\n    new LoggerEvent(\"Warning\", \"There was an error with the song! Restoring default...\").trigger()\r\n    this.stopSong()\r\n  }\r\n  removeSong = async (name) => {\r\n    let result = await asyncConfirm(`Are you sure you want to delete the song: \"${name}\" ?`)\r\n    if (result) {\r\n      this.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n    }\r\n  }\r\n  handleRecording = (note) => {\r\n    if (this.state.isRecording) {\r\n      this.recording.addNote(note.index)\r\n    }\r\n  }\r\n  handleSliderEvent = (event) => {\r\n\r\n    this.changeSliderState({\r\n      position: Number(event.target.value),\r\n      size: this.state.sliderState.size\r\n    })\r\n  }\r\n  stopSong = () => {\r\n    return new Promise(resolve => {\r\n      let keyboardData = this.state.keyboardData\r\n      keyboardData.practicingSong = new PlayingSong([])\r\n      keyboardData.playingSong = new PlayingSong([])\r\n      this.setState({\r\n        thereIsSong: \"none\",\r\n        keyboardData: keyboardData\r\n      }, () => {\r\n        let event = new CustomEvent(\"playSong\", { detail: new PlayingSong([]) })\r\n        window.dispatchEvent(event)\r\n        event = new CustomEvent(\"practiceSong\", { detail: new PlayingSong([]) })\r\n        window.dispatchEvent(event)\r\n        setTimeout(resolve, 300)\r\n      })\r\n    })\r\n  }\r\n  changeSliderState = (newState) => {\r\n    this.setState({\r\n      sliderState: newState\r\n    })\r\n  }\r\n  playSong = async (song) => {\r\n    await this.stopSong()\r\n    let settings = this.state.settings\r\n    settings.pitch.value = song.pitch\r\n    if (song.data.isComposedVersion) {\r\n      song = ComposerToRecording(song)\r\n    }\r\n    let playingSong = {\r\n      timestamp: new Date().getTime(),\r\n      notes: song.notes\r\n    }\r\n    this.state.keyboardData.playingSong = playingSong\r\n    this.setState({\r\n      keyboardData: this.state.keyboardData,\r\n      thereIsSong: \"playing\",\r\n      settings:settings\r\n    })\r\n\r\n    let event = new CustomEvent(\"playSong\", { detail: playingSong })\r\n    window.dispatchEvent(event)\r\n    this.lastPlayedSong = song\r\n  }\r\n  askForSongName = () => {\r\n    return new Promise(async resolve => {\r\n        let promptString = \"Write song name, press cancel to ignore\"\r\n        while (true) {\r\n            let songName = await asyncPrompt(promptString)\r\n            if (songName === null) return resolve(null)\r\n            if (songName !== \"\") {\r\n                if (await this.songExists(songName)) {\r\n                    promptString = \"This song already exists: \" + songName\r\n                } else {\r\n                    return resolve(songName)\r\n                }\r\n            } else {\r\n                promptString = \"Write song name, press cancel to ignore\"\r\n            }\r\n        }\r\n    })\r\n\r\n}\r\n  toggleRecord = async (override) => {\r\n    if (typeof override !== \"boolean\") override = undefined\r\n    let newState = override !== undefined ? override : !this.state.isRecording\r\n    if (!newState && this.recording.notes.length > 0) {\r\n      let songName = await this.askForSongName()\r\n      let song = new Song(songName, this.recording.notes)\r\n      song.pitch = this.state.settings.pitch.value\r\n      if (songName !== null) this.addSong(song)\r\n    } else {\r\n      this.recording = new Recording()\r\n      let eventData = new PlayingSong([])\r\n      let event = new CustomEvent(\"playSong\", { detail: eventData })\r\n      window.dispatchEvent(event)\r\n    }\r\n    this.state.isRecording = newState\r\n    this.setState({\r\n      open: this.state.isRecording\r\n    })\r\n  }\r\n  render() {\r\n    let state = this.state\r\n    let keyboardFunctions = {\r\n      handleRecording: this.handleRecording,\r\n      changeSliderState: this.changeSliderState,\r\n      stopSong: this.stopSong\r\n    }\r\n    let menuFunctions = {\r\n      addSong: this.addSong,\r\n      removeSong: this.removeSong,\r\n      playSong: this.playSong,\r\n      practiceSong: this.practiceSong,\r\n      stopSong: this.stopSong,\r\n      changePage: this.props.changePage,\r\n      handleSettingChange: this.handleSettingChange,\r\n    }\r\n    let menuData = {\r\n      songs: state.songs,\r\n      settings: this.state.settings\r\n    }\r\n\r\n    return <div className=\"app\">\r\n      <div className=\"rotate-screen\">\r\n        <img src={rotateImg}>\r\n        </img>\r\n          For a better experience, add the website to the home screen, and rotate your device\r\n      </div>\r\n      {state.isDragging && <div className='drag-n-drop'>\r\n          Drop file here\r\n      </div>}\r\n      <Menu functions={menuFunctions} data={menuData} />\r\n      <div className=\"right-panel\">\r\n        <div className=\"upper-right\">\r\n          {this.state.thereIsSong !== \"none\"\r\n            ? <div className=\"slider-wrapper\">\r\n              <button className=\"song-button\" onClick={this.stopSong}>\r\n                <FontAwesomeIcon icon={faStop} />\r\n              </button>\r\n              <input\r\n                type=\"range\"\r\n                className=\"slider\"\r\n                min={0}\r\n                onChange={this.handleSliderEvent}\r\n                max={state.sliderState.size}\r\n                value={state.sliderState.position}\r\n              ></input>\r\n              <button className=\"song-button\" onClick={async () => {\r\n                if (this.state.thereIsSong === \"practicing\") {\r\n                  this.practiceSong(state.keyboardData.practicingSong, state.sliderState.position)\r\n                } else {\r\n                  await this.stopSong()\r\n                  this.playSong(this.lastPlayedSong)\r\n                }\r\n              }}>\r\n                <FontAwesomeIcon icon={faSyncAlt} />\r\n              </button>\r\n            </div>\r\n            :\r\n            <GenshinButton\r\n              active={state.isRecording}\r\n              click={this.toggleRecord}\r\n            >\r\n              {state.isRecording ? \"Stop\" : \"Record\"}\r\n            </GenshinButton>\r\n\r\n          }\r\n\r\n\r\n\r\n        </div>\r\n        <div className=\"keyboard-wrapper\">\r\n\r\n          <Keyboard\r\n            key={state.keyboardData.instrument}\r\n            data={state.keyboardData}\r\n            settings={this.state.settings}\r\n            functions={keyboardFunctions}\r\n            isRecording={state.isRecording}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction checkIfTWA(){\r\n  let isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n  return isTwa\r\n}\r\n\r\nfunction setIfInTWA(){\r\n  if(checkIfTWA()) return console.log('inTWA')\r\n  let isTwa = document.referrer.includes('android-app://')\r\n  sessionStorage.setItem('isTwa',isTwa)\r\n}\r\nsetIfInTWA()\r\nfunction GenshinButton(props) {\r\n  let className = \"genshin-button record-btn \" + (props.active ? \"selected\" : \"\")\r\n  return <button className={className} onClick={props.click}>\r\n    {props.children}\r\n  </button>\r\n}\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/addCell.73b6c8e9.svg\";","export default __webpack_public_path__ + \"static/media/removeCell.e266ba1a.svg\";","import React, { Component } from 'react'\r\n\r\nclass ComposerTools extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let className = data.visible ? \"floating-tools tools-visible\" : \"floating-tools\"\r\n        return <div className={className}>\r\n            <div className=\"tools-row\">\r\n                <div>\r\n                    Scroll to the left / right to select the columns\r\n                </div>\r\n                <button onClick={functions.toggleTools}>\r\n                    Close\r\n                </button>\r\n            </div>\r\n            <div className=\"tools-buttons-wrapper\">\r\n                <div className='tools-half'>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.copyColumns('all')\r\n                        }}\r\n                        className={data.copiedColumns.length !== 0 ? \"tools-button-highlighted\" : \"\"}\r\n                    >\r\n                        Copy\r\n                    </button>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.copyColumns(data.layer)\r\n                        }}\r\n                        className={data.copiedColumns.length !== 0 ? \"tools-button-highlighted\" : \"\"}\r\n                    >\r\n                        Copy layer {data.layer}\r\n                    </button>\r\n                </div>\r\n                <div className='tools-half'>\r\n                    <button\r\n                        disabled={data.copiedColumns.length === 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.pasteColumns(false)\r\n                        }}\r\n                    >\r\n                        Paste\r\n                </button>\r\n                    <button\r\n                        disabled={data.copiedColumns.length === 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.pasteColumns(true)\r\n                        }}\r\n                    >\r\n                        Insert\r\n                </button>\r\n                </div>\r\n                <div className='tools-half'>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.eraseColumns('all')\r\n                        }}\r\n                    >\r\n                        Erase\r\n                    </button>\r\n                    <button\r\n                        disabled={data.copiedColumns.length !== 0}\r\n                        onClick={(e) => { \r\n                            e.currentTarget.blur()\r\n                            functions.eraseColumns(data.layer)\r\n                        }}\r\n                    >\r\n                        Erase layer {data.layer}\r\n                    </button>\r\n                </div>\r\n\r\n                <button\r\n                    disabled={data.copiedColumns.length !== 0}\r\n                    onClick={functions.deleteColumns}\r\n                >\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerTools","import React, { Component } from 'react'\r\nimport { cssClasses,appName } from \"../../appConfig\" \r\nclass ComposerNote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    shouldComponentUpdate(next, prev) {\r\n        return this.props.layers !== next.layers || this.props.skyText !== next.skyText\r\n    }\r\n    render() {\r\n        const {props} = this\r\n        const { data, layers } = props\r\n        let className = cssClasses.noteComposer\r\n        if (layers[0] === \"1\") className += \" layer-1\"\r\n        if (layers[1] === \"1\") className += \" layer-2\"\r\n        if (layers[2] === \"1\") className += \" layer-3\"\r\n        let noteText = data.noteNames.mobile\r\n        let svgUrl = `./assets/icons/keys/${data.noteNames.mobile}.svg`\r\n        if(appName === \"Sky\") svgUrl = `./assets/icons/keys/${props.skyImg}.svg`\r\n        if(appName === \"Sky\") noteText = props.skyText\r\n        let layer3Class = \"Sky\" ? \"layer-3-ball-bigger\" : \"layer-3-ball\"\r\n        return <button onPointerDown={() => this.props.clickAction(data)} className=\"button-hitbox\">\r\n            <div className={className} >\r\n                <img\r\n                    draggable=\"false\"\r\n                    alt={data.noteNames.mobile}\r\n                    src={svgUrl}>\r\n\r\n                </img>\r\n                <div className={layer3Class}>\r\n                </div>\r\n                <div className={appName === \"Sky\" ? \"note-name-sky\" : \"note-name\"}>\r\n                    {noteText}\r\n                </div>\r\n            </div>\r\n        </button>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerNote","import React, { Component } from 'react'\r\n\r\nclass MultiSwitch extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let props = this.props\r\n        return <>\r\n            {props.options.map(e => {\r\n                return <button\r\n                    style={{ backgroundColor: e === props.selected ? props.selectedColor : \"\" }}\r\n                    className={props.buttonsClass}\r\n                    onClick={() => props.onSelect(e)}\r\n                    key={e}\r\n                >\r\n                    {e}\r\n                </button>\r\n            })}\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MultiSwitch\r\n\r\n","import React, { Component } from 'react'\r\nimport ComposerNote from \"./ComposerNote\"\r\nimport MultiSwitch from \"./MultiSwitch\"\r\nimport { keyNames, pitchArr , skyImages, appName} from \"../../appConfig\"\r\nclass ComposerKeyboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let notesIndexes = data.currentColumn.notes.map((e) => e.index)\r\n        let hiddenSideMenu = data.isPlaying ? \" hidden\" : \"\"\r\n        let keyboardClass = \"keyboard\"\r\n        if (data.keyboard.layout.length === 15) keyboardClass += \" keyboard-5\"\r\n        if (data.keyboard.layout.length === 8) keyboardClass += \" keyboard-4\"\r\n        return <div>\r\n            <div className={keyboardClass}>\r\n            {data.keyboard.layout.length === 0 ? <div className=\"loading\">Loading...</div> : null}\r\n                {data.keyboard.layout.map((note, i) => {\r\n                    let index = notesIndexes.indexOf(i)\r\n                    let skyText = \"\"\r\n                    let skyImg = \"\"\r\n                    try{\r\n                        skyText = keyNames[pitchArr.indexOf(data.pitch)][note.index]\r\n                        skyImg = skyImages[data.keyboard.layout.length][note.index]     \r\n                    }catch(e){}\r\n\r\n                    return <ComposerNote\r\n                        key={note.index}\r\n                        layers={index >= 0 ? data.currentColumn.notes[index].layer : \"000\"}\r\n                        data={note}\r\n                        skyText={skyText}\r\n                        skyImg={skyImg}\r\n                        clickAction={functions.handleClick}\r\n                    />\r\n                })}\r\n            </div>\r\n            <div className={\"bottom-right-wrapper\" + hiddenSideMenu}>\r\n                <div className={\"layer-buttons-wrapper\"}>\r\n                    <div className=\"bottom-right-text\">\r\n                        Layer\r\n                    </div>\r\n                    <MultiSwitch\r\n                        buttonsClass={\"layer-button\"}\r\n                        selectedColor={\"#63aea7\"}\r\n                        options={[1, 2, 3]}\r\n                        onSelect={functions.changeLayer}\r\n                        selected={data.layer}\r\n                    />\r\n                </div>\r\n                <div className=\"tempo-changers-wrapper\">\r\n                    <div className=\"bottom-right-text\">\r\n                        Tempo\r\n                    </div>\r\n                    {data.TempoChangers.map((e) => {\r\n                        return <button\r\n                            key={e.id}\r\n                            onClick={() => functions.handleTempoChanger(e)}\r\n                            style={{ backgroundColor: \"#\" + e.color.toString(16) }}\r\n                        >\r\n                            {e.text}\r\n                        </button>\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ComposerKeyboard","import { TempoChangers } from \"../SongUtils\"\r\nimport * as PIXI from \"pixi.js\"\r\nimport {notesPerColumn } from \"../../appConfig\"\r\nlet noteData = {\r\n    background: \"#d3bd8e\",\r\n    border: \"#de4545\",\r\n    center: \"#de4545\"\r\n}\r\n\r\nlet horizontalLineBreak = notesPerColumn / 3\r\nlet standards = [\r\n    {\r\n        color: 0x515c6f //lighter\r\n    },\r\n    {\r\n        color: 0x485363 //darker\r\n    },\r\n    {\r\n        color: 0x1a968b //selected\r\n    },\r\n    {\r\n        color: 0xd6722f\r\n    }\r\n]\r\nlet notes = [\"000\", \"001\", \"010\", \"011\", \"100\", \"101\", \"110\", \"111\"]\r\nlet breakpoints = [\r\n    {\r\n        type: \"short\",\r\n        color: \"#282875\"\r\n    },\r\n    {\r\n        type: \"long\",\r\n        color: \"#282875\"\r\n    }\r\n]\r\nclass ComposerCache {\r\n    constructor(width, height, margin = 4, timelineHeight = 30) {\r\n        this.width = width\r\n        this.height = height\r\n        this.cache = {\r\n            columns: [],\r\n            notes: {},\r\n            standard: [],\r\n            columnsLarger: [],\r\n            standardLarger: [],\r\n            breakpoints: []\r\n        }\r\n        this.notesFigures = []\r\n        this.timelineHeight = timelineHeight\r\n        this.margin = margin\r\n        this.noteWidth = this.width\r\n        this.noteHeight = this.height / notesPerColumn\r\n        this.app = new PIXI.Application({\r\n            width: width,\r\n            height: height,\r\n        })\r\n        this.generate()\r\n    }\r\n    generate = () => {\r\n\r\n        TempoChangers.forEach(tempoChanger => {\r\n            let canvas = drawColumn(tempoChanger, this, 1)\r\n            this.cache.columns.push(canvas.toDataURL())\r\n        })\r\n        standards.forEach(standardColumn => {\r\n            let canvas = drawColumn(standardColumn, this, 1)\r\n            this.cache.standard.push(canvas.toDataURL())\r\n        })\r\n        standards.forEach(standardColumn => {\r\n            let canvas = drawColumn(standardColumn, this, 3)\r\n            this.cache.standardLarger.push(canvas.toDataURL())\r\n        })\r\n        notes.forEach(note => {\r\n            let roundNess = this.noteWidth > 20 ? 4 : 2\r\n            let canvas = document.createElement(\"canvas\")\r\n            canvas.height = this.noteHeight\r\n            canvas.width = this.noteWidth\r\n            let ctx = canvas.getContext(\"2d\")\r\n            if (note[0] === \"1\") {\r\n                ctx.fillStyle = noteData.background\r\n                roundRect(\r\n                    ctx,\r\n                    this.margin / 2,\r\n                    this.margin / 2,\r\n                    this.noteWidth - this.margin - 1,\r\n                    this.noteHeight - this.margin - 1,\r\n                    roundNess,\r\n                    true,\r\n                    false\r\n                )\r\n            }\r\n            if (note[1] === \"1\") {\r\n                ctx.strokeStyle = noteData.border\r\n                ctx.lineWidth = 2\r\n                roundRect(\r\n                    ctx,\r\n                    this.margin / 2,\r\n                    this.margin / 2,\r\n                    this.noteWidth - this.margin - 1,\r\n                    this.noteHeight - this.margin - 1,\r\n                    roundNess,\r\n                    false,\r\n                    true\r\n                )\r\n            }\r\n            if (note[2] === \"1\") {\r\n                ctx.beginPath()\r\n                ctx.fillStyle = noteData.center\r\n                let ballHeight = this.noteHeight / 4\r\n                ctx.arc(this.noteWidth / 2 - 0.5, this.noteHeight / 2 - 0.5, ballHeight, 0, 2 * Math.PI);\r\n                ctx.fill()\r\n            }\r\n            this.cache.notes[note] = canvas.toDataURL()\r\n        })\r\n        TempoChangers.forEach(tempoChanger => {\r\n            let canvas = drawColumn(tempoChanger, this, 2)\r\n            this.cache.columnsLarger.push(canvas.toDataURL())\r\n        })\r\n        breakpoints.forEach(breakpoint => {\r\n            let canvas = document.createElement(\"canvas\")\r\n            if (breakpoint.type === \"short\") {\r\n                let size = this.timelineHeight / 6\r\n                canvas.height = this.timelineHeight\r\n                canvas.width = size * 2\r\n                let ctx = canvas.getContext(\"2d\")\r\n                ctx.fillStyle = breakpoint.color\r\n                ctx.arc(size, this.timelineHeight / 2, size, 0, 2 * Math.PI);\r\n                ctx.fill()\r\n                this.cache.breakpoints.push(canvas.toDataURL())\r\n            } else {\r\n                canvas.height = this.height\r\n                canvas.width = this.width\r\n                let ctx = canvas.getContext(\"2d\")\r\n                ctx.fillStyle = breakpoint.color\r\n                /*\r\n               ctx.strokeStyle = breakpoint.color\r\n               ctx.lineWidth = 3\r\n                ctx.strokeRect(1,1,this.width - 3,this.height - 2)\r\n                */\r\n                ctx.beginPath();\r\n                ctx.moveTo(0, this.height)\r\n                ctx.lineTo(this.noteWidth / 2, this.height)\r\n                ctx.lineTo(0, this.height - this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.width, this.height)\r\n                ctx.lineTo(this.noteWidth / 2, this.height)\r\n                ctx.lineTo(this.width, this.height - this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(0, 0)\r\n                ctx.lineTo(this.noteWidth / 2, 0)\r\n                ctx.lineTo(0, this.noteHeight)\r\n                ctx.fill();\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.width, 0)\r\n                ctx.lineTo(this.noteWidth / 2, 0)\r\n                ctx.lineTo(this.width, this.noteHeight)\r\n                ctx.fill();\r\n\r\n                this.cache.breakpoints.push(canvas.toDataURL())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction drawColumn(tempoChanger, self, borderWidth) {\r\n    let canvas = document.createElement(\"canvas\")\r\n    canvas.height = self.height\r\n    canvas.width = self.width\r\n    let ctx = canvas.getContext(\"2d\")\r\n    ctx.fillStyle = \"#\" + tempoChanger.color.toString(16)\r\n    ctx.fillRect(0, 0, self.width, self.height)\r\n    ctx.strokeStyle = borderWidth === 2 ? \"black\" : \"#333333\"\r\n    ctx.lineWidth = borderWidth\r\n    ctx.beginPath()\r\n    ctx.moveTo(self.width, 0)\r\n    ctx.lineTo(self.width, self.height)\r\n    ctx.stroke()\r\n    ctx.strokeStyle = \"#333333\"\r\n    for (let i = 1; i < 3; i++) {\r\n        ctx.lineWidth = 1\r\n        let y = self.noteHeight * horizontalLineBreak * i\r\n        ctx.moveTo(0, y)\r\n        ctx.lineTo(self.width, y)\r\n    }\r\n    ctx.stroke()\r\n    return canvas\r\n}\r\n\r\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\r\n    if (typeof stroke === 'undefined') {\r\n        stroke = true;\r\n    }\r\n    if (typeof radius === 'undefined') {\r\n        radius = 5;\r\n    }\r\n    if (typeof radius === 'number') {\r\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\r\n    } else {\r\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\r\n        for (var side in defaultRadius) {\r\n            radius[side] = radius[side] || defaultRadius[side];\r\n        }\r\n    }\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + radius.tl, y);\r\n    ctx.lineTo(x + width - radius.tr, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n    ctx.lineTo(x + width, y + height - radius.br);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\r\n    ctx.lineTo(x + radius.bl, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n    ctx.lineTo(x, y + radius.tl);\r\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n    ctx.closePath();\r\n    if (fill) {\r\n        ctx.fill();\r\n    }\r\n    if (stroke) {\r\n        ctx.stroke();\r\n    }\r\n\r\n}\r\nexport {\r\n    ComposerCache\r\n}","import React, { Component } from 'react'\r\nimport { Stage, Container, Graphics, Sprite } from '@inlet/react-pixi';\r\nimport { ComposerCache } from \"./ComposerCache\"\r\nimport { faStepBackward, faStepForward, faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"./Composer.css\"\r\nimport isMobile from \"is-mobile\"\r\nimport { composerNotePositions, notesPerColumn, appName } from \"../../appConfig\"\r\nlet NumOfColumnsPerCanvas = 35\r\n\r\nclass ComposerCanvas extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let sizes = document.body.getBoundingClientRect()\r\n        this.sizes = sizes\r\n        NumOfColumnsPerCanvas = Number(this.props.data.settings.columnsPerCanvas.value)\r\n        let width = nearestEven(sizes.width * 0.82)\r\n        let height = nearestEven(sizes.height * 0.45)\r\n\r\n        if (window.screen.width < sizes.height) {\r\n            width = nearestEven(sizes.height * 0.82)\r\n            height = nearestEven(sizes.width * 0.45)\r\n        }\r\n        if(appName === \"Sky\") height = nearestEven(height * 0.95)\r\n        this.state = {\r\n            width: width,\r\n            height: height,\r\n            column: {\r\n                width: calcMinColumnWidth(nearestEven(width)),\r\n                height: height\r\n            },\r\n            timelineHeight: isMobile() ? 25 : 30,\r\n            currentBreakpoint: -1\r\n        }\r\n        this.canvasRef = React.createRef()\r\n        let margin = isMobile() ? 1 : 4\r\n        this.cache = new ComposerCache(this.state.column.width, height, margin, this.state.timelineHeight).cache\r\n        this.stageSelected = false\r\n        this.sliderSelected = false\r\n        this.stagePreviousPositon = 0\r\n        this.throttleStage = 0\r\n    }\r\n    resetPointerDown = (e) => {\r\n        this.stageSelected = false\r\n        this.sliderSelected = false\r\n        this.stagePreviousPositon = 0\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"pointerup\", this.resetPointerDown)\r\n        this.canvasRef.current._canvas.addEventListener(\"wheel\", this.handleWheel)\r\n        window.addEventListener(\"keydown\", this.handleKeyboard)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"pointerup\", this.resetPointerDown)\r\n        window.removeEventListener(\"keydown\", this.handleKeyboard)\r\n        this.canvasRef.current._canvas.removeEventListener(\"wheel\", this.handleWheel)\r\n    }\r\n    handleKeyboard = (event) => {\r\n        let key = event.keyCode\r\n        switch (key) {\r\n            case 39: this.handleBreakpoints(1)\r\n                break;\r\n            case 37: this.handleBreakpoints(-1)\r\n                break;\r\n        }\r\n    }\r\n    handleWheel = (e) => {\r\n        if (e.deltaY < 0) {\r\n            this.props.functions.selectColumn(this.props.data.selected - 1, true)\r\n        } else {\r\n            this.props.functions.selectColumn(this.props.data.selected + 1, true)\r\n        }\r\n    }\r\n    handleClick = (e, type) => {\r\n        let x = e.data.global.x\r\n        if (type === \"click\") {\r\n            let totalWidth = this.state.column.width * this.props.data.columns.length\r\n\r\n            let relativePos = Math.floor(x / this.state.width * totalWidth / this.state.column.width)\r\n            this.props.functions.selectColumn(relativePos)\r\n        }\r\n        if (type === \"up\") {\r\n            this.sliderSelected = false\r\n        }\r\n        if (type === \"down\") {\r\n            this.sliderSelected = true\r\n        }\r\n        if (type === \"downStage\") {\r\n            this.stagePreviousPositon = x\r\n            this.stageSelected = true\r\n        }\r\n    }\r\n    handleStageSlide = (e) => {\r\n        let x = e.data.global.x\r\n        if (this.stageSelected === true) {\r\n            this.throttleStage++\r\n            if (this.throttleStage < 5) return\r\n            this.throttleStage = 0\r\n            let isMovingLeft = this.stagePreviousPositon < x\r\n            let amount = Math.ceil(Math.abs(this.stagePreviousPositon - x) / 8)\r\n            if (amount > 4) amount = 4\r\n            let toAdd = isMovingLeft ? -1 : 1\r\n            this.stagePreviousPositon = x\r\n            let finalPos = this.props.data.selected + toAdd * amount\r\n            if (this.props.data.selected === finalPos) return\r\n            if (finalPos < 0) finalPos = 0\r\n            if (finalPos > this.props.data.columns.length) finalPos = this.props.data.columns.length - 1\r\n            this.props.functions.selectColumn(finalPos, true)\r\n        }\r\n    }\r\n    handleBreakpoints = (direction) => {\r\n        let selectedColumn = this.props.data.selected\r\n        let columns = this.props.data.columns\r\n        let breakpoint\r\n        let breakpoints = this.props.data.breakpoints\r\n        if (direction === 1) {//right\r\n            breakpoint = breakpoints.filter((v) => v > selectedColumn).sort((a, b) => a - b)\r\n        } else {\r\n            breakpoint = breakpoints.filter((v) => v < selectedColumn).sort((a, b) => b - a)\r\n        }\r\n        if (breakpoint.length >= 0) {\r\n            if (columns.length >= breakpoint[0] && breakpoint[0] >= 0) {\r\n                this.props.functions.selectColumn(breakpoint[0])\r\n            }\r\n        }\r\n\r\n    }\r\n    handleSlide = (e) => {\r\n        if (this.sliderSelected) {\r\n            this.throttleStage++\r\n            if (this.throttleStage < 4) return\r\n            this.throttleStage = 0\r\n            let totalWidth = this.state.column.width * this.props.data.columns.length\r\n            let x = e.data.global.x\r\n            let relativePos = Math.floor(x / this.state.width * totalWidth / this.state.column.width)\r\n            this.props.functions.selectColumn(relativePos, true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let s = this.state\r\n        let pixiOptions = {\r\n            backgroundColor: 0x495466,\r\n        }\r\n        const { data, functions } = this.props\r\n        let sizes = this.state.column\r\n        let xPos = (data.selected - NumOfColumnsPerCanvas / 2 + 1) * - sizes.width\r\n        let timelineHeight = this.state.timelineHeight\r\n        let counter = 0\r\n        let switcher = false\r\n        let cache = this.cache\r\n        let beatMarks = Number(data.settings.beatMarks.value)\r\n        let counterLimit = beatMarks === 0 ? 11 : 4 * beatMarks - 1\r\n        let relativeColumnWidth = this.state.width / data.columns.length\r\n        let stageSize = Math.floor(relativeColumnWidth * (NumOfColumnsPerCanvas + 1))\r\n        if (stageSize > this.state.width) stageSize = this.state.width\r\n        let stagePos = relativeColumnWidth * data.selected - (NumOfColumnsPerCanvas / 2 - 1) * relativeColumnWidth\r\n        return <div className=\"canvas-wrapper\" style={{ width: s.width + 6 }}>\r\n            <Stage\r\n                width={s.width}\r\n                height={s.height}\r\n                options={pixiOptions}\r\n                key={this.state.width}\r\n                ref={this.canvasRef}\r\n            >\r\n                <Container\r\n                    anchor={[0.5, 0.5]}\r\n                    x={xPos}\r\n                    interactive={true}\r\n                    pointerdown={(e) => this.handleClick(e, \"downStage\")}\r\n                    pointermove={(e) => this.handleStageSlide(e)}\r\n                >\r\n                    {data.columns.map((column, i) => {\r\n                        if (counter > counterLimit) {\r\n                            switcher = !switcher\r\n                            counter = 0\r\n                        }\r\n                        counter++\r\n                        if (!isVisible(i, data.selected)) return null\r\n                        let tempoChangersCache = (i + 1) % 4 === 0 ? cache.columnsLarger : cache.columns\r\n                        let standardCache = (i + 1) % 4 === 0 ? cache.standardLarger : cache.standard\r\n                        let standardBg = standardCache[Number(switcher)] // boolean is 1 or 0\r\n                        let background = column.tempoChanger === 0 ? standardBg : tempoChangersCache[column.tempoChanger]\r\n                        return <Column\r\n                            cache={cache}\r\n                            key={i}\r\n                            data={column}\r\n                            index={i}\r\n                            sizes={sizes}\r\n                            backgroundCache={background}\r\n                            isToolsSelected={data.toolsColumns.includes(i)}\r\n                            click={functions.selectColumn}\r\n                            isSelected={i === data.selected}\r\n                            isBreakpoint={data.breakpoints.includes(i)}\r\n                        />\r\n\r\n                    })}\r\n\r\n                </Container>\r\n            </Stage>\r\n            <div className=\"timeline-wrapper\" style={{ height: this.state.timelineHeight }}>\r\n                <div className=\"timeline-button\" onClick={() => this.handleBreakpoints(-1)}>\r\n                    <FontAwesomeIcon icon={faStepBackward} />\r\n                </div>\r\n                <div className=\"timeline-button\" onClick={() => this.handleBreakpoints(1)}>\r\n                    <FontAwesomeIcon icon={faStepForward} />\r\n                </div>\r\n\r\n\r\n                <Stage\r\n                    width={s.width}\r\n                    height={timelineHeight}\r\n                    options={{ antialias: true, autoDensity: true }}\r\n                >\r\n                    <Container\r\n                        width={this.state.width}\r\n                        height={this.state.timelineHeight}\r\n                        interactive={true}\r\n                        pointertap={(e) => this.handleClick(e, \"click\")}\r\n                        pointerdown={(e) => this.handleClick(e, \"down\")}\r\n                        pointerup={(e) => this.handleClick(e, \"up\")}\r\n                        pointermove={this.handleSlide}\r\n                    >\r\n                        <Graphics draw={(e) => { fillX(e, this.state.width, this.state.timelineHeight) }} />\r\n                        {data.breakpoints.map(breakpoint => {\r\n                            return <Sprite\r\n                                image={cache.breakpoints[0]}\r\n                                key={breakpoint}\r\n                                x={relativeColumnWidth * breakpoint}\r\n\r\n                            >\r\n\r\n                            </Sprite>\r\n                        })}\r\n                    </Container>\r\n\r\n                    <Graphics draw={(e) => drawStage(e, stageSize, this.state.timelineHeight)} x={stagePos} y={2} />\r\n\r\n\r\n                </Stage>\r\n                <div className=\"timeline-button\" onClick={functions.toggleBreakpoint}>\r\n                    <FontAwesomeIcon icon={data.breakpoints.includes(data.selected) ? faMinusCircle : faPlusCircle} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction fillX(g, width, height) {\r\n    g.clear()\r\n    g.beginFill(0x515c6f, 1)\r\n    g.drawRect(0, 0, width, height)\r\n}\r\nfunction drawStage(g, width, height) {\r\n    g.clear()\r\n    g.lineStyle(3, 0x1a968b, 0.8)\r\n    g.drawRoundedRect(0, 0, width - 2, height - 4, 6)\r\n}\r\n\r\nfunction Column(props) {\r\n    let { data, index, sizes, click, cache, backgroundCache, isBreakpoint, isSelected, isToolsSelected } = props\r\n    return <Container\r\n        pointertap={() => click(index)}\r\n        interactive={true}\r\n        x={sizes.width * index}\r\n\r\n    >\r\n        <Sprite\r\n            image={backgroundCache}\r\n            interactiveChildren={false}\r\n        >\r\n            {isSelected || isToolsSelected ? <Sprite\r\n                image={isToolsSelected && !isSelected? cache.standard[3] : cache.standard[2]}\r\n                alpha={isToolsSelected ?0.4 : 0.6}\r\n                zIndex={1}\r\n            >\r\n            </Sprite> : null}\r\n            {isBreakpoint ? <Sprite\r\n                image={cache.breakpoints[1]}\r\n            >\r\n            </Sprite> : null}\r\n        </Sprite>\r\n        {data.notes.map((note) => {\r\n            return <Sprite\r\n                key={note.index}\r\n                image={cache.notes[note.layer]}\r\n                y={positions[note.index] * sizes.height / notesPerColumn}\r\n            >\r\n\r\n            </Sprite>\r\n        })}\r\n\r\n    </Container>\r\n}\r\nfunction calcMinColumnWidth(parentWidth) {\r\n    return nearestEven(parentWidth / NumOfColumnsPerCanvas)\r\n}\r\nfunction nearestEven(num) {\r\n    return 2 * Math.round(num / 2);\r\n}\r\nfunction isVisible(pos, currentPos) {\r\n    let threshold = NumOfColumnsPerCanvas / 2 + 2\r\n    let boundaries = [currentPos - threshold, currentPos + threshold]\r\n    return boundaries[0] < pos && pos < boundaries[1]\r\n}\r\nconst positions = composerNotePositions\r\nexport default ComposerCanvas","import React, { Component, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSave, faMusic, faTimes, faCog, faTrash, faCompactDisc, faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport \"../mainPage/menu.css\"\r\n\r\nimport { FileDownloader, LoggerEvent, ComposerSongSerialization, prepareSongDownload } from \"../SongUtils\"\r\nimport {appName} from '../../appConfig'\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: false,\r\n            selectedMenu: \"Settings\",\r\n            selectedSongType: \"composed\",\r\n        }\r\n    }\r\n    toggleMenu = (override) => {\r\n        if (typeof override !== \"boolean\") override = undefined\r\n        let newState = override !== undefined ? override : !this.state.open\r\n        this.setState({\r\n            open: newState,\r\n        })\r\n        if (newState === false) {\r\n            this.props.functions.toggleMenuVisible()\r\n        }\r\n    }\r\n    changeSelectedSongType = (name) => {\r\n        this.setState({\r\n            selectedSongType: name\r\n        })\r\n    }\r\n    selectSideMenu = (selection) => {\r\n        if (selection === this.state.selectedMenu && this.state.open) {\r\n            return this.setState({\r\n                open: false,\r\n            })\r\n        }\r\n        this.setState({\r\n            selectedMenu: selection,\r\n            open: true\r\n        })\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        if(song.data.isComposedVersion){\r\n            song = ComposerSongSerialization(song)\r\n        }\r\n        let songName = song.name\r\n        if(appName === \"Sky\"){\r\n            //adds old format into the sheet\r\n            song = prepareSongDownload(song)\r\n        }\r\n        if(!Array.isArray(song)) song = [song]\r\n        song.forEach(song1 => {\r\n            song1.data.appName = appName\r\n        })\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json,`${songName}.${appName.toLowerCase()}sheet.json`)\r\n        new LoggerEvent(\"Success\", \"Song downloaded\").trigger()\r\n    }\r\n    render() {\r\n        const { data, functions } = this.props\r\n        let sideClass = this.state.open ? \"side-menu menu-open\" : \"side-menu\"\r\n        let selectedMenu = this.state.selectedMenu\r\n        const { loadSong, removeSong, updateSong, changePage, handleSettingChange, changeVolume } = functions\r\n        let songFunctions = {\r\n            loadSong: loadSong,\r\n            removeSong: removeSong,\r\n            toggleMenu: this.toggleMenu,\r\n            downloadSong: this.downloadSong\r\n        }\r\n        let songs = data.songs.filter(song => !song.data?.isComposedVersion)\r\n        let composedSongs = data.songs.filter(song => song.data?.isComposedVersion)\r\n        let hasUnsaved = data.hasChanges ? \"margin-top-auto not-saved\" : \"margin-top-auto\"\r\n        let menuClass = data.menuOpen ? \"menu menu-visible\" : \"menu\"\r\n        return <div className=\"menu-wrapper\">\r\n            <div className={menuClass}>\r\n                <CloseMenu action={this.toggleMenu} />\r\n                <MenuItem type=\"Save\" action={() => updateSong(data.currentSong)} className={hasUnsaved}>\r\n                    <FontAwesomeIcon icon={faSave} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Songs\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faMusic} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Settings\" action={this.selectSideMenu}>\r\n                    <FontAwesomeIcon icon={faCog} className=\"icon\" />\r\n                </MenuItem>\r\n                <MenuItem type=\"Composer\" action={() => changePage(\"\")} className=\"inverted\">\r\n                    <FontAwesomeIcon icon={faCompactDisc} className=\"icon\" />\r\n                </MenuItem>\r\n            </div>\r\n            <div className={sideClass}>\r\n                <MenuPanel title=\"No selection\" visible={selectedMenu}>\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Songs\" visible={selectedMenu}>\r\n                    <div className=\"songs-buttons-wrapper\">\r\n                        <button className=\"genshin-button\" onClick={this.props.functions.createNewSong}>\r\n                            Create new song\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"tab-selector-wrapper\">\r\n                        <button\r\n                            className={this.state.selectedSongType === \"recorded\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"recorded\")}\r\n                        >\r\n                            Recorded\r\n                        </button>\r\n                        <button\r\n                            className={this.state.selectedSongType === \"composed\" ? \"tab-selector tab-selected\" : \"tab-selector\"}\r\n                            onClick={() => this.changeSelectedSongType(\"composed\")}\r\n                        >\r\n                            Composed\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"songs-wrapper no-margin\">\r\n                        {this.state.selectedSongType === \"recorded\"\r\n                            ? songs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={songFunctions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n\r\n                            : composedSongs.map(song => {\r\n                                return <SongRow\r\n                                    data={song}\r\n                                    key={song.name}\r\n                                    functions={songFunctions}\r\n                                >\r\n                                </SongRow>\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </MenuPanel>\r\n                <MenuPanel title=\"Settings\" visible={selectedMenu}>\r\n                    {Object.entries(data.settings).map(([key, data]) => {\r\n                        return <SettingsRow\r\n                            key={key + data.value}\r\n                            objKey={key}\r\n                            data={data}\r\n                            changeVolume={changeVolume}\r\n                            update={handleSettingChange}\r\n                        >\r\n\r\n                        </SettingsRow>\r\n                    })}\r\n                    {!checkIfTWA() && <a className=\"donate-button\" href=\"https://www.buymeacoffee.com/Specy\" target=\"_blank\">\r\n                        Support me\r\n                    </a>}\r\n                </MenuPanel>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction MenuPanel(props) {\r\n    let className = props.visible === props.title ? \"menu-panel menu-panel-visible\" : \"menu-panel\"\r\n    return <div className={className}>\r\n        <div className=\"menu-title\">\r\n            {props.title}\r\n        </div>\r\n        <div className=\"panel-content-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\nfunction CloseMenu(props) {\r\n    return <div onClick={() => props.action(false)} className=\"close-menu menu-item\">\r\n        <FontAwesomeIcon icon={faTimes} className=\"icon\" />\r\n    </div>\r\n}\r\n\r\nfunction SongRow(props) {\r\n    const { data, functions } = props\r\n    const { removeSong, toggleMenu, loadSong, downloadSong } = functions\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\" onClick={() => {\r\n            loadSong(data)\r\n            toggleMenu(false)\r\n        }}>\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => removeSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nfunction SettingsRow(props) {\r\n    const { data, update, objKey, changeVolume } = props\r\n    const [valueHook, setter] = useState(data.value)\r\n    const [volumeHook, setterVolume] = useState(data.volume)\r\n    function handleChange(e) {\r\n        let el = e.target\r\n        let value = data.type === \"checkbox\" ? el.checked : el.value\r\n        if (data.type === \"number\") {\r\n            value = Number(value)\r\n            e.target.value = \"\" //have to do this to remove a react bug that adds a 0 at the start\r\n            if (value < data.threshold[0] || value > data.threshold[1]) {\r\n                return\r\n            }\r\n        }\r\n        setter(value)\r\n    }\r\n    function sendChange() {\r\n        if (data.value === valueHook) return\r\n        data.value = valueHook\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function sendChangeSelect(e) {\r\n        let value = e.target.value\r\n        data.value = value\r\n        let obj = {\r\n            key: objKey,\r\n            data: data\r\n        }\r\n        update(obj)\r\n    }\r\n    function handleVolume(e) {\r\n        setterVolume(Number(e.target.value))\r\n    }\r\n    function sendVolumeChange() {\r\n        changeVolume({\r\n            key: objKey,\r\n            value: volumeHook\r\n        })\r\n    }\r\n    if (objKey === \"settingVesion\") return null\r\n    return <div className=\"settings-row\">\r\n        <div>\r\n            {data.name}\r\n        </div>\r\n        {data.type === \"select\"\r\n            ? <select value={data.value}\r\n                onChange={sendChangeSelect}\r\n            >\r\n                {data.options.map(e => {\r\n                    return <option value={e} key={e}>{e}</option>\r\n                })}\r\n            </select>\r\n            : null\r\n        }\r\n        {[\"number\", \"text\", \"checkbox\"].includes(data.type) ?\r\n            <input\r\n                type={data.type}\r\n                value={valueHook}\r\n                checked={valueHook}\r\n                onChange={handleChange}\r\n                onBlur={sendChange}\r\n            />\r\n            : null\r\n        }\r\n        {data.type === \"instrument\"\r\n            ? <div className=\"instrument-picker\">\r\n                <select value={data.value}\r\n                    onChange={sendChangeSelect}\r\n                >\r\n                    {data.options.map(e => {\r\n                        return <option value={e} key={e}>{e}</option>\r\n                    })}\r\n                </select>\r\n\r\n                <input\r\n                    type=\"range\"\r\n                    min={1}\r\n                    max={100}\r\n                    value={volumeHook}\r\n                    onChange={handleVolume}\r\n                    onPointerUp={sendVolumeChange}\r\n                />\r\n            </div>\r\n            : null\r\n        }\r\n    </div>\r\n}\r\n\r\nfunction checkIfTWA(){\r\n    let isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n    return isTwa\r\n  }\r\nfunction setIfInTWA(){\r\n    if(checkIfTWA()) return true\r\n    let isTwa = document.referrer.includes('android-app://')\r\n    sessionStorage.setItem('isTwa',isTwa)\r\n    return isTwa\r\n}\r\nclass MenuItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        let className = this.props.className ? `menu-item ${this.props.className}` : \"menu-item\"\r\n        return <div\r\n            className={className}\r\n            onClick={() => this.props.action(this.props.type)}\r\n        >\r\n            {this.props.children}\r\n        </div>\r\n    }\r\n}\r\nexport default Menu","import React, { Component } from 'react'\r\nimport ZangoDb from \"zangodb\"\r\nimport { faPlay, faPlus, faPause, faBars, faChevronLeft, faChevronRight, faTools } from \"@fortawesome/free-solid-svg-icons\"\r\nimport * as workerTimers from 'worker-timers';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport rotateImg from \"../../assets/icons/rotate.svg\"\r\nimport addCell from \"../../assets/icons/addCell.svg\"\r\nimport removeCell from \"../../assets/icons/removeCell.svg\"\r\nimport { appName } from \"../../appConfig\"\r\n\r\n\r\nimport ComposerTools from \"./ComposerTools\"\r\nimport ComposerKeyboard from \"./ComposerKeyboard\"\r\nimport ComposerCanvas from \"./ComposerCanvas\"\r\nimport Menu from \"./Menu\"\r\n\r\nimport { asyncConfirm, asyncPrompt } from \"../AsyncPrompts\"\r\nimport { ComposerSettings } from \"../SettingsObj\"\r\nimport Instrument from \"../Instrument\"\r\nimport {\r\n    ComposedSong, LoggerEvent, ColumnNote, Column, TempoChangers,\r\n    ComposerSongSerialization, ComposerSongDeSerialization, getPitchChanger, RecordingToComposed\r\n} from \"../SongUtils\"\r\n\r\nclass Composer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.db = new ZangoDb.Db(appName, { songs: [] })\r\n        this.dbCol = {\r\n            songs: this.db.collection(\"songs\")\r\n\r\n        }\r\n        let settings = this.getSettings()\r\n        this.playbackInterval = undefined\r\n        this.state = {\r\n            instrument: new Instrument(),\r\n            layers: [new Instrument(), new Instrument()],\r\n            audioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            reverbAudioContext: new (window.AudioContext || window.webkitAudioContext)(),\r\n            songs: [],\r\n            isPlaying: false,\r\n            song: new ComposedSong(\"Untitled\"),\r\n            settings: settings,\r\n            menuOpen: false,\r\n            layer: 1,\r\n            toolsColumns: [],\r\n            toolsVisible: false\r\n        }\r\n        this.copiedColums = []\r\n        this.changes = 0\r\n        this.syncSongs()\r\n        this.loadInstrument(settings.instrument.value, 1)\r\n        this.loadInstrument(settings.layer2.value, 2)\r\n        this.loadInstrument(settings.layer3.value, 3)\r\n        try {\r\n            this.loadReverb()\r\n        } catch(e) {\r\n            console.log(\"Error with reverb1\")\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener(\"keydown\", this.handleKeyboard)\r\n        if (window.location.hostname !== \"localhost\") {\r\n            window.addEventListener(\"beforeunload\", (event) => {\r\n                event.preventDefault()\r\n                event.returnValue = ''\r\n            })\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyboard)\r\n        let state = this.state\r\n        state.isPlaying = false\r\n    }\r\n    componentDidCatch() {\r\n        this.setState({\r\n            song: new ComposedSong(\"Untitled\")\r\n        })\r\n        new LoggerEvent(\"Warning\", \"There was an error with the song! Restoring default...\").trigger()\r\n    }\r\n    handleAutoSave = () => {\r\n        this.changes++\r\n        if (this.changes > 5 && this.state.settings.autosave.value) {\r\n            if (this.state.song.name !== \"Untitled\") {\r\n                this.updateSong(this.state.song)\r\n            }\r\n\r\n        }\r\n    }\r\n    loadReverb() {\r\n        let audioCtx = this.state.audioContext\r\n        fetch(\"./assets/audio/reverb4.wav\")\r\n            .then(r => r.arrayBuffer().catch((e) => { console.log(\"Error with reverb1\",e) }))\r\n            .then(b => audioCtx.decodeAudioData(b, (impulse_response) => {\r\n                let convolver = audioCtx.createConvolver()\r\n                let gainNode = audioCtx.createGain()\r\n                gainNode.gain.value = 2.5\r\n                convolver.buffer = impulse_response\r\n                convolver.connect(gainNode)\r\n                gainNode.connect(audioCtx.destination)\r\n                this.setState({\r\n                    reverbAudioContext: convolver\r\n                })\r\n            })).catch((e) => {\r\n                console.log(\"Error with reverb2\",e)\r\n            })\r\n    }\r\n    getSettings = () => {\r\n        let storedSettings = localStorage.getItem(appName + \"_Composer_Settings\")\r\n        try {\r\n            storedSettings = JSON.parse(storedSettings)\r\n        } catch (e) {\r\n            storedSettings = null\r\n        }\r\n        if (storedSettings !== null) {\r\n            if (storedSettings.settingVesion !== ComposerSettings.settingVesion) {\r\n                this.updateSettings(ComposerSettings)\r\n                return ComposerSettings\r\n            }\r\n            return storedSettings\r\n        }\r\n        return ComposerSettings\r\n    }\r\n    updateSettings = (override) => {\r\n        let state\r\n        if (override !== undefined) {\r\n            state = override\r\n        } else {\r\n            state = this.state.settings\r\n        }\r\n        localStorage.setItem(appName + \"_Composer_Settings\", JSON.stringify(state))\r\n    }\r\n    handleSettingChange = (setting) => {\r\n        let settings = this.state.settings\r\n        let data = setting.data\r\n        settings[setting.key].value = data.value\r\n        if (data.songSetting) {\r\n            this.state.song[setting.key] = data.value\r\n        }\r\n        if (setting.key === \"instrument\") this.loadInstrument(data.value, 1)\r\n        if (setting.key === \"layer2\") this.loadInstrument(data.value, 2)\r\n        if (setting.key === \"layer3\") this.loadInstrument(data.value, 3)\r\n        this.setState({\r\n            settings: settings,\r\n            song: this.state.song\r\n        }, () => {\r\n            this.updateSettings()\r\n        })\r\n    }\r\n    loadInstrument = async (name, layer) => {\r\n        if (layer === 1) {\r\n            let newInstrument = new Instrument(name)\r\n            await newInstrument.load(this.state.audioContext)\r\n            this.setState({\r\n                instrument: newInstrument\r\n            })\r\n        } else {\r\n            let newInstrument = new Instrument(name)\r\n            let layers = this.state.layers\r\n            layers[layer - 2] = newInstrument\r\n            await newInstrument.load(this.state.audioContext)\r\n            this.setState({\r\n                layers: layers\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n    changeVolume = (obj) => {\r\n        let settings = this.state.settings\r\n        if (obj.key === \"instrument\") {\r\n            settings.instrument.volume = obj.value\r\n            this.state.instrument.changeVolume(obj.value)\r\n        }\r\n        if (obj.key === \"layer2\") {\r\n            settings.layer2.volume = obj.value\r\n            this.state.layers[0].changeVolume(obj.value)\r\n        }\r\n        if (obj.key === \"layer3\") {\r\n            settings.layer3.volume = obj.value\r\n            this.state.layers[1].changeVolume(obj.value)\r\n        }\r\n        this.setState({\r\n            settings: settings\r\n        }, () => this.updateSettings())\r\n    }\r\n    handleKeyboard = (event) => {\r\n        let key = event.keyCode\r\n        /*\r\n            let note = this.state.instrument.layout.find(e => e.noteNames.keyboard === letter)\r\n            if (note !== undefined) {\r\n                this.handleClick(note)\r\n            }\r\n        */\r\n        if (document.activeElement.tagName === \"INPUT\") return\r\n        switch (key) {\r\n            case 68: this.selectColumn(this.state.song.selected + 1)\r\n                break;\r\n            case 65: this.selectColumn(this.state.song.selected - 1)\r\n                break;\r\n            case 49: this.handleTempoChanger(TempoChangers[0])\r\n                break;\r\n            case 50: this.handleTempoChanger(TempoChangers[1])\r\n                break;\r\n            case 51: this.handleTempoChanger(TempoChangers[2])\r\n                break;\r\n            case 52: this.handleTempoChanger(TempoChangers[3])\r\n                break;\r\n            case 32: this.togglePlay()\r\n                break;\r\n            case 81: this.removeColumns(1, this.state.song.selected)\r\n                break;\r\n            case 69: this.addColumns(1, this.state.song.selected)\r\n                break;\r\n            case \"\":\r\n                break;\r\n        }\r\n    }\r\n    playSound = (instrument, index) => {\r\n        try{\r\n            const source = this.state.audioContext.createBufferSource()\r\n            let note = instrument.layout[index]\r\n            if(note === undefined) return\r\n            source.buffer = note.buffer\r\n            source.playbackRate.value = getPitchChanger(this.state.settings.pitch.value)\r\n            source.connect(instrument.gain)\r\n            if (this.state.settings.caveMode.value) {\r\n                instrument.gain.connect(this.state.reverbAudioContext)\r\n            } else {\r\n                instrument.gain.connect(this.state.audioContext.destination)\r\n            }\r\n            source.start(0)\r\n        }catch(e){\r\n\r\n        }\r\n    }\r\n    handleClick = (note) => {\r\n        let column = this.state.song.columns[this.state.song.selected]\r\n        let index = column.notes.findIndex((n) => {\r\n            return note.index === n.index\r\n        })\r\n        let layerIndex = this.state.layer - 1\r\n        if (index < 0) { //if it doesn't exist, create a new one\r\n            let columnNote = new ColumnNote(note.index)\r\n            columnNote.layer = replaceAt(columnNote.layer, layerIndex, \"1\")\r\n            column.notes.push(columnNote)\r\n        } else { //if it exists, toggle the current layer and if it's 000 delete it\r\n            let currentNote = column.notes[index]\r\n            currentNote.layer = replaceAt(currentNote.layer, layerIndex, currentNote.layer[layerIndex] === \"0\" ? \"1\" : \"0\")\r\n            if (currentNote.layer === \"000\") column.notes.splice(index, 1)\r\n        }\r\n        this.setState({\r\n            song: this.state.song\r\n        })\r\n        this.handleAutoSave()\r\n        let instrument = this.state.instrument\r\n        if (this.state.layer > 1) {\r\n            instrument = this.state.layers[this.state.layer - 2]\r\n        }\r\n        this.playSound(instrument, note.index)\r\n    }\r\n    syncSongs = async () => {\r\n        let songs = await this.dbCol.songs.find().toArray()\r\n        songs = songs.map(song => {\r\n            if (song.data.isComposedVersion) {\r\n                return ComposerSongDeSerialization(song)\r\n            }\r\n            return song\r\n        })\r\n        this.setState({\r\n            composedSongs: songs,\r\n            songs: songs\r\n        })\r\n    }\r\n    addSong = async (song) => {\r\n        if (await this.songExists(song.name)) {\r\n            return new LoggerEvent(\"Warning\", \"A song with this name already exists! \\n\" + song.name).trigger()\r\n        }\r\n        await this.dbCol.songs.insert(ComposerSongSerialization(song))\r\n        this.syncSongs()\r\n    }\r\n    updateSong = async (song) => {\r\n        if (song.name === \"Untitled\") {\r\n            let name = await this.askForSongName()\r\n            if (name === null) return\r\n            song.name = name\r\n            return this.addSong(song)\r\n\r\n        }\r\n        return new Promise(async resolve => {\r\n            let settings = this.state.settings\r\n            if (await this.songExists(song.name)) {\r\n                song.instruments[0] = settings.instrument.value\r\n                song.instruments[1] = settings.layer2.value\r\n                song.instruments[2] = settings.layer3.value\r\n                await this.dbCol.songs.update({ name: song.name }, ComposerSongSerialization(song))\r\n                console.log(\"song saved:\", song.name)\r\n                this.changes = 0\r\n                this.syncSongs()\r\n            } else {\r\n                if(song.name.includes(\"- Composed\")){\r\n                    let name = await this.askForSongName()\r\n                    if (name === null) return resolve()\r\n                    song.name = name\r\n                    await this.dbCol.songs.insert(ComposerSongSerialization(song))\r\n                    this.syncSongs()\r\n                    return resolve()\r\n                }\r\n                console.log(\"song doesn't exist\")\r\n                song.name = \"Untitled\"\r\n                this.updateSong(song)\r\n            }\r\n            resolve()\r\n        })\r\n    }\r\n    askForSongName = () => {\r\n        return new Promise(async resolve => {\r\n            let promptString = \"Write song name, press cancel to ignore\"\r\n            while (true) {\r\n                let songName = await asyncPrompt(promptString)\r\n                if (songName === null) return resolve(null)\r\n                if (songName !== \"\") {\r\n                    if (await this.songExists(songName)) {\r\n                        promptString = \"This song already exists: \" + songName\r\n                    } else {\r\n                        return resolve(songName)\r\n                    }\r\n                } else {\r\n                    promptString = \"Write song name, press cancel to ignore\"\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n    askForSongUpdate = () => {\r\n        return new Promise(async resolve => {\r\n            let result = await asyncConfirm(`You have unsaved changes to the song: \"${this.state.song.name}\" do you want to save now?`)\r\n            resolve(result)\r\n        })\r\n    }\r\n    songExists = async (name) => {\r\n        return await this.dbCol.songs.findOne({ name: name }) !== undefined\r\n    }\r\n    createNewSong = async () => {\r\n        if (this.state.song.name !== \"Untitled\" && this.changes > 0) {\r\n            let wantsToSave = await this.askForSongUpdate()\r\n            if (wantsToSave) {\r\n                await this.updateSong(this.state.song)\r\n            }\r\n        }\r\n        let name = await this.askForSongName()\r\n        if (name === null) return\r\n        let song = new ComposedSong(name)\r\n        this.changes = 0\r\n        this.setState({\r\n            song: song\r\n        }, () => this.addSong(song))\r\n    }\r\n    removeSong = async (name) => {\r\n        let confirm = await asyncConfirm(\"Are you sure you want to delete the song: \" + name)\r\n        if (confirm) this.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n    }\r\n\r\n    loadSong = async (song) => {\r\n        const state = this.state\r\n        song = JSON.parse(JSON.stringify(song)) //lose reference\r\n        if (!song.data.isComposedVersion) {\r\n            song = RecordingToComposed(song)\r\n            song.name += \" - Composed\"\r\n        }\r\n        if (this.changes !== 0) {\r\n            let confirm = state.settings.autosave.value && state.song.name !== \"Untitled\"\r\n            if (!confirm && state.song.columns.length > 0) {\r\n                confirm = await asyncConfirm(`You have unsaved changes to the song: \"${state.song.name}\" do you want to save? UNSAVED CHANGES WILL BE LOST`)\r\n            }\r\n            if (confirm) await this.updateSong(state.song)\r\n        }\r\n\r\n        let settings = this.state.settings\r\n        settings.bpm.value = song.bpm\r\n        settings.pitch.value = song.pitch\r\n        if (settings.instrument.value !== song.instruments[0]) {\r\n            this.loadInstrument(song.instruments[0], 1)\r\n            settings.instrument.value = song.instruments[0]\r\n        }\r\n        if (settings.layer2.value !== song.instruments[1]) {\r\n            this.loadInstrument(song.instruments[1], 2)\r\n            settings.layer2.value = song.instruments[1]\r\n        }\r\n        if (settings.layer3.value !== song.instruments[2]) {\r\n            this.loadInstrument(song.instruments[2], 3)\r\n            settings.layer3.value = song.instruments[2]\r\n        }\r\n        this.changes = 0\r\n        this.setState({\r\n            song: song,\r\n            settings: settings,\r\n            toolsColumns: []\r\n        })\r\n    }\r\n\r\n    addColumns = (amount = 1, position = \"end\") => {\r\n        return new Promise(resolve => {\r\n            let columns = new Array(amount).fill().map(() => new Column())\r\n            let songColumns = this.state.song.columns\r\n            if (position === \"end\") {\r\n                songColumns.push(...columns)\r\n            } else {\r\n                songColumns.splice(position + 1, 0, ...columns)\r\n            }\r\n            if (amount === 1) this.selectColumn(this.state.song.selected + 1)\r\n            this.handleAutoSave()\r\n            this.setState({\r\n                song: this.state.song\r\n            }, resolve)\r\n        })\r\n\r\n    }\r\n    removeColumns = (amount, position) => {\r\n        let song = this.state.song\r\n        if (song.columns.length < 16) return\r\n        let indexes = new Array(amount).fill().map((e, i) => position + i)\r\n        indexes.forEach(index => {\r\n            if (song.breakpoints.includes(index)) this.toggleBreakpoint(index)\r\n        })\r\n        song.columns.splice(position, amount)\r\n        if (song.columns.length <= song.selected) this.selectColumn(song.selected - 1)\r\n        this.handleAutoSave()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    //----------------------------------------------//\r\n\r\n    togglePlay = async (override) => {\r\n        let newState = typeof override === \"boolean\" ? override : !this.state.isPlaying\r\n        this.setState({\r\n            isPlaying: newState\r\n        }, async () => {\r\n            if (this.state.isPlaying) this.selectColumn(this.state.song.selected)\r\n            let pastError = 0\r\n            let previousTime = new Date().getTime()\r\n            while (this.state.isPlaying) {\r\n                const { song, settings } = this.state\r\n                let tempoChanger = TempoChangers[song.columns[song.selected].tempoChanger]\r\n                let msPerBPM = Math.floor(60000 / settings.bpm.value * tempoChanger.changer) + pastError\r\n                previousTime = new Date().getTime()\r\n                await delayMs(msPerBPM)\r\n                if (!this.state.isPlaying) break\r\n                this.handleTick()\r\n                pastError = previousTime + msPerBPM - new Date().getTime()\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    handleTick = () => {\r\n        let newIndex = this.state.song.selected + 1\r\n        if (this.state.isPlaying && newIndex > this.state.song.columns.length - 1) {\r\n            return this.togglePlay(false)\r\n        }\r\n        this.selectColumn(this.state.song.selected + 1)\r\n\r\n    }\r\n    toggleMenuVisible = () => {\r\n        this.setState({\r\n            menuOpen: !this.state.menuOpen\r\n        })\r\n    }\r\n    toggleBreakpoint = (override) => {\r\n        let song = this.state.song\r\n        let index = typeof override === \"number\" ? override : song.selected\r\n        let indexOfBreakpoint = song.breakpoints.indexOf(index)\r\n        if (indexOfBreakpoint >= 0 && song.columns.length > index) {\r\n            song.breakpoints.splice(indexOfBreakpoint, 1)\r\n        } else if (song.columns.length > index) {\r\n            song.breakpoints.push(index)\r\n        }\r\n        this.validateBreakpoints()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    handleTempoChanger = (changer) => {\r\n        let song = this.state.song\r\n        song.columns[this.state.song.selected].tempoChanger = changer.id\r\n        this.handleAutoSave()\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    changePage = async (page) => {\r\n        if (this.changes !== 0) {\r\n            let confirm = await asyncConfirm(`You have unsaved changes to the song: \"${this.state.song.name}\" do you want to save? UNSAVED CHANGES WILL BE LOST`)\r\n            if (confirm) {\r\n                await this.updateSong(this.state.song)\r\n            }\r\n        }\r\n\r\n        this.props.changePage(page)\r\n    }\r\n    selectColumn = (index, ignoreAudio) => {\r\n        const state = this.state\r\n        let song = state.song\r\n        if (index < 0 || index > song.columns.length - 1) return\r\n        let currentColumn = state.song.columns[index]\r\n        song.selected = index\r\n        let toolsColumns = state.toolsColumns\r\n        if (state.toolsVisible && this.copiedColums.length === 0) {\r\n            toolsColumns.push(index)\r\n            let min = Math.min(...toolsColumns)\r\n            let max = Math.max(...toolsColumns)\r\n            toolsColumns = new Array(max - min + 1).fill().map((e, i) => min + i)\r\n        }\r\n        this.setState({\r\n            song: song,\r\n            toolsColumns: toolsColumns\r\n        })\r\n\r\n        if (ignoreAudio) return\r\n        currentColumn.notes.forEach(note => {\r\n            if (note.layer[0] === \"1\") this.playSound(state.instrument, note.index)\r\n            if (note.layer[1] === \"1\") this.playSound(state.layers[0], note.index)\r\n            if (note.layer[2] === \"1\") this.playSound(state.layers[1], note.index)\r\n        })\r\n    }\r\n    changeLayer = (layer) => {\r\n        this.setState({\r\n            layer: layer\r\n        })\r\n    }\r\n    //-----------------------TOOLS---------------------//\r\n    toggleTools = () => {\r\n        this.setState({\r\n            toolsVisible: !this.state.toolsVisible,\r\n            toolsColumns: this.state.toolsVisible ? [] : [this.state.song.selected]\r\n        })\r\n        this.copiedColums = []\r\n    }\r\n    copyColumns = (layer) => {\r\n        this.copiedColums = []\r\n        this.state.toolsColumns.forEach((index) => {\r\n            let column = this.state.song.columns[index]\r\n            if (column !== undefined) this.copiedColums.push(column)\r\n        })\r\n        this.copiedColums = JSON.parse(JSON.stringify(this.copiedColums)) // removing reference\r\n        if (layer !== 'all') {\r\n            this.copiedColums = this.copiedColums.map(column => {\r\n                column.notes = column.notes.filter(e => e.layer[layer - 1] === '1')\r\n                column.notes = column.notes.map(e => {\r\n                    e.layer = '000'\r\n                    e.layer = replaceAt(e.layer, layer - 1, '1')\r\n                    return e\r\n                })\r\n                return column\r\n            })\r\n        }\r\n        this.setState({\r\n            toolsColumns: []\r\n        })\r\n    }\r\n    pasteColumns = async (insert) => {\r\n        let song = this.state.song\r\n        let copiedColumns = JSON.parse(JSON.stringify(this.copiedColums))\r\n        if (!insert) {\r\n            song.columns.splice(song.selected, 0, ...copiedColumns)\r\n        } else {\r\n            copiedColumns.forEach((copiedColumn, i) => {\r\n                let column = song.columns[song.selected + i]\r\n                if (column !== undefined) {\r\n                    copiedColumn.notes.forEach(copiedNote => {\r\n                        let index = column.notes.findIndex(note => copiedNote.index === note.index)\r\n                        if (index < 0) {\r\n                            column.notes.push(copiedNote)\r\n                        } else {\r\n                            for (let j = 0; j < 3; j++) {\r\n                                if (copiedNote.layer[j] === '1') {\r\n                                    column.notes[index].layer = replaceAt(column.notes[index].layer, j, 1)\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    eraseColumns = (layer) => {\r\n        let song = this.state.song\r\n        if(layer === 'all'){\r\n            this.state.toolsColumns.forEach(columnIndex => {\r\n                let column = song.columns[columnIndex]\r\n                if (column !== undefined) song.columns[columnIndex].notes = []\r\n            })\r\n        }else{\r\n            this.state.toolsColumns.forEach(columnIndex => {\r\n                let column = song.columns[columnIndex]\r\n                if (column !== undefined){\r\n                    song.columns[columnIndex].notes.forEach(note =>{\r\n                        note.layer = replaceAt(note.layer,layer-1,'0')\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    validateBreakpoints = () => {\r\n        let breakpoints = this.state.song.breakpoints.filter(breakpoint => breakpoint < this.state.song.columns.length)\r\n        let song = this.state.song\r\n        song.breakpoints = breakpoints\r\n        this.setState({\r\n            song: song\r\n        })\r\n    }\r\n    deleteColumns = async () => {\r\n        let song = this.state.song\r\n        song.columns = song.columns.filter((e, i) => !this.state.toolsColumns.includes(i))\r\n        if (song.selected > song.columns.length - 1) song.selected = song.columns.length - 1\r\n        if (song.selected <= 0) song.selected = 0\r\n        if (song.columns.length === 0) await this.addColumns(12, 0)\r\n        this.setState({\r\n            song: song,\r\n            toolsColumns: []\r\n        }, this.validateBreakpoints)\r\n    }\r\n    render() {\r\n\r\n        const { state, props } = this\r\n        let song = state.song\r\n        let menuData = {\r\n            songs: state.songs,\r\n            currentSong: state.song,\r\n            settings: state.settings,\r\n            hasChanges: this.changes,\r\n            menuOpen: state.menuOpen\r\n        }\r\n        let menuFunctions = {\r\n            loadSong: this.loadSong,\r\n            removeSong: this.removeSong,\r\n            createNewSong: this.createNewSong,\r\n            changePage: this.changePage,\r\n            updateSong: this.updateSong,\r\n            handleSettingChange: this.handleSettingChange,\r\n            toggleMenuVisible: this.toggleMenuVisible,\r\n            changeVolume: this.changeVolume\r\n        }\r\n        let keyboardFunctions = {\r\n            handleClick: this.handleClick,\r\n            handleTempoChanger: this.handleTempoChanger,\r\n            changeLayer: this.changeLayer\r\n        }\r\n        let keyboardData = {\r\n            keyboard: state.instrument,\r\n            currentColumn: state.song.columns[state.song.selected],\r\n            TempoChangers: TempoChangers,\r\n            layer: state.layer,\r\n            pitch: state.settings.pitch.value,\r\n            isPlaying: state.isPlaying\r\n        }\r\n        let canvasFunctions = {\r\n            selectColumn: this.selectColumn,\r\n            toggleBreakpoint: this.toggleBreakpoint\r\n        }\r\n        let canvasData = {\r\n            columns: song.columns,\r\n            selected: song.selected,\r\n            settings: state.settings,\r\n            breakpoints: state.song.breakpoints,\r\n            toolsColumns: state.toolsColumns\r\n        }\r\n        let toolsData = {\r\n            visible: this.state.toolsVisible,\r\n            copiedColumns: this.copiedColums,\r\n            layer: this.state.layer\r\n        }\r\n        let toolsFunctions = {\r\n            toggleTools: this.toggleTools,\r\n            eraseColumns: this.eraseColumns,\r\n            deleteColumns: this.deleteColumns,\r\n            copyColumns: this.copyColumns,\r\n            pasteColumns: this.pasteColumns\r\n        }\r\n        return <div className=\"app\">\r\n            <div className=\"hamburger\" onClick={this.toggleMenuVisible}>\r\n                <FontAwesomeIcon icon={faBars} />\r\n\r\n            </div>\r\n            <div className=\"rotate-screen\">\r\n                <img src={rotateImg}>\r\n                </img>\r\n                    For a better experience, add the website to the home screen, and rotate your device\r\n            </div>\r\n\r\n            <div className=\"right-panel-composer\">\r\n\r\n                <div className=\"column fill-x\">\r\n\r\n                    <div className=\"top-panel-composer\">\r\n                        <div className=\"buttons-composer-wrapper\">\r\n                            <div className=\"tool\" onClick={() => this.selectColumn(song.selected + 1)}>\r\n                                <FontAwesomeIcon icon={faChevronRight} />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.selectColumn(song.selected - 1)}>\r\n                                <FontAwesomeIcon icon={faChevronLeft} />\r\n                            </div>\r\n\r\n                            <div className=\"tool\" onClick={this.togglePlay}>\r\n                                <FontAwesomeIcon icon={this.state.isPlaying ? faPause : faPlay} />\r\n                            </div>\r\n                        </div>\r\n                        <ComposerCanvas\r\n                            key={this.state.settings.columnsPerCanvas.value}\r\n                            functions={canvasFunctions}\r\n                            data={canvasData}\r\n                        />\r\n                        <div className=\"buttons-composer-wrapper-right\">\r\n\r\n                            <div className=\"tool\" onClick={() => this.addColumns(1, song.selected)}>\r\n                                <img src={addCell} className=\"tool-icon\" />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.removeColumns(1, song.selected)}>\r\n                                <img src={removeCell} className=\"tool-icon\" />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={() => this.addColumns(this.state.settings.beatMarks.value * 4, \"end\")}>\r\n                                <FontAwesomeIcon icon={faPlus} />\r\n                            </div>\r\n                            <div className=\"tool\" onClick={this.toggleTools}>\r\n                                <FontAwesomeIcon icon={faTools} />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <ComposerKeyboard\r\n                    functions={keyboardFunctions}\r\n                    data={keyboardData}\r\n                />\r\n            </div>\r\n            <Menu\r\n                data={menuData}\r\n                functions={menuFunctions}\r\n            />\r\n            <ComposerTools\r\n                data={toolsData}\r\n                functions={toolsFunctions}\r\n            />\r\n            <div className=\"song-info\">\r\n                <div>\r\n                    {song.name}\r\n                </div>\r\n                <div>\r\n                    {formatMillis(calculateLength(this.state.song, this.state.song.selected))}\r\n                     /\r\n                    {formatMillis(calculateLength(this.state.song, this.state.song.columns.length))}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\nfunction formatMillis(millis) {\r\n    var minutes = Math.floor(millis / 60000);\r\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n}\r\nfunction calculateLength(song, end) {\r\n    let columns = song.columns\r\n    let bpmPerMs = Math.floor(60000 / song.bpm)\r\n    let totalLength = 0\r\n    columns.forEach((column, i) => {\r\n        if (i > end) return\r\n        totalLength += bpmPerMs * TempoChangers[column.tempoChanger].changer\r\n    })\r\n    return totalLength\r\n}\r\nfunction delayMs(ms) {\r\n    return new Promise(resolve => {\r\n        workerTimers.setTimeout(resolve, ms)\r\n    })\r\n}\r\nfunction replaceAt(string, index, replacement) {\r\n    if (index >= string.length) {\r\n        return string.valueOf();\r\n    }\r\n\r\n    return string.substring(0, index) + replacement + string.substring(index + 1);\r\n}\r\nexport default Composer\r\n\r\n","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport ZangoDb from \"zangodb\"\r\nimport { FileDownloader, LoggerEvent } from \"./SongUtils\"\r\nimport { asyncConfirm } from \"./AsyncPrompts\"\r\nimport { appName } from \"../appConfig\"\r\nclass ErrorPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.db = new ZangoDb.Db(appName, { songs: [] })\r\n        this.dbCol = {\r\n            songs: this.db.collection(\"songs\")\r\n\r\n        }\r\n        this.state = {\r\n            songs: []\r\n        }\r\n        this.syncSongs()\r\n    }\r\n    syncSongs = async () => {\r\n        let songs = await this.dbCol.songs.find().toArray()\r\n        this.setState({\r\n            songs: songs\r\n        })\r\n    }\r\n    deleteSong = async (name) => {\r\n        if (await asyncConfirm(\"Are you sure you want to delete the song: \" + name)) {\r\n            this.dbCol.songs.remove({ name: name }, this.syncSongs)\r\n        }\r\n\r\n    }\r\n    deleteAllSongs = async () =>{\r\n        if (await asyncConfirm(\"Are you sure you want to delete ALL SONGS?\")) {\r\n            this.dbCol.songs.remove({}, this.syncSongs)\r\n        }\r\n    }\r\n    resetSettings = () => {\r\n        localStorage.removeItem(appName+\"_Composer_Settings\")\r\n        localStorage.removeItem(appName+\"_Main_Settings\")\r\n        new LoggerEvent(\"Success\", \"Settings have been reset\").trigger()\r\n    }\r\n    downloadSong = (song) => {\r\n        if (song._id) delete song._id\r\n        let json = JSON.stringify(song)\r\n        let fileDownloader = new FileDownloader()\r\n        fileDownloader.download(json, `${song.name}.${appName.toLowerCase()}sheet.json`)\r\n    }\r\n    render() {\r\n        return <div className=\"error-page app\">\r\n            <div className=\"error-text-wrapper\">\r\n                There seems to be an error. <br />\r\n                Here you can download or delete your songs,\r\n                try to find what song caused the error and remove it.\r\n            </div>\r\n            <div className=\"error-buttons-wrapper\">\r\n                <button className=\"genshin-button\" onClick={this.resetSettings}>\r\n                    Reset settings\r\n                </button>\r\n                <button className=\"genshin-button\" onClick={this.deleteAllSongs}>\r\n                    Delete all songs\r\n                </button>\r\n            </div>\r\n            <div className=\"error-songs-wrapper\">\r\n                {this.state.songs.map(song => {\r\n                    return <SongRow\r\n                        data={song}\r\n                        functions={\r\n                            {\r\n                                deleteSong: this.deleteSong,\r\n                                downloadSong: this.downloadSong\r\n                            }\r\n                        }\r\n                    >\r\n\r\n                    </SongRow>\r\n                })}\r\n            </div>\r\n            <button\r\n                className=\"error-go-back genshin-button\"\r\n                onClick={() => this.props.changePage(\"\")}\r\n            >\r\n                Go back to main page\r\n            </button>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction SongRow(props) {\r\n    let data = props.data\r\n    let deleteSong = props.functions.deleteSong\r\n    let downloadSong = props.functions.downloadSong\r\n    return <div className=\"song-row\">\r\n        <div className=\"song-name\">\r\n            {data.name}\r\n        </div>\r\n        <div className=\"song-buttons-wrapper\">\r\n            <button className=\"song-button\" onClick={() => downloadSong(data)}>\r\n                <FontAwesomeIcon icon={faDownload} />\r\n\r\n            </button>\r\n            <button className=\"song-button\" onClick={() => deleteSong(data.name)}>\r\n                <FontAwesomeIcon icon={faTrash} color=\"#ed4557\" />\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ErrorPage","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/mainPage/App';\r\nimport Composer from \"./Components/Composer/Composer\"\r\nimport ErrorPage from \"./Components/ErrorPage\"\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport \"./Components/mainPage/App.css\"\r\nimport { HashRouter, Route, Redirect } from \"react-router-dom\";\r\nimport { LoggerEvent } from \"./Components/SongUtils\"\r\nimport {appName} from \"./appConfig\"\r\nconst getBasename = path => path.substr(0, path.lastIndexOf('/'));\r\nlet pages = [\"\", \"Composer\", \"ErrorPage\"]\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    let path = window.location.href.split(\"/\")\r\n    path = path.length === 0 ? \"\" : path = path[path.length - 1]\r\n    if (!pages.includes(path)) path = \"\"\r\n    this.state = {\r\n      floatingMessage: {\r\n        timestamp: 0,\r\n        visible: false,\r\n        text: \"Text\",\r\n        title: \"Title\"\r\n      },\r\n      hasVisited: localStorage.getItem(appName+\"_Visited\"),\r\n      hasPersistentStorage: navigator.storage && navigator.storage.persist,\r\n      selectedPage: path\r\n    }\r\n    this.checkUpdate()\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('logEvent', this.logEvent);\r\n  }\r\n  changePage = (page) => {\r\n    this.setState({\r\n      selectedPage: page\r\n    })\r\n  }\r\n  componentDidCatch() {\r\n    this.setState({\r\n      selectedPage: \"ErrorPage\"\r\n    })\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('logEvent', this.logEvent);\r\n  }\r\n  askForStorage = async () => {\r\n    try {\r\n      if (navigator.storage && navigator.storage.persist) {\r\n        let result = await navigator.storage.persist()\r\n        if (result) {\r\n          new LoggerEvent(\"Success\", \"Storage permission allowed\").trigger()\r\n        } else {\r\n          new LoggerEvent(\"Warning\", \"Storage permission refused, if you weren't prompt, your browser denied it for you. Don't worry, it will still work fine\",6000).trigger()\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      new LoggerEvent(\"Error\", \"There was an error with setting up persistent storage\").trigger()\r\n    }\r\n    this.closeWelcomeScreen()\r\n  }\r\n  closeWelcomeScreen = () => {\r\n    localStorage.setItem(appName+\"_Visited\", true)\r\n    this.setState({\r\n      hasVisited: true\r\n    })\r\n  }\r\n  hideMessage = () => {\r\n    let state = this.state\r\n    state.floatingMessage.visible = false\r\n    this.setState({\r\n      floatingMessage: state.floatingMessage\r\n    })\r\n  }\r\n  checkUpdate = () => {\r\n    setTimeout(() => {\r\n      let currentVersion = 1.2\r\n      let updateMessage =\r\n        `\r\n          Added song library integration with 700 songs from the sky music library\r\n        `\r\n      let storedVersion = localStorage.getItem(appName+\"_Version\")\r\n      if (currentVersion != storedVersion) {\r\n        console.log(\"update\")\r\n        new LoggerEvent(\"Update V\" + currentVersion, updateMessage, 6000).trigger()\r\n        localStorage.setItem(appName+\"_Version\", currentVersion)\r\n      }\r\n    }, 1000)\r\n  }\r\n  logEvent = (error) => {\r\n    error = error.detail\r\n    error.timestamp = new Date().getTime()\r\n    if (typeof error !== \"object\") return\r\n    this.setState({\r\n      floatingMessage: {\r\n        timestamp: error.timestamp,\r\n        visible: true,\r\n        text: error.text,\r\n        title: error.title\r\n      }\r\n    })\r\n    setTimeout(() => {\r\n      if (this.state.floatingMessage.timestamp !== error.timestamp) return\r\n      this.setState({\r\n        floatingMessage: {\r\n          timestamp: 0,\r\n          visible: false,\r\n          text: \"\",\r\n          title: \"\"\r\n        }\r\n      })\r\n    }, error.timeout)\r\n  }\r\n  render() {\r\n    let floatingMessage = this.state.floatingMessage\r\n    let floatingMessageClass = floatingMessage.visible ? \"floating-message floating-message-visible\" : \"floating-message\"\r\n    let baseName = getBasename(window.location.pathname).replace(\"//\", \"/\")\r\n    return <div className=\"index\">\r\n      <div className={floatingMessageClass} onClick={this.hideMessage}>\r\n        <div className=\"floating-message-title\">\r\n          {floatingMessage.title}\r\n        </div>\r\n        <div className=\"floating-message-text\">\r\n          {floatingMessage.text}\r\n        </div>\r\n      </div>\r\n      {[null, false, \"false\"].includes(this.state.hasVisited) ?\r\n        <div className=\"welcome-message\">\r\n          <div className={\"welcome-message-title\"}>Welcome to {appName} music {appName===\"Sky\" ? \"nightly\" : \"\"}</div>\r\n          <div>\r\n            This is a webapp which is run in your browser, if you currently are on one, please add\r\n            the website to the homescreen to have a fullscreen view and a more \"app\" feel.\r\n            <br /><br />\r\n            <div className=\"red-text\">WARNING</div>: Clearing your browser cache / storage might also delete your songs, make sure to\r\n            make a backup sometimes.\r\n            <br /><br />\r\n            {this.state.hasPersistentStorage ?\r\n              <div>\r\n                To prevent your browser from automatically clearing the app storage, click the \"confirm\" button below, if asked,\r\n                allow permission to keep the website data (Persistent storage).\r\n              </div>\r\n\r\n              : null}\r\n\r\n\r\n\r\n          </div>\r\n          <div className=\"welcome-message-button-wrapper\">\r\n            <button className=\"welcome-message-button\" onClick={this.askForStorage}>\r\n              Confirm\r\n                </button>\r\n          </div>\r\n        </div> : null\r\n      }\r\n      <HashRouter>\r\n        <Redirect to={\"/\" + this.state.selectedPage}></Redirect>\r\n        {this.state.selectedPage === \"ErrorPage\"\r\n          ? <Route exact path={\"/ErrorPage\"}>\r\n            <ErrorPage changePage={this.changePage} />\r\n          </Route>\r\n          : <>\r\n            <Route exact path=\"/\">\r\n              <App changePage={this.changePage} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/Composer\">\r\n              <Composer changePage={this.changePage} />\r\n            </Route>\r\n\r\n          </>\r\n        }\r\n\r\n      </HashRouter>\r\n    </div>\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Index />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nfunction checkIfTWA(){\r\n  let isTwa = JSON.parse(sessionStorage.getItem('isTwa'))\r\n  return isTwa\r\n}\r\n\r\nfunction setIfInTWA(){\r\n  if(checkIfTWA()) return console.log('inTWA')\r\n  let isTwa = document.referrer.includes('android-app://')\r\n  sessionStorage.setItem('isTwa',isTwa)\r\n}\r\n\r\nsetIfInTWA()\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n"],"sourceRoot":""}